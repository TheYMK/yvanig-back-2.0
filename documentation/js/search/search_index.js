var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,2.579,1,2.114]],["body/guards/AdminGuard.html",[1,3.508,2,3.494,3,0.348,4,0.348,5,0.307,6,3.963,7,3.223,8,5.609,9,0.39,10,1.741,11,4.853,12,3.952,13,0.525,14,4.674,15,1.514,16,0.025,17,1.175,18,0.348,19,1.421,20,2.865,21,1.421,22,2.405,23,0.348,24,1.032,25,0.348,26,0.126,27,1.964,28,2.103,29,3.494,30,3.963,31,2.004,32,2.979,33,4.674,34,3.494,35,2.103,36,0.02,37,0.02]],["title/controllers/AppController.html",[38,1.552,39,2.32]],["body/controllers/AppController.html",[3,0.36,4,0.36,5,0.317,9,0.403,10,1.777,13,0.543,16,0.025,18,0.36,21,1.47,23,0.435,24,1.067,25,0.36,26,0.13,31,1.566,36,0.02,37,0.02,38,2.629,39,3.931,40,2.176,41,4.1,42,6.524,43,1.215,44,4.836,45,4.1,46,3.536,47,4.1,48,2.176,49,4.836,50,4.1,51,1.215,52,4.836]],["title/modules/AppModule.html",[53,1.667,54,2.32]],["body/modules/AppModule.html",[3,0.273,4,0.273,5,0.241,10,1.115,13,0.412,15,1.188,16,0.025,17,0.922,18,0.273,19,1.115,21,1.115,23,0.494,24,0.81,25,0.273,26,0.099,27,1.541,35,2.205,36,0.017,37,0.017,39,3.713,40,2.205,46,3.557,47,3.11,48,1.651,53,2.368,54,4.579,55,1.909,56,2.551,57,3.11,58,3.11,59,3.11,60,3.557,61,3.871,62,3.871,63,3.004,64,2.065,65,1.772,66,2.742,67,3.297,68,3.297,69,3.11,70,4.155,71,4.995,72,3.668,73,4.155,74,2.742,75,4.901,76,3.668,77,4.679,78,2.742,79,4.901,80,3.11,81,2.467,82,1.772,83,3.664,84,3.11,85,2.467,86,3.668,87,3.668,88,3.668,89,3.668,90,3.668,91,3.668,92,3.668,93,3.668,94,3.668,95,3.668,96,3.668,97,1.351,98,3.668,99,3.668,100,3.668,101,3.668,102,3.668]],["title/injectables/AppService.html",[46,1.942,103,1.118]],["body/injectables/AppService.html",[3,0.366,4,0.366,5,0.322,9,0.41,10,1.794,13,0.552,16,0.025,18,0.366,21,1.494,23,0.366,24,1.085,25,0.366,26,0.133,31,1.592,36,0.021,37,0.021,45,4.166,46,3.322,50,5.002,51,1.235,103,1.911,104,2.557,105,4.166,106,6.559,107,4.914,108,4.914,109,3.673,110,4.166,111,4.914]],["title/guards/AuthGuard.html",[0,2.579,112,2.32]],["body/guards/AuthGuard.html",[2,3.549,3,0.353,4,0.353,5,0.312,7,3.254,8,5.633,9,0.396,10,1.757,11,4.899,12,3.973,13,0.533,15,1.538,16,0.025,17,1.193,18,0.353,19,1.444,20,2.909,21,1.444,23,0.353,24,1.048,25,0.353,26,0.128,27,1.995,28,2.136,29,3.549,31,1.538,36,0.02,37,0.02,112,3.887,113,4.025,114,2.617,115,4.748,116,2.293,117,4.748,118,4.748,119,3.549,120,4.748]],["title/injectables/AuthService.html",[103,1.118,121,1.942]],["body/injectables/AuthService.html",[3,0.103,4,0.103,5,0.091,9,0.115,10,0.709,13,0.481,15,1.388,16,0.025,17,1.077,18,0.319,19,1.303,21,1.202,23,0.371,24,0.305,25,0.103,26,0.037,27,2.549,31,1.281,35,1.358,36,0.008,37,0.008,51,1.495,77,3.865,78,1.034,97,1.997,103,0.755,104,0.72,109,3.579,110,3.003,114,2.406,116,1.711,121,1.312,122,1.034,123,1.976,124,1.976,125,1.976,126,1.976,127,1.976,128,1.312,129,1.173,130,2.07,131,4.559,132,1.383,133,2.33,134,2.559,135,1.383,136,3.066,137,1.742,138,2.33,139,1.995,140,1.383,141,1.567,142,2.33,143,1.383,144,2.613,145,2.33,146,1.383,147,2.33,148,2.899,149,1.383,150,0.72,151,0.931,152,0.72,153,1.173,154,0.931,155,1.034,156,1.034,157,1.383,158,0.72,159,1.034,160,1.383,161,1.742,162,1.383,163,1.383,164,1.383,165,1.383,166,1.741,167,0.72,168,1.173,169,2.031,170,2.33,171,1.976,172,2.33,173,2.33,174,1.383,175,1.383,176,5.423,177,3.542,178,3.019,179,1.383,180,3.542,181,3.954,182,2.33,183,1.383,184,1.383,185,1.383,186,1.383,187,1.383,188,3.954,189,1.383,190,2.33,191,1.383,192,1.383,193,2.33,194,1.383,195,5.295,196,2.33,197,1.383,198,1.383,199,2.33,200,2.383,201,2.33,202,2.33,203,5.808,204,4.285,205,2.33,206,5.15,207,4.285,208,2.33,209,4.788,210,3.542,211,4.148,212,3.542,213,4.285,214,2.33,215,2.33,216,4.788,217,5.423,218,4.285,219,2.33,220,4.285,221,2.33,222,2.33,223,3.542,224,3.542,225,4.366,226,2.33,227,3.542,228,2.33,229,2.33,230,2.33,231,2.33,232,3.542,233,2.33,234,2.33,235,3.542,236,2.33,237,2.33,238,2.33,239,2.33,240,2.33,241,2.33,242,3.542,243,2.33,244,2.33,245,2.33,246,2.33,247,2.33,248,1.976,249,2.33,250,3.019,251,1.383,252,1.383,253,2.33,254,2.33,255,2.33,256,2.33,257,2.33,258,2.33,259,2.33,260,2.33,261,4.285,262,2.33,263,2.33,264,2.33,265,2.33,266,3.542,267,2.33,268,2.33,269,2.33,270,2.33,271,2.33,272,2.33,273,3.117,274,1.976,275,2.33,276,2.33,277,3.352,278,1.976,279,2.33,280,2.756,281,2.257,282,1.571,283,2.33,284,3.542,285,3.542,286,1.383,287,1.383,288,1.383,289,1.383,290,1.383,291,1.383,292,1.383,293,1.383,294,2.33,295,1.383,296,1.383,297,4.285,298,2.383,299,1.383,300,2.383,301,2.383,302,3.003,303,2.33,304,1.567,305,3.019,306,1.383,307,1.173,308,2.33,309,1.383,310,1.173,311,1.034,312,4.788,313,1.976,314,2.33,315,3.542,316,5.423,317,2.33,318,1.976,319,1.383,320,3.019,321,3.019,322,1.976,323,2.33,324,3.542,325,3.019,326,1.173,327,1.213,328,1.383,329,1.383,330,1.383,331,1.034,332,0.848,333,1.383,334,1.383,335,1.213,336,2.33,337,1.383,338,1.383,339,1.173,340,1.173,341,1.383,342,1.383,343,1.383,344,2.33,345,1.383,346,0.72]],["title/interfaces/ClassConstructor.html",[347,1.795,348,2.114]],["body/interfaces/ClassConstructor.html",[3,0.308,4,0.308,5,0.272,7,2.333,12,3.253,16,0.025,20,3.253,23,0.459,24,0.915,25,0.395,26,0.143,28,2.388,31,1.897,35,1.864,36,0.019,37,0.019,48,1.864,65,2.564,97,1.525,137,3.097,141,3.57,347,2.156,348,3.785,349,3.097,350,2.787,351,3.513,352,4.5,353,4.5,354,4.5,355,3.097,356,3.513,357,3.513,358,3.513,359,2.539,360,3.513,361,3.097,362,3.097,363,3.513,364,3.513,365,2.787,366,3.097,367,3.513,368,2.787,369,4.5,370,3.253,371,5.236,372,3.513,373,4.5,374,4.5,375,4.5,376,3.513,377,3.513,378,3.57,379,3.968,380,3.513,381,3.513]],["title/classes/CreateFlightDto.html",[26,0.093,382,2.114]],["body/classes/CreateFlightDto.html",[3,0.142,4,0.142,5,0.126,9,0.16,13,0.71,16,0.025,17,1.257,18,0.507,22,1.81,23,0.226,25,0.142,26,0.135,32,0.997,36,0.011,37,0.011,43,1.589,51,1.751,382,1.864,383,0.661,384,5.402,385,1.432,386,0.815,387,3.513,388,2.828,389,2.828,390,2.828,391,2.828,392,2.828,393,2.828,394,2.375,395,3.92,396,2.828,397,2.828,398,3.92,399,2.828,400,3.513,401,2.828,402,2.828,403,2.828,404,3.054,405,1.944,406,2.579,407,1.624,408,5.003,409,1.915,410,2.64,411,3.652,412,3.652,413,3.652,414,3.042,415,1.915,416,2.426,417,2.579,418,1.915,419,1.624,420,2.093,421,2.579,422,1.864,423,2.579,424,1.915,425,1.915,426,2.579,427,2.579,428,2.579,429,2.579,430,2.579,431,3.207,432,1.915,433,1.915,434,3.652,435,1.915,436,2.579,437,1.915,438,1.915,439,2.346,440,3.207,441,2.579,442,1.915,443,1.915,444,3.652,445,1.915,446,4.241,447,2.579,448,2.579,449,3.652,450,2.579,451,1.915,452,2.579,453,1.624,454,1.915,455,1.624,456,1.915,457,2.579,458,2.579,459,1.915,460,2.579,461,1.915,462,1.915,463,2.579,464,4.241,465,1.915,466,1.915,467,1.712,468,1.915,469,1.915,470,1.369,471,1.915,472,1.915,473,2.867,474,0.661,475,2.046,476,3.652,477,3.078,478,2.046,479,2.724,480,0.997,481,0.805,482,4.446,483,3.365,484,1.624,485,1.174,486,2.579,487,1.624,488,2.579,489,1.624,490,1.432,491,1.624,492,1.624,493,1.624]],["title/classes/CreateSeatDto.html",[26,0.093,494,2.114]],["body/classes/CreateSeatDto.html",[3,0.272,4,0.272,5,0.24,9,0.305,13,0.661,16,0.025,18,0.499,22,2.473,23,0.364,25,0.364,26,0.159,35,1.647,36,0.017,37,0.017,43,1.48,51,1.587,383,1.264,386,1.311,394,2.261,404,2.844,405,1.802,420,2.045,439,1.802,467,3.314,470,2.202,473,2.761,474,1.264,475,3.292,477,2.964,478,3.292,479,2.481,480,1.905,481,1.538,485,2.244,494,3,495,4.586,496,2.462,497,3.709,498,4.675,499,3.709,500,3.709,501,3.379,502,2.841,503,3.104,504,4.127,505,3.661,506,3.661,507,3.661,508,4.15,509,3.661,510,3.661,511,3.104,512,3.661,513,3.661,514,3.104,515,2.462,516,3.104,517,3.104,518,3.104,519,1.439]],["title/classes/CreateUserDto.html",[26,0.093,139,1.942]],["body/classes/CreateUserDto.html",[3,0.276,4,0.276,5,0.244,9,0.31,13,0.665,16,0.025,17,1.488,18,0.489,23,0.368,25,0.276,26,0.133,36,0.017,37,0.017,43,1.488,51,1.748,136,4.146,139,2.782,144,2.223,148,3.471,166,1.998,383,1.282,386,1.324,394,2.268,404,2.86,405,1.876,470,2.223,473,2.774,474,1.282,477,2.978,479,2.664,481,1.56,520,5.226,521,3.148,522,4.151,523,4.151,524,3.713,525,3.713,526,3.028,527,3.713,528,3.713,529,3.148,530,3.713,531,4.189,532,4.189,533,4.189,534,4.189,535,3.148,536,3.713,537,4.189,538,2.776,539,3.713,540,3.713,541,3.148,542,2.776,543,3.148]],["title/injectables/CurrentUserMiddleware.html",[103,1.118,544,2.114]],["body/injectables/CurrentUserMiddleware.html",[3,0.299,4,0.299,5,0.264,7,2.261,9,0.335,10,1.582,13,0.584,15,1.685,16,0.025,17,1.307,18,0.387,19,1.582,21,1.221,23,0.454,24,0.886,25,0.299,26,0.108,27,2.185,28,2.845,36,0.018,37,0.018,48,1.807,103,1.685,104,2.09,114,2.424,128,2.261,129,3.404,130,3.129,154,2.701,166,1.856,167,2.09,273,2.261,311,3.888,347,2.09,368,4.105,378,4.105,544,3.188,545,4.313,546,3.002,547,4.016,548,4.41,549,3.536,550,5.174,551,4.016,552,4.016,553,4.41,554,3.888,555,3.404,556,3.404,557,3.404,558,2.461,559,4.41,560,3.404,561,3.404,562,3.404]],["title/classes/EmailVerificationDto.html",[26,0.093,563,2.32]],["body/classes/EmailVerificationDto.html",[3,0.351,4,0.351,5,0.31,9,0.394,13,0.53,16,0.024,18,0.429,23,0.429,25,0.351,26,0.155,36,0.02,37,0.02,43,1.187,51,1.627,144,2.986,166,1.752,383,1.631,386,1.543,394,1.989,404,2.282,405,1.644,473,2.592,474,1.631,477,2.783,479,2.592,481,1.984,563,3.875,564,4.884,565,4.004,566,4.723,567,4.723,568,4.884,569,4.004]],["title/entities/Flight.html",[439,1.27,570,1.795]],["body/entities/Flight.html",[3,0.168,4,0.168,5,0.148,9,0.189,13,0.741,16,0.025,18,0.517,22,1.981,23,0.258,25,0.168,26,0.061,32,3.615,36,0.012,37,0.012,43,1.658,51,1.696,386,0.928,387,3.145,388,3.145,389,3.145,390,3.145,391,3.145,392,3.145,393,3.145,394,1.453,395,3.145,396,3.145,397,3.145,398,3.145,399,3.145,400,3.145,401,3.145,402,3.145,403,3.145,405,0.989,410,2.889,416,2.655,420,1.95,422,2.579,439,1.275,470,1.018,480,3.307,483,4.178,490,2.589,502,2.412,519,1.654,570,1.802,571,1.522,572,1.918,573,4.87,574,4.835,575,5.174,576,2.262,577,2.262,578,2.262,579,3.463,580,2.262,581,2.262,582,2.262,583,2.262,584,2.262,585,2.262,586,2.262,587,2.262,588,3.145,589,2.262,590,2.262,591,2.262,592,2.262,593,5.36,594,2.262,595,2.262,596,2.262,597,2.262,598,3.463,599,2.262,600,2.262,601,2.589,602,2.589,603,2.589,604,4.902,605,3.463,606,1.177,607,2.262,608,2.262,609,2.262,610,2.262,611,2.262,612,1.691,613,4.208,614,1.691,615,1.691,616,1.386,617,1.691,618,1.691]],["title/controllers/FlightsController.html",[38,1.552,619,2.32]],["body/controllers/FlightsController.html",[1,1.144,3,0.139,4,0.139,5,0.122,9,0.156,10,0.906,13,0.521,15,1.503,16,0.025,17,1.166,18,0.345,19,1.411,21,1.69,23,0.386,24,0.412,25,0.139,26,0.05,31,1.846,36,0.01,37,0.01,38,0.84,40,0.84,43,1.166,48,0.84,97,2.352,114,2.591,116,2.241,150,0.971,151,3.327,152,0.971,158,0.971,166,0.906,200,3.491,280,3.083,282,2.965,304,3.491,327,1.935,332,2.602,335,2.209,346,2.209,370,3.779,382,2.602,394,2.171,405,1.324,416,2.612,420,1.8,439,2.522,474,0.644,519,2.184,526,2.843,549,2.843,616,2.279,619,2.004,620,1.582,621,1.395,622,1.866,623,2.979,624,2.979,625,2.979,626,2.979,627,3.719,628,1.866,629,1.582,630,2.78,631,2.227,632,4.03,633,3.719,634,4.61,635,4.61,636,2.78,637,1.866,638,1.866,639,1.866,640,2.526,641,3.153,642,2.526,643,3.153,644,1.866,645,1.866,646,1.582,647,1.582,648,4.946,649,1.866,650,1.866,651,2.602,652,1.582,653,4.57,654,3.153,655,1.866,656,1.866,657,3.719,658,1.866,659,2.856,660,1.582,661,3.153,662,1.866,663,1.582,664,1.582,665,3.599,666,1.582,667,2.227,668,1.395,669,3.468,670,2.227,671,3.697,672,3.174,673,3.468,674,1.395,675,1.866,676,2.526,677,1.582,678,1.582,679,1.582,680,1.935,681,1.582,682,1.866,683,1.866,684,3.468,685,3.468,686,3.468,687,3.934,688,1.582,689,2.004,690,3.153,691,3.468,692,1.866,693,4.64,694,1.582,695,3.468,696,3.468,697,3.468,698,3.468,699,3.174,700,1.582,701,1.582,702,1.866,703,2.78,704,2.501,705,1.866,706,1.866,707,1.582,708,1.866,709,1.144,710,1.582,711,1.582,712,1.582,713,1.866,714,1.255]],["title/modules/FlightsModule.html",[53,1.667,60,1.942]],["body/modules/FlightsModule.html",[3,0.338,4,0.338,5,0.298,16,0.025,23,0.488,24,1.004,25,0.338,26,0.123,36,0.02,37,0.02,40,2.532,53,2.718,55,2.366,56,2.928,60,3.817,63,3.448,64,2.56,65,2.196,67,3.785,68,3.058,81,3.058,82,2.196,439,1.674,619,4.111,680,3.652,681,3.854,715,3.854,716,3.854,717,3.854,718,4.546,719,5.627,720,4.546,721,3.854,722,4.546]],["title/injectables/FlightsService.html",[103,1.118,680,1.795]],["body/injectables/FlightsService.html",[3,0.208,4,0.208,5,0.184,9,0.234,10,1.235,13,0.651,15,1.879,16,0.025,17,1.458,18,0.432,19,1.764,21,1.691,23,0.432,24,0.618,25,0.208,26,0.076,27,2.575,31,1.802,36,0.014,37,0.014,82,1.353,97,2.257,103,1.315,104,1.457,114,2.797,116,2.687,128,1.577,150,1.457,152,1.457,158,1.457,169,1.884,211,1.884,273,3.266,280,3.114,282,2.486,298,3.524,300,3.524,301,3.524,327,2.486,332,2.928,335,2.727,346,2.486,382,3.211,420,2.024,439,2.336,519,2.186,606,1.457,651,1.716,653,4.05,676,2.374,677,2.374,678,2.374,680,2.113,704,3.213,709,2.489,714,2.731,721,2.374,723,2.374,724,3.036,725,3.036,726,2.094,727,3.917,728,2.801,729,3.036,730,4.061,731,2.801,732,2.801,733,4.061,734,4.336,735,2.801,736,2.801,737,2.801,738,4.061,739,2.801,740,3.036,741,2.094,742,2.801,743,2.801,744,2.801,745,2.801,746,4.05,747,4.061,748,3.036,749,2.801,750,2.801,751,2.094,752,3.443,753,2.801,754,4.05,755,2.801,756,2.374,757,2.094,758,2.801,759,2.801,760,4.061,761,2.801,762,2.801,763,2.801]],["title/classes/GetFlightsDto.html",[26,0.093,651,2.114]],["body/classes/GetFlightsDto.html",[3,0.337,4,0.337,5,0.298,9,0.378,13,0.631,16,0.025,18,0.418,23,0.418,25,0.337,26,0.152,32,2.924,36,0.02,37,0.02,43,1.412,51,1.604,211,3.779,383,1.566,386,1.505,405,1.604,473,2.747,474,1.566,479,2.747,481,1.905,651,3.443,752,5.176,754,5.176,756,4.763,764,5.176,765,3.845,766,5.619,767,6.381,768,5.619,769,4.535,770,4.535,771,4.563]],["title/classes/PasswordResetDto.html",[26,0.093,772,2.32]],["body/classes/PasswordResetDto.html",[3,0.316,4,0.316,5,0.279,9,0.355,13,0.606,16,0.024,18,0.464,23,0.401,25,0.316,26,0.145,36,0.019,37,0.019,43,1.356,51,1.699,97,1.986,134,5.024,136,4.328,144,2.427,148,3.037,166,1.895,383,1.467,386,1.445,394,2.152,404,2.606,405,1.779,473,2.667,474,1.467,477,2.863,479,2.427,481,1.785,531,4.573,532,4.573,533,4.573,534,4.573,535,3.603,537,4.573,538,3.177,542,3.177,543,3.603,772,3.628,773,5.024,774,3.603,775,4.25,776,4.25,777,4.25,778,4.25]],["title/interfaces/Request.html",[28,1.552,347,1.795]],["body/interfaces/Request.html",[3,0.32,4,0.32,5,0.282,7,2.421,9,0.359,16,0.025,18,0.32,19,1.652,23,0.466,24,0.949,25,0.32,26,0.116,27,2.283,28,2.817,36,0.019,37,0.019,48,1.935,103,1.76,114,1.806,130,2.879,154,2.892,166,2.005,167,2.238,273,2.421,347,2.238,349,3.214,368,3.655,378,3.655,386,1.456,544,2.635,545,3.214,546,3.214,548,3.645,549,2.635,550,4.607,553,4.607,554,4.062,555,3.645,556,3.645,557,3.645,558,3.837,559,4.607,560,3.645,561,3.645,562,3.645]],["title/entities/Seat.html",[502,1.552,570,1.795]],["body/entities/Seat.html",[3,0.265,4,0.265,5,0.234,9,0.297,13,0.682,16,0.025,18,0.484,22,2.445,23,0.357,25,0.357,26,0.096,32,3.259,35,2.162,36,0.017,37,0.017,43,1.528,51,1.208,386,1.287,405,1.661,420,1.556,439,2.455,467,2.705,470,2.162,480,2.5,485,2.944,497,3.657,499,3.657,500,3.657,501,3.725,502,2.162,504,3.232,515,4.088,519,2.137,570,2.5,571,2.395,573,4.064,574,3.591,575,4.681,588,4.064,601,3.591,602,3.591,603,3.591,604,4.351,606,1.853,612,2.662,614,2.662,615,2.662,616,2.182,617,2.662,618,2.662,779,2.662,780,2.662,781,3.561,782,3.561,783,4.804,784,4.804,785,4.804,786,3.561,787,3.561,788,3.561,789,3.561,790,3.561,791,4.804,792,3.019,793,3.561,794,3.561,795,5.437]],["title/classes/SeatDto.html",[26,0.093,796,2.32]],["body/classes/SeatDto.html",[3,0.319,4,0.319,5,0.282,9,0.358,13,0.725,16,0.025,18,0.48,22,2.28,23,0.404,25,0.319,26,0.146,36,0.019,37,0.019,43,1.622,51,1.364,359,2.629,383,1.481,386,1.454,420,2.026,497,4.003,498,5.046,499,4.003,500,4.003,501,3.648,519,2.339,796,3.65,797,3.637,798,5.838,799,4.29,800,5.952,801,4.29,802,4.29,803,4.29,804,4.29,805,4.29,806,3.207,807,4.29,808,4.29]],["title/controllers/SeatsController.html",[38,1.552,809,2.32]],["body/controllers/SeatsController.html",[1,1.138,3,0.138,4,0.138,5,0.122,9,0.155,10,0.902,13,0.52,15,1.371,16,0.025,17,1.064,18,0.315,19,1.287,21,1.73,23,0.4,24,0.41,25,0.138,26,0.05,31,1.843,36,0.01,37,0.01,38,0.835,40,0.835,43,1.163,48,0.835,97,2.313,114,2.588,116,2.236,150,0.966,151,3.319,152,0.966,158,0.966,166,1.127,200,3.619,280,3.126,282,3.078,304,3.619,327,1.929,332,2.594,335,2.203,346,1.929,370,3.775,394,2.187,405,1.321,416,2.606,420,1.797,422,3.298,439,1.092,474,0.641,494,2.594,502,3.086,519,1.939,526,2.836,549,2.836,616,2.271,621,1.388,629,1.574,630,2.77,631,2.218,632,4.022,634,4.605,635,4.605,636,2.77,640,3.142,641,3.142,642,2.516,643,3.142,646,1.574,647,2.516,652,1.574,660,1.574,661,3.142,664,1.574,665,3.589,666,1.574,667,2.218,668,1.388,669,3.459,670,2.218,671,3.689,672,3.459,673,3.459,674,1.388,679,1.574,684,3.459,685,3.459,686,3.459,687,3.924,688,1.574,689,2.493,690,3.142,691,3.459,694,1.574,695,3.459,696,3.459,697,3.459,698,3.459,699,3.164,700,1.574,701,1.574,703,3.164,704,1.249,707,1.574,709,1.138,710,1.574,711,1.574,714,1.249,724,1.388,796,1.249,809,1.996,810,1.574,811,1.857,812,2.967,813,2.967,814,2.967,815,4.233,816,3.706,817,1.857,818,1.857,819,1.857,820,1.857,821,1.857,822,2.967,823,1.857,824,1.857,825,4.184,826,1.857,827,1.857,828,1.857,829,1.857,830,2.847,831,1.857,832,1.857,833,1.249,834,1.574,835,2.516,836,1.857,837,2.087,838,1.574,839,1.857,840,1.857,841,1.857,842,1.857,843,4.628,844,3.706,845,1.857,846,3.142,847,1.857,848,1.388,849,1.857]],["title/modules/SeatsModule.html",[53,1.667,61,2.114]],["body/modules/SeatsModule.html",[3,0.335,4,0.335,5,0.295,16,0.025,23,0.496,24,0.994,25,0.335,26,0.121,36,0.019,37,0.019,40,2.516,53,2.702,55,2.342,56,2.91,60,3.756,61,4.189,63,3.427,64,2.534,65,2.175,67,3.762,68,3.762,81,3.028,82,2.175,502,2.025,806,3.365,809,4.093,837,3.756,838,3.816,850,3.816,851,4.501,852,3.816,853,4.501,854,4.501,855,4.501,856,4.501]],["title/injectables/SeatsService.html",[103,1.118,837,1.942]],["body/injectables/SeatsService.html",[3,0.21,4,0.21,5,0.185,9,0.235,10,1.242,13,0.653,15,1.807,16,0.025,17,1.402,18,0.415,19,1.697,21,1.697,23,0.433,24,0.623,25,0.21,26,0.076,27,2.444,31,1.807,36,0.014,37,0.014,82,1.363,97,2.261,103,1.323,104,1.469,114,2.8,116,2.695,128,2.299,150,1.469,152,1.469,158,1.469,169,2.747,273,3.142,277,2.393,278,2.393,280,3.196,282,2.736,298,3.537,300,3.537,301,3.537,327,2.497,332,2.941,335,2.736,346,2.497,420,2.028,422,2.941,439,2.141,494,3.223,502,2.86,519,1.886,606,1.469,680,3.121,704,1.898,709,2.503,714,2.747,724,3.931,725,3.053,726,2.11,727,3.931,729,3.053,734,3.587,740,3.931,741,2.11,746,4.068,748,3.053,751,2.11,757,2.11,806,2.11,835,2.393,837,2.299,846,4.068,848,3.053,857,2.393,858,2.822,859,4.084,860,2.822,861,2.822,862,2.822,863,2.822,864,2.822,865,2.822,866,2.822,867,2.822,868,2.822,869,2.822,870,2.822,871,2.822,872,4.084,873,4.084,874,2.822,875,2.822,876,2.822]],["title/classes/SerializeInterceptor.html",[26,0.093,365,2.32]],["body/classes/SerializeInterceptor.html",[3,0.283,4,0.283,5,0.25,7,2.828,9,0.318,10,1.527,12,3.664,13,0.564,15,1.627,16,0.025,17,1.262,18,0.374,19,1.527,20,3.445,21,1.157,23,0.445,24,0.84,25,0.374,26,0.135,28,2.26,31,1.821,35,1.713,36,0.018,37,0.018,48,1.713,65,2.426,97,1.401,128,2.143,137,3.755,141,3.378,347,1.981,348,3.808,350,2.56,351,3.227,352,4.766,353,5.068,354,4.766,355,2.845,356,3.227,357,3.227,358,3.227,359,2.332,360,3.227,361,2.845,362,2.845,363,3.227,364,3.227,365,3.378,366,3.755,367,4.766,368,3.781,369,4.258,370,3.078,371,5.068,372,3.227,373,4.258,374,4.258,375,4.258,376,3.227,377,3.227,378,3.378,379,3.755,380,3.227,381,3.227,383,1.314,877,3.806,878,3.806,879,3.806,880,3.806]],["title/classes/UpdateFlightDto.html",[26,0.093,659,2.32]],["body/classes/UpdateFlightDto.html",[3,0.14,4,0.14,5,0.123,9,0.157,13,0.707,16,0.025,17,1.247,18,0.506,22,1.791,23,0.223,25,0.14,26,0.134,32,0.978,36,0.01,37,0.01,43,1.583,51,1.749,383,0.649,385,1.405,386,0.803,387,3.481,388,2.793,389,2.793,390,2.793,391,2.793,392,2.793,393,2.793,394,2.371,395,3.891,396,2.793,397,2.793,398,3.891,399,2.793,400,3.481,401,2.793,402,2.793,403,2.793,404,3.043,405,1.94,406,2.54,407,1.594,410,2.612,411,3.614,412,3.614,413,3.614,416,2.4,417,2.54,419,1.594,420,2.086,421,2.54,422,1.836,423,2.54,426,2.54,427,2.54,428,2.54,429,2.54,430,2.54,431,3.168,434,3.614,436,2.54,439,2.338,440,3.168,441,2.54,444,3.614,446,4.206,447,2.54,448,2.54,449,3.614,450,2.54,452,2.54,453,1.594,455,1.594,457,2.54,458,2.54,460,2.54,463,2.54,464,4.206,467,1.687,470,1.348,473,2.857,474,0.649,475,2.016,476,3.614,477,3.068,478,2.016,479,2.711,480,0.978,481,0.79,482,4.413,483,3.337,484,1.594,485,1.152,486,2.54,487,1.594,488,2.54,489,1.594,490,1.405,491,1.594,492,1.594,493,1.594,659,2.016,771,4.747,881,5.383,882,4.962,883,1.88,884,2.997,885,1.88,886,1.88,887,1.88,888,1.88,889,1.88,890,1.88,891,1.88,892,1.88,893,1.88,894,1.88,895,1.88,896,1.88,897,1.88,898,1.88,899,1.88,900,1.88,901,1.88,902,1.88,903,1.88,904,1.88,905,1.88,906,1.88,907,1.88,908,1.88]],["title/classes/UpdateSeatDto.html",[26,0.093,830,2.32]],["body/classes/UpdateSeatDto.html",[3,0.281,4,0.281,5,0.248,9,0.316,13,0.629,16,0.025,18,0.491,22,2.505,23,0.372,25,0.372,26,0.161,35,1.702,36,0.017,37,0.017,43,1.409,51,1.601,383,1.306,386,1.34,394,2.2,404,2.708,405,1.819,420,1.62,467,3.492,470,2.522,473,2.683,474,1.306,475,3.365,477,2.881,478,2.544,479,2.522,480,1.968,481,1.589,485,2.318,496,2.544,497,3.77,499,3.77,500,3.77,501,3.435,502,2.867,503,3.207,504,4.172,508,4.241,511,3.207,514,3.207,515,3.77,516,3.207,517,3.207,518,3.207,771,4.458,780,2.827,830,3.365,909,4.458,910,3.782,911,3.782,912,3.782,913,3.782,914,3.782,915,3.782]],["title/entities/User.html",[166,1.049,570,1.795]],["body/entities/User.html",[3,0.215,4,0.215,5,0.19,9,0.241,13,0.707,16,0.025,17,1.045,18,0.503,22,2.235,23,0.215,25,0.309,26,0.078,32,3.537,34,2.163,35,1.871,36,0.014,37,0.014,43,1.583,51,1.554,144,2.19,148,2.74,166,1.264,313,4.126,331,3.638,386,1.114,405,1.765,410,3.26,420,1.347,470,1.302,480,3.218,483,4.159,515,3.79,519,2.091,522,3.638,523,3.638,526,1.774,570,2.164,571,1.947,573,4.385,574,4.622,575,5.031,588,3.638,601,3.108,602,3.108,603,3.108,604,4.518,606,1.506,612,2.163,614,2.163,615,2.163,616,1.774,617,2.163,618,2.163,689,1.947,780,2.163,792,4.126,916,2.163,917,4.126,918,4.126,919,4.126,920,2.894,921,5.32,922,5.866,923,2.894,924,2.894,925,2.894,926,2.894,927,2.894,928,2.894,929,2.894,930,4.212,931,2.894,932,2.894,933,4.158,934,2.894,935,4.158,936,4.158,937,3.525,938,2.894,939,2.894,940,2.894,941,4.867]],["title/classes/UserCredentialsDto.html",[26,0.093,942,2.32]],["body/classes/UserCredentialsDto.html",[3,0.325,4,0.325,5,0.287,9,0.365,13,0.617,16,0.025,18,0.469,23,0.409,25,0.325,26,0.148,36,0.019,37,0.019,43,1.38,51,1.708,144,2.92,148,3.653,166,1.915,383,1.509,386,1.471,394,2.174,404,2.653,405,1.798,473,2.702,474,1.509,477,2.901,479,2.471,481,1.837,529,3.706,538,3.268,541,3.706,542,3.268,568,4.656,569,3.706,942,3.694,943,5.09,944,3.706,945,4.372,946,4.372,947,4.372]],["title/classes/UserDto.html",[26,0.093,948,2.32]],["body/classes/UserDto.html",[3,0.297,4,0.297,5,0.262,9,0.334,13,0.75,16,0.025,18,0.497,22,2.179,23,0.386,25,0.297,26,0.14,36,0.018,37,0.018,43,1.678,51,1.626,144,2.591,167,2.081,331,4.304,359,2.45,383,1.38,386,1.39,410,3.734,420,1.68,519,2.263,522,4.304,523,4.304,798,5.962,917,4.881,918,4.881,919,4.881,930,4.304,948,3.489,949,3.389,950,3.998,951,3.998,952,3.998,953,3.998,954,3.998,955,3.998,956,3.998,957,3.998]],["title/controllers/UsersController.html",[38,1.552,958,2.32]],["body/controllers/UsersController.html",[3,0.116,4,0.116,5,0.102,9,0.13,10,0.78,13,0.54,15,1.557,16,0.025,17,1.208,18,0.358,19,1.461,21,1.461,23,0.418,24,0.343,25,0.116,26,0.042,31,1.783,36,0.009,37,0.009,38,0.699,40,0.699,43,1.208,48,0.699,64,3.225,65,1.24,74,1.161,85,3.972,97,2.202,112,1.045,114,2.481,116,2.037,121,1.847,123,2.176,124,2.176,125,2.176,126,2.176,127,2.176,136,3.38,139,2.144,144,2.916,148,3.367,150,1.982,151,3.055,152,0.808,153,1.317,158,0.808,159,1.161,166,2.022,167,0.808,200,3.702,280,3.112,281,2.451,282,2.615,302,2.176,304,3.38,310,1.317,311,2.847,327,1.707,335,0.808,339,1.317,340,2.176,346,1.707,370,3.511,379,2.847,394,2.128,405,1.204,416,2.706,474,0.536,526,2.945,549,2.01,558,0.952,563,3.232,621,1.161,630,1.918,631,2.451,632,4.115,634,4.282,635,4.282,636,2.451,663,1.317,667,1.161,668,1.161,669,3.152,670,1.918,671,3.152,672,2.847,673,3.592,674,1.161,684,3.592,685,3.592,686,3.592,691,3.894,695,2.451,696,3.152,697,3.152,698,3.152,699,2.847,703,2.451,712,3.575,772,2.562,833,1.045,834,1.317,942,2.562,948,1.045,958,1.726,959,1.317,960,1.553,961,2.566,962,2.566,963,1.553,964,2.566,965,1.553,966,1.553,967,4.542,968,1.553,969,1.553,970,2.566,971,1.553,972,1.553,973,1.553,974,1.553,975,3.809,976,1.553,977,5.21,978,4.542,979,2.566,980,4.542,981,1.553,982,1.553,983,1.553,984,1.553,985,1.553,986,1.553,987,1.553,988,3.809,989,1.553,990,1.553,991,2.566,992,1.553,993,3.28,994,1.553,995,1.553,996,1.553,997,1.553,998,1.553,999,1.553,1000,2.566,1001,1.553,1002,2.566,1003,1.553,1004,1.317,1005,1.553,1006,1.553,1007,1.553,1008,1.553,1009,1.553,1010,1.553,1011,1.553,1012,1.553,1013,1.553,1014,1.553,1015,1.553,1016,1.553,1017,4.806,1018,1.553,1019,4.217,1020,1.553,1021,1.553,1022,1.553,1023,1.553,1024,1.553,1025,3.809,1026,2.566,1027,1.553,1028,1.553,1029,3.28,1030,1.553,1031,1.553,1032,1.553,1033,2.566,1034,2.566,1035,1.553,1036,1.553,1037,1.553,1038,1.553,1039,1.553,1040,1.553,1041,1.553,1042,1.553,1043,1.553,1044,1.553]],["title/modules/UsersModule.html",[53,1.667,62,2.114]],["body/modules/UsersModule.html",[3,0.299,4,0.299,5,0.264,10,1.224,13,0.452,15,1.304,16,0.025,17,1.012,18,0.299,19,1.224,21,1.224,23,0.503,24,0.888,25,0.299,26,0.109,36,0.018,37,0.018,40,2.344,53,2.517,55,2.094,56,2.711,62,4.097,63,3.192,64,2.266,65,1.944,67,3.504,68,2.707,69,3.412,70,4.416,71,5.179,73,3.412,74,3.008,81,2.707,82,1.944,121,3.649,130,3.131,154,2.707,155,3.008,166,1.224,167,2.094,544,2.466,958,3.885,1004,3.412,1045,3.412,1046,3.412,1047,4.025,1048,4.025,1049,4.025,1050,3.008,1051,4.025,1052,4.025,1053,4.025,1054,4.025,1055,4.025,1056,4.025,1057,3.412,1058,4.025,1059,4.025,1060,4.025,1061,4.025,1062,4.025]],["title/injectables/UsersService.html",[103,1.118,130,1.667]],["body/injectables/UsersService.html",[3,0.231,4,0.231,5,0.204,9,0.259,10,1.33,13,0.674,15,1.945,16,0.025,17,1.509,18,0.447,19,1.826,21,1.76,23,0.431,24,0.686,25,0.231,26,0.084,27,2.432,31,1.875,36,0.015,37,0.015,51,1.272,82,1.5,97,2.211,103,1.416,104,1.616,114,2.841,116,2.796,128,1.749,130,2.112,139,3.092,144,1.967,150,1.616,152,1.616,158,1.616,159,2.322,166,1.973,167,1.616,169,2.089,273,3.092,280,3.012,281,3.783,282,2.858,298,2.089,300,2.089,301,2.089,307,4.29,327,2.633,335,1.616,346,2.275,420,2.074,519,1.989,606,1.616,654,3.707,709,2.68,725,3.268,726,2.322,727,4.105,729,3.268,734,3.783,740,4.105,741,2.322,748,3.268,751,2.322,757,2.322,848,3.268,1063,2.633,1064,4.372,1065,3.106,1066,4.372,1067,3.106,1068,4.372,1069,3.106,1070,3.106,1071,4.372,1072,3.106,1073,3.106,1074,3.106,1075,3.106,1076,3.106,1077,3.106,1078,3.106,1079,3.106,1080,3.106,1081,3.106]],["title/coverage.html",[1082,3.986]],["body/coverage.html",[0,3.312,1,1.94,5,0.208,6,2.683,16,0.025,18,0.235,26,0.182,28,1.424,36,0.015,37,0.015,38,2.492,39,2.129,41,2.683,46,1.782,66,2.366,83,2.366,97,1.165,103,1.957,105,2.683,112,2.129,113,2.683,121,1.782,122,3.312,130,1.529,139,1.782,156,2.366,161,2.366,166,1.347,211,4.797,225,2.683,347,2.306,348,1.94,350,3.439,361,3.821,365,2.129,382,1.94,384,2.683,385,3.312,439,1.165,494,1.94,495,2.366,496,2.98,502,1.994,520,2.683,521,2.683,544,1.94,545,3.312,546,3.312,558,1.94,563,2.129,564,2.683,565,2.683,570,2.66,572,2.683,619,2.129,620,2.683,651,1.94,659,2.129,680,1.647,723,2.683,764,2.683,765,2.683,772,2.129,773,2.683,774,2.683,779,3.312,796,2.129,797,2.683,809,2.129,810,2.683,830,2.129,833,2.129,837,1.782,857,2.683,881,2.683,909,2.366,916,3.312,942,2.129,943,2.683,944,2.683,948,2.129,949,2.683,958,2.129,959,2.683,1050,2.366,1063,2.683,1082,2.683,1083,3.165,1084,3.165,1085,3.165,1086,6.041,1087,5.538,1088,6.585,1089,4.431,1090,5.829,1091,5.112,1092,5.538,1093,2.683,1094,2.683,1095,2.683,1096,4.431,1097,3.165,1098,4.431,1099,2.683,1100,2.683,1101,2.683,1102,3.165,1103,3.165,1104,3.165]],["title/dependencies.html",[56,2.158,1105,2.445]],["body/dependencies.html",[16,0.025,24,0.999,26,0.151,36,0.02,37,0.02,56,2.354,78,3.382,80,3.835,82,2.185,85,3.773,155,3.382,355,3.382,359,2.772,474,1.562,481,1.901,554,4.193,606,2.354,1106,6.375,1107,5.61,1108,4.524,1109,4.524,1110,4.524,1111,4.524,1112,4.524,1113,4.524,1114,4.524,1115,4.524,1116,4.524,1117,4.524,1118,4.524,1119,4.524,1120,4.524,1121,4.524,1122,4.524,1123,4.524,1124,4.524,1125,4.524,1126,4.524,1127,4.524,1128,4.524,1129,4.524,1130,4.524,1131,4.524,1132,4.524,1133,4.524,1134,4.524,1135,4.524,1136,4.524,1137,4.524,1138,4.524]],["title/miscellaneous/enumerations.html",[1139,1.624,1140,3.516]],["body/miscellaneous/enumerations.html",[9,0.386,16,0.025,34,3.459,36,0.02,37,0.02,119,5.235,467,3.781,470,3.022,495,3.459,496,4.322,501,4.116,504,4.517,689,3.112,779,3.459,909,3.459,916,3.459,930,4.252,937,4.823,1139,2.605,1140,3.923,1141,4.627,1142,4.627,1143,4.627,1144,4.627]],["title/miscellaneous/functions.html",[1139,1.624,1145,3.516]],["body/miscellaneous/functions.html",[9,0.424,15,1.949,16,0.023,17,1.512,18,0.448,19,1.83,36,0.021,37,0.021,156,4.498,171,4.305,274,4.305,348,3.687,350,3.416,362,3.796,366,3.796,833,4.047,1093,4.305,1094,4.305,1095,5.436,1139,2.859,1145,4.305,1146,5.078,1147,5.078,1148,5.078]],["title/index.html",[9,0.241,825,2.445,1149,2.884]],["body/index.html",[16,0.022,36,0.022,37,0.022,109,4.129,1150,5.524,1151,5.524]],["title/modules.html",[55,2.447]],["body/modules.html",[16,0.021,36,0.021,37,0.021,54,3.523,55,2.726,60,2.949,61,3.21,62,3.21,248,5.678,1152,6.697,1153,6.697,1154,6.697]],["title/overview.html",[1155,3.986]],["body/overview.html",[2,3.26,16,0.024,36,0.019,37,0.019,40,1.962,46,3.377,54,4.644,55,2.27,56,2.854,57,3.698,58,3.698,59,3.698,60,3.782,61,4.117,62,4.117,63,3.36,64,2.456,65,2.107,104,2.27,121,3.377,130,2.897,318,4.649,322,3.698,326,4.649,349,3.26,383,1.506,571,2.934,680,3.496,715,3.698,716,3.698,717,3.698,837,3.377,850,3.698,852,3.698,1045,3.698,1046,3.698,1155,3.698,1156,4.361,1157,4.361]],["title/properties.html",[386,1.111,1105,2.445]],["body/properties.html",[16,0.024,36,0.022,37,0.022,386,1.436,394,1.851,1158,5.362,1159,5.362,1160,5.362,1161,5.362,1162,5.362,1163,5.362,1164,5.362]],["title/miscellaneous/variables.html",[1139,1.624,1165,3.516]],["body/miscellaneous/variables.html",[9,0.395,12,2.902,16,0.025,18,0.352,20,2.902,27,1.989,28,2.131,29,3.54,30,4.014,31,1.534,36,0.02,37,0.02,66,3.54,83,4.313,84,4.014,85,3.185,119,4.842,122,3.54,141,3.185,161,4.313,168,4.014,405,1.849,558,3.536,1050,4.313,1057,4.014,1099,4.014,1100,4.014,1101,4.891,1139,2.666,1165,4.014,1166,4.735,1167,4.735,1168,4.735,1169,4.735,1170,4.735,1171,4.735,1172,4.735,1173,4.735]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1159,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["0.2.45",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1089,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1090,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1091,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1092,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["0000ee",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["01",{"_index":413,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["01t00:00:00.000z",{"_index":488,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["01t00:00:00.000z'})@isstring()@isnotempty",{"_index":414,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["01t00:00:00.000z'})@isstring()@isnotempty()@isoptional",{"_index":884,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["02",{"_index":1017,"title":{},"body":{"controllers/UsersController.html":{}}}],["03",{"_index":687,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["04",{"_index":686,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["06:00",{"_index":436,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["1",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["10",{"_index":756,"title":{},"body":{"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{}}}],["100",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["1000",{"_index":490,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["1000)@isnotempty",{"_index":442,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["1000)@isnotempty()@isoptional",{"_index":894,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["1000.00",{"_index":491,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["1000.00'})@isdecimal()@isnotempty",{"_index":465,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["1000.00'})@isdecimal()@isnotempty()@isoptional",{"_index":903,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["10:00",{"_index":417,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["123456",{"_index":541,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserCredentialsDto.html":{}}}],["123456'})@isnotempty()@isstring()@minlength(6",{"_index":529,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserCredentialsDto.html":{}}}],["14",{"_index":1157,"title":{},"body":{"overview.html":{}}}],["16.0.0",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["1a",{"_index":516,"title":{},"body":{"classes/CreateSeatDto.html":{},"classes/UpdateSeatDto.html":{}}}],["1a'})@isstring()@length(1",{"_index":511,"title":{},"body":{"classes/CreateSeatDto.html":{},"classes/UpdateSeatDto.html":{}}}],["1h",{"_index":1061,"title":{},"body":{"modules/UsersModule.html":{}}}],["2",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"overview.html":{}}}],["2.0",{"_index":1151,"title":{},"body":{"index.html":{}}}],["2.0.0",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["2.0.44",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":485,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"entities/Seat.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{}}}],["20)@isnotempty",{"_index":512,"title":{},"body":{"classes/CreateSeatDto.html":{}}}],["20)@isnotempty()@isoptional",{"_index":914,"title":{},"body":{"classes/UpdateSeatDto.html":{}}}],["200",{"_index":483,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{}}}],["200)@isnotempty",{"_index":408,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["200)@isnotempty()@isoptional",{"_index":882,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["2000.00",{"_index":492,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["2000.00'})@isdecimal()@isnotempty",{"_index":468,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["2000.00'})@isdecimal()@isnotempty()@isoptional",{"_index":905,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["2020",{"_index":412,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["2022",{"_index":685,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["20})@isnumber()@isnotempty",{"_index":424,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["20})@isnumber()@isnotempty()@isoptional",{"_index":888,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["3",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"overview.html":{}}}],["3.0.2",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["3000.00",{"_index":493,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["3000.00'})@isdecimal()@isnotempty",{"_index":471,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["3000.00'})@isdecimal()@isnotempty()@isoptional",{"_index":907,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["32",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["4",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"overview.html":{}}}],["4.3.0",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":699,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["401",{"_index":1039,"title":{},"body":{"controllers/UsersController.html":{}}}],["404",{"_index":703,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["5.2.1",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1156,"title":{},"body":{"overview.html":{}}}],["6.4.4",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["6.7.3",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["7.0.3",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["767px",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["8.0.0",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["987654321",{"_index":778,"title":{},"body":{"classes/PasswordResetDto.html":{}}}],["987654321'})@isnotempty()@isstring()@minlength(6",{"_index":775,"title":{},"body":{"classes/PasswordResetDto.html":{}}}],["_scrypt",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["ab",{"_index":406,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["ab123",{"_index":484,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["ab123'})@isstring()@length(0",{"_index":453,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["admin",{"_index":689,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"coverage.html":{}}}],["adresse",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["afterinsert",{"_index":601,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}}}],["afterremove",{"_index":602,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}}}],["afterupdate",{"_index":603,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}}}],["agrave",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["airline",{"_index":387,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["airport",{"_index":446,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["airport'})@isstring()@length(0",{"_index":450,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["align",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["already",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["am'})@isstring()@isnotempty",{"_index":437,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["am'})@isstring()@isnotempty()@isoptional",{"_index":893,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["api",{"_index":111,"title":{},"body":{"injectables/AppService.html":{}}}],["api/auth",{"_index":960,"title":{},"body":{"controllers/UsersController.html":{}}}],["api/flights",{"_index":622,"title":{},"body":{"controllers/FlightsController.html":{}}}],["api/seats",{"_index":811,"title":{},"body":{"controllers/SeatsController.html":{}}}],["apibadrequestresponse",{"_index":669,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["apicreatedresponse",{"_index":670,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["apiinternalservererrorresponse",{"_index":671,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["apinotfoundresponse",{"_index":672,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["apiokresponse",{"_index":673,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":473,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"classes/UserCredentialsDto.html":{}}}],["apiproperty({default",{"_index":766,"title":{},"body":{"classes/GetFlightsDto.html":{}}}],["apiproperty({type",{"_index":404,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"classes/UserCredentialsDto.html":{}}}],["apitags",{"_index":674,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["apitags('flights",{"_index":682,"title":{},"body":{"controllers/FlightsController.html":{}}}],["apitags('seats",{"_index":839,"title":{},"body":{"controllers/SeatsController.html":{}}}],["apitags('users",{"_index":1014,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiunauthorizedresponse",{"_index":1002,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_pipe",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":39,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["apply",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":54,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":46,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":360,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["argument",{"_index":607,"title":{},"body":{"entities/Flight.html":{}}}],["arrival",{"_index":411,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["arrival_date",{"_index":388,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["arrival_time",{"_index":389,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["async",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"interfaces/Request.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["attrs",{"_index":740,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["auth.service",{"_index":1004,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["authguard",{"_index":112,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["author",{"_index":1162,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":121,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["autogenerated",{"_index":939,"title":{},"body":{"entities/User.html":{}}}],["availability",{"_index":508,"title":{},"body":{"classes/CreateSeatDto.html":{},"classes/UpdateSeatDto.html":{}}}],["available",{"_index":423,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["avez",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["aviation",{"_index":431,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["aviation'})@isstring()@length(0",{"_index":407,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["avoir",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["avons",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["await",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/FlightsService.html":{},"interfaces/Request.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":1150,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('email",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["badrequestexception('failed",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('invalid",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["base",{"_index":463,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["before",{"_index":371,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["besoin",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["body.newpassword",{"_index":1028,"title":{},"body":{"controllers/UsersController.html":{}}}],["body.password",{"_index":1038,"title":{},"body":{"controllers/UsersController.html":{}}}],["bonjour,merci",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["bonjour,nous",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"entities/Flight.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["bootstrap",{"_index":1095,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["browse",{"_index":1154,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"modules.html":{}}}],["buffer",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["business",{"_index":467,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"entities/Seat.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"miscellaneous/enumerations.html":{}}}],["callhandler",{"_index":353,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["canactivate",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["capacity",{"_index":390,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["car",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["cascade",{"_index":785,"title":{},"body":{"entities/Seat.html":{}}}],["case",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["catch",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["catch((err",{"_index":696,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["cet",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["check",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SeatsService.html":{}}}],["ci",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["circular",{"_index":609,"title":{},"body":{"entities/Flight.html":{}}}],["class",{"_index":26,"title":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"classes/SeatDto.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["class_type",{"_index":497,"title":{},"body":{"classes/CreateSeatDto.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"classes/UpdateSeatDto.html":{}}}],["classconstructor",{"_index":348,"title":{"interfaces/ClassConstructor.html":{}},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":383,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"classes/SeatDto.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["classtypes",{"_index":501,"title":{},"body":{"classes/CreateSeatDto.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"classes/UpdateSeatDto.html":{},"miscellaneous/enumerations.html":{}}}],["classtypes.economy",{"_index":794,"title":{},"body":{"entities/Seat.html":{}}}],["cliquez",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_flightsmodule",{"_index":715,"title":{},"body":{"modules/FlightsModule.html":{},"overview.html":{}}}],["cluster_flightsmodule_exports",{"_index":716,"title":{},"body":{"modules/FlightsModule.html":{},"overview.html":{}}}],["cluster_flightsmodule_providers",{"_index":717,"title":{},"body":{"modules/FlightsModule.html":{},"overview.html":{}}}],["cluster_seatsmodule",{"_index":850,"title":{},"body":{"modules/SeatsModule.html":{},"overview.html":{}}}],["cluster_seatsmodule_imports",{"_index":851,"title":{},"body":{"modules/SeatsModule.html":{}}}],["cluster_seatsmodule_providers",{"_index":852,"title":{},"body":{"modules/SeatsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1045,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1046,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["col",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["col.u",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["collapse",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["color",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["column",{"_index":604,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}}}],["column({type",{"_index":573,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}}}],["comoros",{"_index":440,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["comoros'})@isstring()@length(0",{"_index":455,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["company",{"_index":427,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["company_logo",{"_index":391,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["compléter",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["compris",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["compte",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["configmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["configure",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["configure(consumer",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["confirmation",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmer",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["connecter",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"i'm",{"_index":374,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["console.log('flight",{"_index":613,"title":{},"body":{"entities/Flight.html":{}}}],["console.log('seat",{"_index":795,"title":{},"body":{"entities/Seat.html":{}}}],["console.log('user",{"_index":941,"title":{},"body":{"entities/User.html":{}}}],["console.log(err",{"_index":746,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/SeatsService.html":{}}}],["const",{"_index":27,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/FlightsService.html":{},"interfaces/Request.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":1051,"title":{},"body":{"modules/UsersModule.html":{}}}],["constructor",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectrepository(flight",{"_index":742,"title":{},"body":{"injectables/FlightsService.html":{}}}],["constructor(@injectrepository(user",{"_index":1074,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(dto",{"_index":877,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["constructor(private",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"interfaces/Request.html":{},"controllers/SeatsController.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(repo",{"_index":726,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{}}}],["consumer",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["consumer.apply(currentusermiddleware).forroutes",{"_index":1062,"title":{},"body":{"modules/UsersModule.html":{}}}],["contactez",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["container",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["content/uploads/2019/12/ab",{"_index":430,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["context",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":38,"title":{"controllers/AppController.html":{},"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('api/auth",{"_index":1016,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('api/flights",{"_index":683,"title":{},"body":{"controllers/FlightsController.html":{}}}],["controller('api/seats",{"_index":841,"title":{},"body":{"controllers/SeatsController.html":{}}}],["controllers",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["cookiesession",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cordialement",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["country",{"_index":444,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["coverage",{"_index":1082,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(body",{"_index":694,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["create(flight",{"_index":730,"title":{},"body":{"injectables/FlightsService.html":{}}}],["create(seat",{"_index":859,"title":{},"body":{"injectables/SeatsService.html":{}}}],["create(user",{"_index":1066,"title":{},"body":{"injectables/UsersService.html":{}}}],["created",{"_index":630,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["created_at",{"_index":917,"title":{},"body":{"entities/User.html":{},"classes/UserDto.html":{}}}],["createdatecolumn",{"_index":935,"title":{},"body":{"entities/User.html":{}}}],["createdatecolumn({type",{"_index":920,"title":{},"body":{"entities/User.html":{}}}],["createflight",{"_index":623,"title":{},"body":{"controllers/FlightsController.html":{}}}],["createflight(@body",{"_index":692,"title":{},"body":{"controllers/FlightsController.html":{}}}],["createflight(body",{"_index":628,"title":{},"body":{"controllers/FlightsController.html":{}}}],["createflightdto",{"_index":382,"title":{"classes/CreateFlightDto.html":{}},"body":{"classes/CreateFlightDto.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":688,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["createseat",{"_index":812,"title":{},"body":{"controllers/SeatsController.html":{}}}],["createseat(@body",{"_index":842,"title":{},"body":{"controllers/SeatsController.html":{}}}],["createseat(body",{"_index":817,"title":{},"body":{"controllers/SeatsController.html":{}}}],["createseatdto",{"_index":494,"title":{"classes/CreateSeatDto.html":{}},"body":{"classes/CreateSeatDto.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":139,"title":{"classes/CreateUserDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["creating",{"_index":636,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["credentials",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["credentials'})@apiinternalservererrorresponse({description",{"_index":992,"title":{},"body":{"controllers/UsersController.html":{}}}],["credentials.dto",{"_index":1012,"title":{},"body":{"controllers/UsersController.html":{}}}],["credentials.dto.ts",{"_index":944,"title":{},"body":{"classes/UserCredentialsDto.html":{},"coverage.html":{}}}],["credentials.dto.ts:12",{"_index":946,"title":{},"body":{"classes/UserCredentialsDto.html":{}}}],["credentials.dto.ts:22",{"_index":947,"title":{},"body":{"classes/UserCredentialsDto.html":{}}}],["cross",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["crypto",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["current_timestamp(6",{"_index":922,"title":{},"body":{"entities/User.html":{}}}],["currentuser",{"_index":558,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentusermiddleware",{"_index":544,"title":{"injectables/CurrentUserMiddleware.html":{}},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["customer",{"_index":937,"title":{},"body":{"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["d&rsquo;avoir",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["d'avoir",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["d'informations",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["d'un",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":410,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["de",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["declare",{"_index":555,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["decodedtoken",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodedtoken.email",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoration",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["decorators/current",{"_index":1005,"title":{},"body":{"controllers/UsersController.html":{}}}],["default",{"_index":405,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"entities/Seat.html":{},"controllers/SeatsController.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{}}}],["delete('/:id",{"_index":711,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["delete('/:id')@useguards(adminguard)@apiokresponse({description",{"_index":821,"title":{},"body":{"controllers/SeatsController.html":{}}}],["delete('/:id')@useguards(adminguard)@httpcode(200)@apiokresponse({description",{"_index":639,"title":{},"body":{"controllers/FlightsController.html":{}}}],["delete(id",{"_index":714,"title":{},"body":{"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{}}}],["deleted",{"_index":640,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["deleteflight",{"_index":624,"title":{},"body":{"controllers/FlightsController.html":{}}}],["deleteflight(@param('id",{"_index":713,"title":{},"body":{"controllers/FlightsController.html":{}}}],["deleteflight(id",{"_index":638,"title":{},"body":{"controllers/FlightsController.html":{}}}],["deletes",{"_index":710,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["deleteseat",{"_index":813,"title":{},"body":{"controllers/SeatsController.html":{}}}],["deleteseat(@param('id",{"_index":849,"title":{},"body":{"controllers/SeatsController.html":{}}}],["deleteseat(id",{"_index":820,"title":{},"body":{"controllers/SeatsController.html":{}}}],["deleting",{"_index":643,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["demand",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["demande",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["departure",{"_index":434,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["departure_date",{"_index":392,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["departure_time",{"_index":393,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["dependencies",{"_index":56,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/SeatsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":610,"title":{},"body":{"entities/Flight.html":{}}}],["des",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["description",{"_index":394,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"classes/PasswordResetDto.html":{},"controllers/SeatsController.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"classes/UserCredentialsDto.html":{},"controllers/UsersController.html":{},"properties.html":{}}}],["dessous",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["destination",{"_index":395,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["destination_airport_name",{"_index":396,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["difficult&eacute;s",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["display",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["documentation",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":540,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["doe'})@isstring()@isnotempty",{"_index":527,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["dotenv",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":366,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/functions.html":{}}}],["dtos/create",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/email",{"_index":1007,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/get",{"_index":677,"title":{},"body":{"controllers/FlightsController.html":{},"injectables/FlightsService.html":{}}}],["dtos/password",{"_index":1009,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/seat.dto",{"_index":836,"title":{},"body":{"controllers/SeatsController.html":{}}}],["dtos/update",{"_index":679,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["dtos/user",{"_index":1011,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/user.dto",{"_index":1013,"title":{},"body":{"controllers/UsersController.html":{}}}],["e",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["economy",{"_index":504,"title":{},"body":{"classes/CreateSeatDto.html":{},"entities/Seat.html":{},"classes/UpdateSeatDto.html":{},"miscellaneous/enumerations.html":{}}}],["economy'])@isoptional",{"_index":910,"title":{},"body":{"classes/UpdateSeatDto.html":{}}}],["economy'})@isstring()@isnotempty()@isenum(['first",{"_index":503,"title":{},"body":{"classes/CreateSeatDto.html":{},"classes/UpdateSeatDto.html":{}}}],["email",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/PasswordResetDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["email')@httpcode(200)@apiokresponse({description",{"_index":983,"title":{},"body":{"controllers/UsersController.html":{}}}],["email'})@apiinternalservererrorresponse({description",{"_index":979,"title":{},"body":{"controllers/UsersController.html":{}}}],["email'})@apinotfoundresponse({description",{"_index":984,"title":{},"body":{"controllers/UsersController.html":{}}}],["emaildata",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["emailverificationdto",{"_index":563,"title":{"classes/EmailVerificationDto.html":{}},"body":{"classes/EmailVerificationDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["entities",{"_index":571,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":570,"title":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{},"coverage.html":{}}}],["enum",{"_index":515,"title":{},"body":{"classes/CreateSeatDto.html":{},"entities/Seat.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{}}}],["enumerations",{"_index":1140,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["env.${process.env.node_env",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["err.response?.message",{"_index":1029,"title":{},"body":{"controllers/UsersController.html":{}}}],["err.response?.statuscode",{"_index":698,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["excludeextraneousvalues",{"_index":381,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["executioncontext",{"_index":12,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exists",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SeatsService.html":{}}}],["expiresin",{"_index":1060,"title":{},"body":{"modules/UsersModule.html":{}}}],["export",{"_index":25,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":719,"title":{},"body":{"modules/FlightsModule.html":{}}}],["expose",{"_index":798,"title":{},"body":{"classes/SeatDto.html":{},"classes/UserDto.html":{}}}],["express",{"_index":554,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"dependencies.html":{}}}],["extra",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjlbwfpbci6inlpbwthym9zc0bnbwfpbc5jb20ilcjpyxqioje2ndgzmtiwmtqsimv4cci6mty0odmxntyxnh0.slrcrne_1wkyrm5",{"_index":534,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["failed",{"_index":632,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["false",{"_index":32,"title":{},"body":{"guards/AdminGuard.html":{},"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/GetFlightsDto.html":{},"entities/Seat.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{}}}],["false})@isboolean()@isnotempty",{"_index":461,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["false})@isboolean()@isnotempty()@isoptional",{"_index":901,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["false})@isstring()@isoptional",{"_index":768,"title":{},"body":{"classes/GetFlightsDto.html":{}}}],["fetched",{"_index":1000,"title":{},"body":{"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["finaliser",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["find",{"_index":654,"title":{},"body":{"controllers/FlightsController.html":{},"injectables/UsersService.html":{}}}],["find(email",{"_index":1068,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall",{"_index":724,"title":{},"body":{"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{}}}],["findall(options",{"_index":733,"title":{},"body":{"injectables/FlightsService.html":{}}}],["findall(query",{"_index":706,"title":{},"body":{"controllers/FlightsController.html":{}}}],["finding",{"_index":648,"title":{},"body":{"controllers/FlightsController.html":{}}}],["findone",{"_index":725,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["findone(id",{"_index":709,"title":{},"body":{"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":470,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"entities/Flight.html":{},"entities/Seat.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["first_name",{"_index":522,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["fixed",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["flex",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["flight",{"_index":439,"title":{"entities/Flight.html":{}},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"entities/Seat.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"classes/UpdateFlightDto.html":{},"coverage.html":{}}}],["flight'})@apiinternalservererrorresponse({description",{"_index":633,"title":{},"body":{"controllers/FlightsController.html":{}}}],["flight.dto",{"_index":676,"title":{},"body":{"controllers/FlightsController.html":{},"injectables/FlightsService.html":{}}}],["flight.dto.ts",{"_index":385,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{},"coverage.html":{}}}],["flight.dto.ts:106",{"_index":435,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:107",{"_index":887,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:115",{"_index":415,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:117",{"_index":892,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:124",{"_index":462,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:127",{"_index":885,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:134",{"_index":433,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:137",{"_index":902,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:144",{"_index":443,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:148",{"_index":891,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:153",{"_index":466,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:159",{"_index":895,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:162",{"_index":469,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:169",{"_index":904,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:171",{"_index":472,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:179",{"_index":906,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:189",{"_index":908,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:20",{"_index":409,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:22",{"_index":883,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:30",{"_index":454,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:33",{"_index":898,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:39",{"_index":425,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:43",{"_index":889,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:49",{"_index":456,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:54",{"_index":899,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:59",{"_index":445,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:65",{"_index":896,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:69",{"_index":459,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:76",{"_index":900,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:79",{"_index":451,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:87",{"_index":897,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:88",{"_index":438,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:97",{"_index":419,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["flight.entity",{"_index":721,"title":{},"body":{"modules/FlightsModule.html":{},"injectables/FlightsService.html":{}}}],["flight.seats",{"_index":783,"title":{},"body":{"entities/Seat.html":{}}}],["flight_number",{"_index":397,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["flightid",{"_index":498,"title":{},"body":{"classes/CreateSeatDto.html":{},"classes/SeatDto.html":{}}}],["flights",{"_index":653,"title":{},"body":{"controllers/FlightsController.html":{},"injectables/FlightsService.html":{}}}],["flights'})@apiinternalservererrorresponse({description",{"_index":655,"title":{},"body":{"controllers/FlightsController.html":{}}}],["flights.controller",{"_index":720,"title":{},"body":{"modules/FlightsModule.html":{}}}],["flights.dto",{"_index":678,"title":{},"body":{"controllers/FlightsController.html":{},"injectables/FlightsService.html":{}}}],["flights.dto.ts",{"_index":765,"title":{},"body":{"classes/GetFlightsDto.html":{},"coverage.html":{}}}],["flights.dto.ts:11",{"_index":770,"title":{},"body":{"classes/GetFlightsDto.html":{}}}],["flights.dto.ts:19",{"_index":769,"title":{},"body":{"classes/GetFlightsDto.html":{}}}],["flights.service",{"_index":681,"title":{},"body":{"controllers/FlightsController.html":{},"modules/FlightsModule.html":{}}}],["flights/flights.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["flightscontroller",{"_index":619,"title":{"controllers/FlightsController.html":{}},"body":{"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"coverage.html":{}}}],["flightsmodule",{"_index":60,"title":{"modules/FlightsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/SeatsModule.html":{},"modules.html":{},"overview.html":{}}}],["flightsservice",{"_index":680,"title":{"injectables/FlightsService.html":{}},"body":{"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"coverage.html":{},"overview.html":{}}}],["forroutes",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["found'})@apibadrequestresponse({description",{"_index":642,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["found'})@apiinternalservererrorresponse({description",{"_index":647,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["found'})@apiunauthorizedresponse({description",{"_index":990,"title":{},"body":{"controllers/UsersController.html":{}}}],["foundflight",{"_index":747,"title":{},"body":{"injectables/FlightsService.html":{}}}],["foundseat",{"_index":873,"title":{},"body":{"injectables/SeatsService.html":{}}}],["function",{"_index":361,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{}}}],["functions",{"_index":1145,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:id",{"_index":707,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["get('/:id')@apiokresponse({description",{"_index":646,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["get('whoami",{"_index":1040,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('whoami')@useguards(authguard)@apiokresponse({description",{"_index":999,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apiokresponse({description",{"_index":652,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["getflight",{"_index":625,"title":{},"body":{"controllers/FlightsController.html":{}}}],["getflight(@param('id",{"_index":708,"title":{},"body":{"controllers/FlightsController.html":{}}}],["getflight(id",{"_index":645,"title":{},"body":{"controllers/FlightsController.html":{}}}],["getflights",{"_index":626,"title":{},"body":{"controllers/FlightsController.html":{}}}],["getflights(@query",{"_index":705,"title":{},"body":{"controllers/FlightsController.html":{}}}],["getflights(query",{"_index":650,"title":{},"body":{"controllers/FlightsController.html":{}}}],["getflightsdto",{"_index":651,"title":{"classes/GetFlightsDto.html":{}},"body":{"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"coverage.html":{}}}],["getseat",{"_index":814,"title":{},"body":{"controllers/SeatsController.html":{}}}],["getseat(@param('id",{"_index":845,"title":{},"body":{"controllers/SeatsController.html":{}}}],["getseat(id",{"_index":824,"title":{},"body":{"controllers/SeatsController.html":{}}}],["getseats",{"_index":815,"title":{},"body":{"controllers/SeatsController.html":{}}}],["getting",{"_index":825,"title":{"index.html":{}},"body":{"controllers/SeatsController.html":{}}}],["getwelcomemessage",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["global",{"_index":556,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["guards/admin.guard",{"_index":675,"title":{},"body":{"controllers/FlightsController.html":{}}}],["handled",{"_index":372,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["handler",{"_index":373,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["hash",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash.tostring('hex",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["height",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["helpers/email",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["hidden",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["html",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpcode",{"_index":663,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["httpcode(200",{"_index":712,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["https://www.abaviation.com/wp",{"_index":429,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["ibrahim",{"_index":458,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["ibu3gxnbymx5x_czqwvinolbwei",{"_index":543,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["ibu3gxnbymx5x_czqwvinolbwei'})@isnotempty()@isjwt",{"_index":535,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["id",{"_index":519,"title":{},"body":{"classes/CreateSeatDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"entities/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["id'})@isnotempty()@isnumber",{"_index":506,"title":{},"body":{"classes/CreateSeatDto.html":{}}}],["identification",{"_index":452,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["identifier",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["implements",{"_index":7,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{}}}],["import",{"_index":23,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/SeatsModule.html":{},"modules/UsersModule.html":{}}}],["in'})@apinotfoundresponse({description",{"_index":989,"title":{},"body":{"controllers/UsersController.html":{}}}],["includes",{"_index":533,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["incorrect",{"_index":991,"title":{},"body":{"controllers/UsersController.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inherit",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":103,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/FlightsService.html":{},"interfaces/Request.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":104,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":741,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(seat",{"_index":866,"title":{},"body":{"injectables/SeatsService.html":{}}}],["inscription",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["inserted",{"_index":614,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}}}],["int",{"_index":579,"title":{},"body":{"entities/Flight.html":{}}}],["intercept",{"_index":367,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["intercept(context",{"_index":879,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["interface",{"_index":347,"title":{"interfaces/ClassConstructor.html":{},"interfaces/Request.html":{}},"body":{"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":349,"title":{},"body":{"interfaces/ClassConstructor.html":{},"interfaces/Request.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["international",{"_index":449,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["invalid",{"_index":967,"title":{},"body":{"controllers/UsersController.html":{}}}],["is_available",{"_index":499,"title":{},"body":{"classes/CreateSeatDto.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"classes/UpdateSeatDto.html":{}}}],["is_email_verified",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["isboolean",{"_index":475,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{}}}],["isdecimal",{"_index":476,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["isemail",{"_index":568,"title":{},"body":{"classes/EmailVerificationDto.html":{},"classes/UserCredentialsDto.html":{}}}],["isenum",{"_index":514,"title":{},"body":{"classes/CreateSeatDto.html":{},"classes/UpdateSeatDto.html":{}}}],["isenum(['first",{"_index":518,"title":{},"body":{"classes/CreateSeatDto.html":{},"classes/UpdateSeatDto.html":{}}}],["isglobal",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["isjwt",{"_index":537,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["isnotempty",{"_index":477,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"classes/UserCredentialsDto.html":{}}}],["isnumber",{"_index":478,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{}}}],["isoptional",{"_index":771,"title":{},"body":{"classes/GetFlightsDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{}}}],["isstring",{"_index":479,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"classes/UserCredentialsDto.html":{}}}],["issue",{"_index":611,"title":{},"body":{"entities/Flight.html":{}}}],["john",{"_index":539,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["john'})@isstring()@isnotempty",{"_index":524,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["johndoe@email.com",{"_index":569,"title":{},"body":{"classes/EmailVerificationDto.html":{},"classes/UserCredentialsDto.html":{}}}],["johndoe@email.com'})@isnotempty()@isemail",{"_index":945,"title":{},"body":{"classes/UserCredentialsDto.html":{}}}],["johndoe@email.com'})@isstring()@isnotempty()@isemail",{"_index":566,"title":{},"body":{"classes/EmailVerificationDto.html":{}}}],["join",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["jsonwebtoken",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["julius",{"_index":447,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["jwt",{"_index":532,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["jwtconstants",{"_index":1050,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":1058,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtmodule",{"_index":1049,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtmodule.register",{"_index":1056,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtservice",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["kassai",{"_index":1164,"title":{},"body":{"properties.html":{}}}],["kaym",{"_index":1163,"title":{},"body":{"properties.html":{}}}],["keys",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["l'&eacute;quipe",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["last",{"_index":526,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["last_name",{"_index":523,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["layout",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["le",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["left",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["length",{"_index":480,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"entities/Flight.html":{},"entities/Seat.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{}}}],["length(0",{"_index":482,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["length(1",{"_index":517,"title":{},"body":{"classes/CreateSeatDto.html":{},"classes/UpdateSeatDto.html":{}}}],["license",{"_index":1160,"title":{},"body":{"properties.html":{}}}],["lien",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["limit",{"_index":754,"title":{},"body":{"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{}}}],["line",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["literal",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["logged",{"_index":988,"title":{},"body":{"controllers/UsersController.html":{}}}],["logging",{"_index":993,"title":{},"body":{"controllers/UsersController.html":{}}}],["loginsert",{"_index":612,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}}}],["logo",{"_index":428,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["logo.png",{"_index":489,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["logo.png'})@isstring()@isnotempty",{"_index":432,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["logo.png'})@isstring()@isnotempty()@isoptional",{"_index":890,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["logremove",{"_index":617,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}}}],["logupdate",{"_index":615,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}}}],["mail",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["manytoone",{"_index":791,"title":{},"body":{"entities/Seat.html":{}}}],["manytoone(undefined",{"_index":782,"title":{},"body":{"entities/Seat.html":{}}}],["map",{"_index":356,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["map((data",{"_index":377,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["margin",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":37,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["maximum",{"_index":421,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["media",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["merci",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["message",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["metadata",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["middlewares/current",{"_index":1052,"title":{},"body":{"modules/UsersModule.html":{}}}],["minlength",{"_index":538,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{},"classes/UserCredentialsDto.html":{}}}],["minlength(6",{"_index":542,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{},"classes/UserCredentialsDto.html":{}}}],["miscellaneous",{"_index":1139,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["module",{"_index":53,"title":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/SeatsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/SeatsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":55,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/SeatsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mon",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["mot",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["mso",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["name",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":557,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["nestinterceptor",{"_index":352,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"interfaces/Request.html":{},"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":474,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"controllers/FlightsController.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"controllers/SeatsController.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"classes/UserCredentialsDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":553,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["never",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newflight",{"_index":743,"title":{},"body":{"injectables/FlightsService.html":{}}}],["newpassword",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"classes/PasswordResetDto.html":{}}}],["newseat",{"_index":868,"title":{},"body":{"injectables/SeatsService.html":{}}}],["newseat.flight",{"_index":870,"title":{},"body":{"injectables/SeatsService.html":{}}}],["newuser",{"_index":1075,"title":{},"body":{"injectables/UsersService.html":{}}}],["next",{"_index":368,"title":{},"body":{"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{}}}],["next.handle().pipe",{"_index":376,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["nextfunction",{"_index":550,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["nodemailer",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["notfoundexception",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('flight",{"_index":704,"title":{},"body":{"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{}}}],["notfoundexception('seat",{"_index":846,"title":{},"body":{"controllers/SeatsController.html":{},"injectables/SeatsService.html":{}}}],["notfoundexception('user",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('users",{"_index":1078,"title":{},"body":{"injectables/UsersService.html":{}}}],["nous",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["nowrap",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":1026,"title":{},"body":{"controllers/UsersController.html":{}}}],["nullable",{"_index":575,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}}}],["number",{"_index":420,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["numeric",{"_index":593,"title":{},"body":{"entities/Flight.html":{}}}],["nyerere",{"_index":448,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["obj",{"_index":807,"title":{},"body":{"classes/SeatDto.html":{}}}],["obj.flight.id",{"_index":808,"title":{},"body":{"classes/SeatDto.html":{}}}],["object",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign(foundflight",{"_index":749,"title":{},"body":{"injectables/FlightsService.html":{}}}],["object.assign(foundseat",{"_index":874,"title":{},"body":{"injectables/SeatsService.html":{}}}],["object.assign(user",{"_index":1079,"title":{},"body":{"injectables/UsersService.html":{}}}],["observable",{"_index":354,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["ondelete",{"_index":784,"title":{},"body":{"entities/Seat.html":{}}}],["onetomany",{"_index":605,"title":{},"body":{"entities/Flight.html":{}}}],["onetomany(undefined",{"_index":597,"title":{},"body":{"entities/Flight.html":{}}}],["onupdate",{"_index":933,"title":{},"body":{"entities/User.html":{}}}],["optional",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"interfaces/Request.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":736,"title":{},"body":{"injectables/FlightsService.html":{}}}],["origin",{"_index":398,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["origin_airport_name",{"_index":399,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["out",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ClassConstructor.html":{},"modules/FlightsModule.html":{},"modules/SeatsModule.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1155,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":1105,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["page",{"_index":752,"title":{},"body":{"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{}}}],["param",{"_index":664,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["param('id",{"_index":701,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["parameters",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parseint(options.limit",{"_index":755,"title":{},"body":{"injectables/FlightsService.html":{}}}],["parseint(options.page",{"_index":753,"title":{},"body":{"injectables/FlightsService.html":{}}}],["parseintpipe",{"_index":665,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["partial",{"_index":734,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["passe",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["password",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"controllers/UsersController.html":{}}}],["passwordreset",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["passwordreset(@body",{"_index":1024,"title":{},"body":{"controllers/UsersController.html":{}}}],["passwordreset(body",{"_index":963,"title":{},"body":{"controllers/UsersController.html":{}}}],["passwordreset(body.token",{"_index":1027,"title":{},"body":{"controllers/UsersController.html":{}}}],["passwordreset(token",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordresetdto",{"_index":772,"title":{"classes/PasswordResetDto.html":{}},"body":{"classes/PasswordResetDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["patch",{"_index":666,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["patch('/:id",{"_index":700,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["patch('/:id')@useguards(adminguard)@apiokresponse({description",{"_index":660,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["peu",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["pg",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["plaintoclass",{"_index":358,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["plaintoclass(this.dto",{"_index":380,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["plus",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["pm",{"_index":487,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["pm'})@isstring()@isnotempty",{"_index":418,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["pm'})@isstring()@isnotempty()@isoptional",{"_index":886,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["position",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["post",{"_index":667,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["post('/password",{"_index":964,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/register",{"_index":1031,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/register')@apicreatedresponse({description",{"_index":971,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/send",{"_index":975,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/signin",{"_index":1035,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/signin')@httpcode(200)@apiokresponse({description",{"_index":987,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/signout",{"_index":1043,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/signout')@httpcode(200)@apiokresponse({description",{"_index":996,"title":{},"body":{"controllers/UsersController.html":{}}}],["post()@useguards(adminguard)@apicreatedresponse({description",{"_index":629,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["pour",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["prefix",{"_index":621,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":464,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["primarygeneratedcolumn",{"_index":588,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}}}],["prince",{"_index":457,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["private",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["process.env.email",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.token_key",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["promisify",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["promisify(_scrypt",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":386,"title":{"properties.html":{}},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"properties.html":{}}}],["provide",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/SeatsModule.html":{},"modules/UsersModule.html":{}}}],["query",{"_index":657,"title":{},"body":{"controllers/FlightsController.html":{}}}],["randombytes",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["randombytes(8).tostring('hex",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["readonly",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["recevez",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["reflect",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["refundable",{"_index":400,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["register",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["register(@body",{"_index":1032,"title":{},"body":{"controllers/UsersController.html":{}}}],["register(body",{"_index":970,"title":{},"body":{"controllers/UsersController.html":{}}}],["register(data",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["reinitialisation",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["rejoint",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["relations",{"_index":872,"title":{},"body":{"injectables/SeatsService.html":{}}}],["relative",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":1064,"title":{},"body":{"injectables/UsersService.html":{}}}],["remove(id",{"_index":1071,"title":{},"body":{"injectables/UsersService.html":{}}}],["removed",{"_index":618,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}}}],["rencontrez",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["repo",{"_index":729,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":727,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["req",{"_index":552,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{}}}],["req.currentuser",{"_index":562,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["req.session",{"_index":560,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["request",{"_index":28,"title":{"interfaces/Request.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request.currentuser",{"_index":30,"title":{},"body":{"guards/AdminGuard.html":{},"miscellaneous/variables.html":{}}}],["request.currentuser.role",{"_index":33,"title":{},"body":{"guards/AdminGuard.html":{}}}],["request.session.userid",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{}}}],["require('cookie",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":767,"title":{},"body":{"classes/GetFlightsDto.html":{}}}],["res",{"_index":549,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"interfaces/Request.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["reset",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/SeatsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["reset')@httpcode(200)@apiokresponse({description",{"_index":965,"title":{},"body":{"controllers/UsersController.html":{}}}],["reset.dto",{"_index":1010,"title":{},"body":{"controllers/UsersController.html":{}}}],["reset.dto.ts",{"_index":774,"title":{},"body":{"classes/PasswordResetDto.html":{},"coverage.html":{}}}],["reset.dto.ts:13",{"_index":776,"title":{},"body":{"classes/PasswordResetDto.html":{}}}],["reset.dto.ts:23",{"_index":777,"title":{},"body":{"classes/PasswordResetDto.html":{}}}],["resetting",{"_index":1030,"title":{},"body":{"controllers/UsersController.html":{}}}],["response",{"_index":378,"title":{},"body":{"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{}}}],["result",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":36,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["reviewed",{"_index":684,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["reçu",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["right",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["rimraf",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":918,"title":{},"body":{"entities/User.html":{},"classes/UserDto.html":{}}}],["row",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["row:not(.no",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["run",{"_index":369,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["running",{"_index":375,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["rxjs",{"_index":355,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":357,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["réinitialisation",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["réinitialiser",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["salt",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["save",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["scrypt",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrypt(data.password",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["scrypt(newpassword",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["scrypt(password",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["seat",{"_index":502,"title":{"entities/Seat.html":{}},"body":{"classes/CreateSeatDto.html":{},"entities/Flight.html":{},"entities/Seat.html":{},"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"classes/UpdateSeatDto.html":{},"coverage.html":{}}}],["seat'})@apiinternalservererrorresponse({description",{"_index":822,"title":{},"body":{"controllers/SeatsController.html":{}}}],["seat'})@apinotfoundresponse({description",{"_index":818,"title":{},"body":{"controllers/SeatsController.html":{}}}],["seat.dto",{"_index":835,"title":{},"body":{"controllers/SeatsController.html":{},"injectables/SeatsService.html":{}}}],["seat.dto.ts",{"_index":496,"title":{},"body":{"classes/CreateSeatDto.html":{},"classes/UpdateSeatDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["seat.dto.ts:26",{"_index":513,"title":{},"body":{"classes/CreateSeatDto.html":{}}}],["seat.dto.ts:28",{"_index":915,"title":{},"body":{"classes/UpdateSeatDto.html":{}}}],["seat.dto.ts:35",{"_index":510,"title":{},"body":{"classes/CreateSeatDto.html":{}}}],["seat.dto.ts:38",{"_index":913,"title":{},"body":{"classes/UpdateSeatDto.html":{}}}],["seat.dto.ts:45",{"_index":505,"title":{},"body":{"classes/CreateSeatDto.html":{}}}],["seat.dto.ts:50",{"_index":911,"title":{},"body":{"classes/UpdateSeatDto.html":{}}}],["seat.dto.ts:53",{"_index":507,"title":{},"body":{"classes/CreateSeatDto.html":{}}}],["seat.entity",{"_index":806,"title":{},"body":{"classes/SeatDto.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{}}}],["seat.flight",{"_index":598,"title":{},"body":{"entities/Flight.html":{}}}],["seat_base_price",{"_index":401,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["seat_number",{"_index":500,"title":{},"body":{"classes/CreateSeatDto.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"classes/UpdateSeatDto.html":{}}}],["seat_price_business_class",{"_index":402,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["seat_price_first_class",{"_index":403,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["seatdto",{"_index":796,"title":{"classes/SeatDto.html":{}},"body":{"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"coverage.html":{}}}],["seats",{"_index":422,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"classes/UpdateFlightDto.html":{}}}],["seats'})@apiinternalservererrorresponse({description",{"_index":827,"title":{},"body":{"controllers/SeatsController.html":{}}}],["seats.controller",{"_index":854,"title":{},"body":{"modules/SeatsModule.html":{}}}],["seats.service",{"_index":838,"title":{},"body":{"controllers/SeatsController.html":{},"modules/SeatsModule.html":{}}}],["seats/seats.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["seatscontroller",{"_index":809,"title":{"controllers/SeatsController.html":{}},"body":{"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"coverage.html":{}}}],["seatsmodule",{"_index":61,"title":{"modules/SeatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeatsModule.html":{},"modules.html":{},"overview.html":{}}}],["seatsservice",{"_index":837,"title":{"injectables/SeatsService.html":{}},"body":{"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":1057,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":978,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendemailverification",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["sendemailverification(@body",{"_index":1018,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendemailverification(body",{"_index":974,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendemailverification(body.email",{"_index":1020,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendemailverification(email",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendemailwithnodemailer",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sendemailwithnodemailer(emaildata",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["sending",{"_index":980,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendpasswordresetemail",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["sendpasswordresetemail(@body",{"_index":1021,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendpasswordresetemail(body",{"_index":982,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendpasswordresetemail(body.email",{"_index":1022,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendpasswordresetemail(email",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["sent",{"_index":379,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{}}}],["serialize",{"_index":833,"title":{},"body":{"controllers/SeatsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["serialize(dto",{"_index":362,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/functions.html":{}}}],["serialize(seatdto",{"_index":840,"title":{},"body":{"controllers/SeatsController.html":{}}}],["serialize(userdto",{"_index":1015,"title":{},"body":{"controllers/UsersController.html":{}}}],["serializeinterceptor",{"_index":365,"title":{"classes/SerializeInterceptor.html":{}},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{}}}],["serializeinterceptor(dto",{"_index":364,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["session",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.userid",{"_index":1025,"title":{},"body":{"controllers/UsersController.html":{}}}],["si",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["signin(@body",{"_index":1036,"title":{},"body":{"controllers/UsersController.html":{}}}],["signin(body",{"_index":986,"title":{},"body":{"controllers/UsersController.html":{}}}],["signin(body.email",{"_index":1037,"title":{},"body":{"controllers/UsersController.html":{}}}],["signin(email",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":1059,"title":{},"body":{"modules/UsersModule.html":{}}}],["signout",{"_index":961,"title":{},"body":{"controllers/UsersController.html":{}}}],["signout(@session",{"_index":1044,"title":{},"body":{"controllers/UsersController.html":{}}}],["signout(session",{"_index":995,"title":{},"body":{"controllers/UsersController.html":{}}}],["single",{"_index":844,"title":{},"body":{"controllers/SeatsController.html":{}}}],["skip",{"_index":758,"title":{},"body":{"injectables/FlightsService.html":{}}}],["solving",{"_index":608,"title":{},"body":{"entities/Flight.html":{}}}],["something",{"_index":370,"title":{},"body":{"interfaces/ClassConstructor.html":{},"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../app.module.ts",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":1142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../current",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email.ts",{"_index":1147,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seat.entity.ts",{"_index":1141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../serialize.interceptor.ts",{"_index":1148,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../update",{"_index":1143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.entity.ts",{"_index":1144,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:37",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["src/flights/dtos/create",{"_index":384,"title":{},"body":{"classes/CreateFlightDto.html":{},"coverage.html":{}}}],["src/flights/dtos/get",{"_index":764,"title":{},"body":{"classes/GetFlightsDto.html":{},"coverage.html":{}}}],["src/flights/dtos/update",{"_index":881,"title":{},"body":{"classes/UpdateFlightDto.html":{},"coverage.html":{}}}],["src/flights/flight.entity",{"_index":790,"title":{},"body":{"entities/Seat.html":{}}}],["src/flights/flight.entity.ts",{"_index":572,"title":{},"body":{"entities/Flight.html":{},"coverage.html":{}}}],["src/flights/flight.entity.ts:100",{"_index":581,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:107",{"_index":584,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:113",{"_index":594,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:119",{"_index":595,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:125",{"_index":596,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:129",{"_index":599,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:15",{"_index":589,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:22",{"_index":576,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:29",{"_index":587,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:35",{"_index":580,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:42",{"_index":590,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:49",{"_index":585,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:56",{"_index":591,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:63",{"_index":586,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:69",{"_index":583,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:75",{"_index":578,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:81",{"_index":582,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:87",{"_index":577,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:94",{"_index":592,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flights.controller.ts",{"_index":620,"title":{},"body":{"controllers/FlightsController.html":{},"coverage.html":{}}}],["src/flights/flights.controller.ts:118",{"_index":656,"title":{},"body":{"controllers/FlightsController.html":{}}}],["src/flights/flights.controller.ts:148",{"_index":649,"title":{},"body":{"controllers/FlightsController.html":{}}}],["src/flights/flights.controller.ts:183",{"_index":644,"title":{},"body":{"controllers/FlightsController.html":{}}}],["src/flights/flights.controller.ts:49",{"_index":637,"title":{},"body":{"controllers/FlightsController.html":{}}}],["src/flights/flights.controller.ts:83",{"_index":662,"title":{},"body":{"controllers/FlightsController.html":{}}}],["src/flights/flights.module",{"_index":855,"title":{},"body":{"modules/SeatsModule.html":{}}}],["src/flights/flights.module.ts",{"_index":718,"title":{},"body":{"modules/FlightsModule.html":{}}}],["src/flights/flights.service",{"_index":865,"title":{},"body":{"injectables/SeatsService.html":{}}}],["src/flights/flights.service.ts",{"_index":723,"title":{},"body":{"injectables/FlightsService.html":{},"coverage.html":{}}}],["src/flights/flights.service.ts:13",{"_index":728,"title":{},"body":{"injectables/FlightsService.html":{}}}],["src/flights/flights.service.ts:16",{"_index":731,"title":{},"body":{"injectables/FlightsService.html":{}}}],["src/flights/flights.service.ts:26",{"_index":739,"title":{},"body":{"injectables/FlightsService.html":{}}}],["src/flights/flights.service.ts:43",{"_index":737,"title":{},"body":{"injectables/FlightsService.html":{}}}],["src/flights/flights.service.ts:53",{"_index":735,"title":{},"body":{"injectables/FlightsService.html":{}}}],["src/flights/flights.service.ts:69",{"_index":732,"title":{},"body":{"injectables/FlightsService.html":{}}}],["src/guards/admin.guard",{"_index":832,"title":{},"body":{"controllers/SeatsController.html":{}}}],["src/guards/admin.guard.ts",{"_index":6,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts:4",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/guards/auth.guard",{"_index":1003,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/guards/auth.guard.ts",{"_index":113,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/guards/auth.guard.ts:4",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/helpers/email.ts",{"_index":1093,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/interceptors/serialize.interceptor",{"_index":834,"title":{},"body":{"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["src/interceptors/serialize.interceptor.ts",{"_index":350,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/interceptors/serialize.interceptor.ts:19",{"_index":878,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["src/interceptors/serialize.interceptor.ts:22",{"_index":880,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["src/main.ts",{"_index":1094,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/seats/dtos/create",{"_index":495,"title":{},"body":{"classes/CreateSeatDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/seats/dtos/seat.dto.ts",{"_index":797,"title":{},"body":{"classes/SeatDto.html":{},"coverage.html":{}}}],["src/seats/dtos/seat.dto.ts:12",{"_index":804,"title":{},"body":{"classes/SeatDto.html":{}}}],["src/seats/dtos/seat.dto.ts:15",{"_index":799,"title":{},"body":{"classes/SeatDto.html":{}}}],["src/seats/dtos/seat.dto.ts:19",{"_index":802,"title":{},"body":{"classes/SeatDto.html":{}}}],["src/seats/dtos/seat.dto.ts:6",{"_index":803,"title":{},"body":{"classes/SeatDto.html":{}}}],["src/seats/dtos/seat.dto.ts:9",{"_index":805,"title":{},"body":{"classes/SeatDto.html":{}}}],["src/seats/dtos/update",{"_index":909,"title":{},"body":{"classes/UpdateSeatDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/seats/seat.entity",{"_index":600,"title":{},"body":{"entities/Flight.html":{}}}],["src/seats/seat.entity.ts",{"_index":779,"title":{},"body":{"entities/Seat.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/seats/seat.entity.ts:23",{"_index":787,"title":{},"body":{"entities/Seat.html":{}}}],["src/seats/seat.entity.ts:30",{"_index":789,"title":{},"body":{"entities/Seat.html":{}}}],["src/seats/seat.entity.ts:37",{"_index":788,"title":{},"body":{"entities/Seat.html":{}}}],["src/seats/seat.entity.ts:45",{"_index":781,"title":{},"body":{"entities/Seat.html":{}}}],["src/seats/seat.entity.ts:48",{"_index":786,"title":{},"body":{"entities/Seat.html":{}}}],["src/seats/seats.controller.ts",{"_index":810,"title":{},"body":{"controllers/SeatsController.html":{},"coverage.html":{}}}],["src/seats/seats.controller.ts:114",{"_index":826,"title":{},"body":{"controllers/SeatsController.html":{}}}],["src/seats/seats.controller.ts:148",{"_index":831,"title":{},"body":{"controllers/SeatsController.html":{}}}],["src/seats/seats.controller.ts:187",{"_index":823,"title":{},"body":{"controllers/SeatsController.html":{}}}],["src/seats/seats.controller.ts:52",{"_index":819,"title":{},"body":{"controllers/SeatsController.html":{}}}],["src/seats/seats.controller.ts:84",{"_index":828,"title":{},"body":{"controllers/SeatsController.html":{}}}],["src/seats/seats.module.ts",{"_index":853,"title":{},"body":{"modules/SeatsModule.html":{}}}],["src/seats/seats.service.ts",{"_index":857,"title":{},"body":{"injectables/SeatsService.html":{},"coverage.html":{}}}],["src/seats/seats.service.ts:13",{"_index":858,"title":{},"body":{"injectables/SeatsService.html":{}}}],["src/seats/seats.service.ts:19",{"_index":860,"title":{},"body":{"injectables/SeatsService.html":{}}}],["src/seats/seats.service.ts:37",{"_index":863,"title":{},"body":{"injectables/SeatsService.html":{}}}],["src/seats/seats.service.ts:49",{"_index":862,"title":{},"body":{"injectables/SeatsService.html":{}}}],["src/seats/seats.service.ts:60",{"_index":864,"title":{},"body":{"injectables/SeatsService.html":{}}}],["src/seats/seats.service.ts:77",{"_index":861,"title":{},"body":{"injectables/SeatsService.html":{}}}],["src/users/auth.service.ts",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/auth.service.ts:20",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth.service.ts:27",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth.service.ts:369",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth.service.ts:720",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth.service.ts:769",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth.service.ts:786",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/constants/index.ts",{"_index":1099,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/decorators/current",{"_index":1100,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dtos/create",{"_index":520,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/email",{"_index":564,"title":{},"body":{"classes/EmailVerificationDto.html":{},"coverage.html":{}}}],["src/users/dtos/password",{"_index":773,"title":{},"body":{"classes/PasswordResetDto.html":{},"coverage.html":{}}}],["src/users/dtos/user",{"_index":943,"title":{},"body":{"classes/UserCredentialsDto.html":{},"coverage.html":{}}}],["src/users/dtos/user.dto.ts",{"_index":949,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/dtos/user.dto.ts:12",{"_index":955,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:15",{"_index":951,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:18",{"_index":956,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:21",{"_index":950,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:24",{"_index":957,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:27",{"_index":954,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:6",{"_index":953,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:9",{"_index":952,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/middlewares/current",{"_index":545,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["src/users/user.entity.ts",{"_index":916,"title":{},"body":{"entities/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/user.entity.ts:22",{"_index":926,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:26",{"_index":925,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:30",{"_index":928,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:38",{"_index":924,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:41",{"_index":929,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:49",{"_index":931,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:56",{"_index":923,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:64",{"_index":934,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:71",{"_index":927,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":959,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:115",{"_index":969,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:153",{"_index":973,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:189",{"_index":994,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:214",{"_index":1001,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:222",{"_index":997,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:52",{"_index":981,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:83",{"_index":985,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1047,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.module.ts:23",{"_index":1048,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1063,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:12",{"_index":1065,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":1067,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":1070,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:34",{"_index":1069,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":1073,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:56",{"_index":1072,"title":{},"body":{"injectables/UsersService.html":{}}}],["stack",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["started",{"_index":1149,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1085,"title":{},"body":{"coverage.html":{}}}],["storedhash",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["subject",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["successful",{"_index":1023,"title":{},"body":{"controllers/UsersController.html":{}}}],["successful'})@apibadrequestresponse({description",{"_index":966,"title":{},"body":{"controllers/UsersController.html":{}}}],["successfully",{"_index":691,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["successfully'})@apibadrequestresponse({description",{"_index":631,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["successfully'})@apinotfoundresponse({description",{"_index":641,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["support",{"_index":1152,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["svg",{"_index":1153,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":697,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["sysadmin",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["table",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":759,"title":{},"body":{"injectables/FlightsService.html":{}}}],["tanzania",{"_index":486,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["tanzania'})@isstring()@length(0",{"_index":441,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["td",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["text",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((res",{"_index":695,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["then((user",{"_index":1033,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.appservice.getwelcomemessage",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice",{"_index":1019,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.configservice.get('cookie_key",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["this.findone(id",{"_index":748,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["this.flightsservice",{"_index":693,"title":{},"body":{"controllers/FlightsController.html":{}}}],["this.flightsservice.findone(seat.flightid",{"_index":867,"title":{},"body":{"injectables/SeatsService.html":{}}}],["this.jwtservice.sign",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(data.token",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.repo.create(flight",{"_index":744,"title":{},"body":{"injectables/FlightsService.html":{}}}],["this.repo.create(seat",{"_index":869,"title":{},"body":{"injectables/SeatsService.html":{}}}],["this.repo.create(user",{"_index":1076,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repo.find",{"_index":757,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["this.repo.find()).length",{"_index":761,"title":{},"body":{"injectables/FlightsService.html":{}}}],["this.repo.findone(id",{"_index":751,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["this.repo.remove(flight",{"_index":763,"title":{},"body":{"injectables/FlightsService.html":{}}}],["this.repo.remove(seat",{"_index":876,"title":{},"body":{"injectables/SeatsService.html":{}}}],["this.repo.remove(user",{"_index":1081,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repo.save(foundflight",{"_index":750,"title":{},"body":{"injectables/FlightsService.html":{}}}],["this.repo.save(foundseat",{"_index":875,"title":{},"body":{"injectables/SeatsService.html":{}}}],["this.repo.save(newflight",{"_index":745,"title":{},"body":{"injectables/FlightsService.html":{}}}],["this.repo.save(newseat",{"_index":871,"title":{},"body":{"injectables/SeatsService.html":{}}}],["this.repo.save(newuser",{"_index":1077,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repo.save(user",{"_index":1080,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.seatsservice",{"_index":843,"title":{},"body":{"controllers/SeatsController.html":{}}}],["this.usersservice.create(userdata",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.find(decodedtoken.email",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.find(email",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(userid",{"_index":561,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["this.usersservice.update(user.id",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":416,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"classes/UpdateFlightDto.html":{},"controllers/UsersController.html":{}}}],["timestamp",{"_index":921,"title":{},"body":{"entities/User.html":{}}}],["token",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{},"controllers/UsersController.html":{}}}],["top",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["total_count",{"_index":762,"title":{},"body":{"injectables/FlightsService.html":{}}}],["totalcount",{"_index":760,"title":{},"body":{"injectables/FlightsService.html":{}}}],["tour",{"_index":110,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{}}}],["tour@gmail.com",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["tr",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["transform",{"_index":800,"title":{},"body":{"classes/SeatDto.html":{}}}],["transformer",{"_index":359,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SeatDto.html":{},"classes/SerializeInterceptor.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["true",{"_index":35,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateSeatDto.html":{},"entities/Seat.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{}}}],["true})@isboolean()@isnotempty",{"_index":509,"title":{},"body":{"classes/CreateSeatDto.html":{}}}],["true})@isboolean()@isnotempty()@isoptional",{"_index":912,"title":{},"body":{"classes/UpdateSeatDto.html":{}}}],["truthy",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{}}}],["try",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlightsService.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["type",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"entities/Seat.html":{},"classes/SeatDto.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":606,"title":{},"body":{"entities/Flight.html":{},"injectables/FlightsService.html":{},"entities/Seat.html":{},"injectables/SeatsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/SeatsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([flight",{"_index":722,"title":{},"body":{"modules/FlightsModule.html":{}}}],["typeormmodule.forfeature([seat",{"_index":856,"title":{},"body":{"modules/SeatsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1055,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["types/cookie",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["types/nodemailer",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["u",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["ui",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["unauthorizedexception('incorrect",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["undefined",{"_index":780,"title":{},"body":{"entities/Seat.html":{},"classes/UpdateSeatDto.html":{},"entities/User.html":{}}}],["undefined.id)@expose",{"_index":801,"title":{},"body":{"classes/SeatDto.html":{}}}],["underline",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["une",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["unique",{"_index":792,"title":{},"body":{"entities/Seat.html":{},"entities/User.html":{}}}],["unique(['email",{"_index":938,"title":{},"body":{"entities/User.html":{}}}],["unique(['seat_number",{"_index":793,"title":{},"body":{"entities/Seat.html":{}}}],["unknown",{"_index":116,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":1161,"title":{},"body":{"properties.html":{}}}],["update",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(attrs",{"_index":738,"title":{},"body":{"injectables/FlightsService.html":{}}}],["update(body",{"_index":702,"title":{},"body":{"controllers/FlightsController.html":{}}}],["update(id",{"_index":848,"title":{},"body":{"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"injectables/UsersService.html":{}}}],["updated",{"_index":616,"title":{},"body":{"entities/Flight.html":{},"controllers/FlightsController.html":{},"entities/Seat.html":{},"controllers/SeatsController.html":{},"entities/User.html":{}}}],["updated_at",{"_index":919,"title":{},"body":{"entities/User.html":{},"classes/UserDto.html":{}}}],["updatedatecolumn",{"_index":936,"title":{},"body":{"entities/User.html":{}}}],["updatedatecolumn({type",{"_index":932,"title":{},"body":{"entities/User.html":{}}}],["updateduser",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateflight",{"_index":627,"title":{},"body":{"controllers/FlightsController.html":{}}}],["updateflight(id",{"_index":658,"title":{},"body":{"controllers/FlightsController.html":{}}}],["updateflightdto",{"_index":659,"title":{"classes/UpdateFlightDto.html":{}},"body":{"controllers/FlightsController.html":{},"classes/UpdateFlightDto.html":{},"coverage.html":{}}}],["updates",{"_index":847,"title":{},"body":{"controllers/SeatsController.html":{}}}],["updateseat",{"_index":816,"title":{},"body":{"controllers/SeatsController.html":{}}}],["updateseat(id",{"_index":829,"title":{},"body":{"controllers/SeatsController.html":{}}}],["updateseatdto",{"_index":830,"title":{"classes/UpdateSeatDto.html":{}},"body":{"controllers/SeatsController.html":{},"classes/UpdateSeatDto.html":{},"coverage.html":{}}}],["updating",{"_index":661,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["url",{"_index":426,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["use",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/UsersController.html":{}}}],["use(req",{"_index":548,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["useguards",{"_index":668,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":690,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{}}}],["useguards(authguard",{"_index":1041,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors",{"_index":351,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["useinterceptors(new",{"_index":363,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["user",{"_index":166,"title":{"entities/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"controllers/FlightsController.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"controllers/SeatsController.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{}}}],["user'})@apiinternalservererrorresponse({description",{"_index":972,"title":{},"body":{"controllers/UsersController.html":{}}}],["user'})@apinotfoundresponse({description",{"_index":968,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.decorator",{"_index":1006,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":1101,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":521,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":525,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":528,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":530,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":536,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.entity",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.id",{"_index":1034,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.middleware",{"_index":1053,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.middleware.ts",{"_index":546,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["user.middleware.ts:15",{"_index":547,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{}}}],["user.middleware.ts:18",{"_index":551,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{}}}],["user.password.split",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercredentialsdto",{"_index":942,"title":{"classes/UserCredentialsDto.html":{}},"body":{"classes/UserCredentialsDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userdata",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.token",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto",{"_index":948,"title":{"classes/UserDto.html":{}},"body":{"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userid",{"_index":559,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["userrole",{"_index":930,"title":{},"body":{"entities/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.customer",{"_index":940,"title":{},"body":{"entities/User.html":{}}}],["users",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":1054,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.length",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["users.service",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":958,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":62,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":130,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalue",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["v&eacute;rifier",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["valid",{"_index":531,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["validationpipe",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":481,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateSeatDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/GetFlightsDto.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UpdateSeatDto.html":{},"classes/UserCredentialsDto.html":{},"dependencies.html":{}}}],["value",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":574,"title":{},"body":{"entities/Flight.html":{},"entities/Seat.html":{},"entities/User.html":{}}}],["variable",{"_index":1087,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1165,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":977,"title":{},"body":{"controllers/UsersController.html":{}}}],["verification')@httpcode(200)@apiokresponse({description",{"_index":976,"title":{},"body":{"controllers/UsersController.html":{}}}],["verification.dto",{"_index":1008,"title":{},"body":{"controllers/UsersController.html":{}}}],["verification.dto.ts",{"_index":565,"title":{},"body":{"classes/EmailVerificationDto.html":{},"coverage.html":{}}}],["verification.dto.ts:13",{"_index":567,"title":{},"body":{"classes/EmailVerificationDto.html":{}}}],["verified",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":1158,"title":{},"body":{"properties.html":{}}}],["vertical",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["veuillez",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["view",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["visibility",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["void",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["votre",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["vous",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["welcome",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["welcomemessage",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["went",{"_index":634,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["whether",{"_index":460,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["whitelist",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["whoami",{"_index":962,"title":{},"body":{"controllers/UsersController.html":{}}}],["whoami(@currentuser",{"_index":1042,"title":{},"body":{"controllers/UsersController.html":{}}}],["whoami(user",{"_index":998,"title":{},"body":{"controllers/UsersController.html":{}}}],["width",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["wrap",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["wrong",{"_index":635,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["y",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["yvanig",{"_index":109,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["zoom",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/SeatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/admin.guard.ts\n            \n\n\n\n\n                \n                Implements\n                \n                \n                                CanActivate\n                \n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/admin.guard.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext } from '@nestjs/common';\n\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n\n    if (!request.currentUser) {\n      return false;\n    }\n    if (request.currentUser.role !== 'sysadmin') {\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                welcomeMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        welcomeMessage\n                        \n                    \n                \n            \n            \n                \nwelcomeMessage()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller('')\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  welcomeMessage(): { message: string } {\n    return this.appService.getWelcomeMessage();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nFlightsModule\n\nFlightsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nFlightsModule->AppModule\n\n\n\n\n\nSeatsModule\n\nSeatsModule\n\nAppModule -->\n\nSeatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FlightsModule\n                        \n                        \n                            SeatsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, ValidationPipe, MiddlewareConsumer } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_PIPE } from '@nestjs/core';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nconst cookieSession = require('cookie-session');\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { FlightsModule } from './flights/flights.module';\nimport { SeatsModule } from './seats/seats.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: `.env.${process.env.NODE_ENV}`,\n    }),\n    TypeOrmModule.forRoot(),\n    UsersModule,\n    FlightsModule,\n    SeatsModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_PIPE,\n      useValue: new ValidationPipe({\n        whitelist: true,\n      }),\n    },\n  ],\n})\nexport class AppModule {\n  constructor(private configService: ConfigService) {}\n\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(\n        cookieSession({\n          keys: [this.configService.get('COOKIE_KEY')],\n        }),\n      )\n      .forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWelcomeMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getWelcomeMessage\n                        \n                    \n                \n            \n            \n                \ngetWelcomeMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getWelcomeMessage(): { message: string } {\n    return {\n      message: 'Welcome to the YVANIG Tour API',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth.guard.ts\n            \n\n\n\n\n                \n                Implements\n                \n                \n                                CanActivate\n                \n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext } from '@nestjs/common';\n\nexport class AuthGuard implements CanActivate {\n  async canActivate(context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest();\n    return request.session.userId; // truthy value if exist\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                passwordReset\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                sendEmailVerification\n                            \n                            \n                                    Async\n                                sendPasswordResetEmail\n                            \n                            \n                                    Async\n                                signin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, configService: ConfigService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/users/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        passwordReset\n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordReset(token: string, newPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth.service.ts:786\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth.service.ts:720\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailVerification\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerification(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordResetEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth.service.ts:369\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth.service.ts:769\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { sendEmailWithNodemailer } from '../helpers/email';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { randomBytes, scrypt as _scrypt } from 'crypto';\nimport { promisify } from 'util';\nimport { User } from './user.entity';\n\nconst scrypt = promisify(_scrypt);\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private configService: ConfigService,\n    private jwtService: JwtService,\n  ) {}\n\n  async sendEmailVerification(email: string) {\n    const token = this.jwtService.sign({ email });\n\n    const emailData = {\n      from: process.env.EMAIL,\n      to: email,\n      subject: `YVANIG TOUR | Veuillez confirmer votre email`,\n      text: `Merci d'avoir rejoint YVANIG TOUR. Nous avons besoin d'un peu plus d'informations pour compléter votre inscription, y compris une confirmation de votre adresse e-mail.`,\n      html: `\n      \n\n      \n        \n        \n        \n          body {\n            visibility: hidden\n          }\n        \n      \n        \n      \n      \n        \n          .u-row {\n            display: flex;\n            flex-wrap: nowrap;\n            margin-left: 0;\n            margin-right: 0;\n          }\n          \n          .u-row .u-col {\n            position: relative;\n            width: 100%;\n            padding-right: 0;\n            padding-left: 0;\n          }\n          \n          .u-row .u-col.u-col-100 {\n            flex: 0 0 100%;\n            max-width: 100%;\n          }\n          \n          @media (max-width: 767px) {\n            .u-row:not(.no-stack) {\n              flex-wrap: wrap;\n            }\n            .u-row:not(.no-stack) .u-col {\n              flex: 0 0 100%;\n              max-width: 100%;\n            }\n          }\n          \n          body {\n            margin: 0;\n            padding: 0;\n          }\n          \n          table,\n          tr,\n          td {\n            vertical-align: top;\n            border-collapse: collapse;\n          }\n          \n          p {\n            margin: 0;\n          }\n          \n          .ie-container table,\n          .mso-container table {\n            table-layout: fixed;\n          }\n          \n          * {\n            line-height: inherit;\n          }\n          \n          table,\n          td {\n            color: #000000;\n          }\n          \n          a {\n            color: #0000ee;\n            text-decoration: underline;\n          }\n        \n      \n      \n      \n      \n      \n        \n        \n        \n          \n            \n              \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    View Email in Browser\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    \n                                      \n      \n                                        \n                                      \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    \n                                      \n      \n                                        \n      \n                                        \n                                      \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Merci de nous avoir rejoint !\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    V&eacute;rifier votre adresse email\n                                      \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Bonjour,Merci d&rsquo;avoir rejoint YVANIG TOUR.\n                                    Pour finaliser votre inscription, cliquez sur le lien ci-dessous.\n                                    Si vous rencontrez des difficult&eacute;s pour vous connecter &agrave; votre compte, contactez-nous &agrave; yvanig-tour@gmail.com\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    \n                                    \n                                      V&eacute;rifier mon email\n                                      \n                                      \n                                    \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Cordialement,\n                                    L'&eacute;quipe YVANIG\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n              \n            \n          \n        \n        \n        \n      \n      \n      \n      `,\n    };\n\n    await sendEmailWithNodemailer(emailData);\n\n    return JSON.stringify({\n      success: true,\n    });\n  }\n\n  async sendPasswordResetEmail(email: string) {\n    // check if user exists\n    const [user] = await this.usersService.find(email);\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    const token = this.jwtService.sign({ email });\n\n    const emailData = {\n      from: process.env.EMAIL,\n      to: email,\n      subject: `YVANIG TOUR | Réinitialisation de votre mot de passe`,\n      text: `Vous recevez cet email car vous avez demandé une réinitialisation de votre mot de passe.`,\n      html: `\n      \n\n      \n        \n        \n        \n          body {\n            visibility: hidden\n          }\n        \n      \n        \n      \n      \n        \n          .u-row {\n            display: flex;\n            flex-wrap: nowrap;\n            margin-left: 0;\n            margin-right: 0;\n          }\n          \n          .u-row .u-col {\n            position: relative;\n            width: 100%;\n            padding-right: 0;\n            padding-left: 0;\n          }\n          \n          .u-row .u-col.u-col-100 {\n            flex: 0 0 100%;\n            max-width: 100%;\n          }\n          \n          @media (max-width: 767px) {\n            .u-row:not(.no-stack) {\n              flex-wrap: wrap;\n            }\n            .u-row:not(.no-stack) .u-col {\n              flex: 0 0 100%;\n              max-width: 100%;\n            }\n          }\n          \n          body {\n            margin: 0;\n            padding: 0;\n          }\n          \n          table,\n          tr,\n          td {\n            vertical-align: top;\n            border-collapse: collapse;\n          }\n          \n          p {\n            margin: 0;\n          }\n          \n          .ie-container table,\n          .mso-container table {\n            table-layout: fixed;\n          }\n          \n          * {\n            line-height: inherit;\n          }\n          \n          table,\n          td {\n            color: #000000;\n          }\n          \n          a {\n            color: #0000ee;\n            text-decoration: underline;\n          }\n        \n      \n      \n      \n      \n      \n        \n        \n        \n          \n            \n              \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    View Email in Browser\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    \n                                      \n      \n                                        \n      \n                                        \n                                      \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    \n                                      \n      \n                                        \n      \n                                        \n                                      \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Merci de nous avoir rejoint !\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Réinitialiser votre mot de passe\n                                      \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Bonjour,Nous avons reçu votre demande de reinitialisation de mot de passe.\n                                    Pour finaliser votre demande, cliquez sur le lien ci-dessous.\n                                    Si vous rencontrez des difficult&eacute;s pour vous connecter &agrave; votre compte, contactez-nous &agrave; yvanig-tour@gmail.com\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    \n                                    \n                                      V&eacute;rifier mon email\n                                      \n                                      \n                                    \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Cordialement,\n                                    L'&eacute;quipe YVANIG\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n              \n            \n          \n        \n        \n        \n      \n      \n      \n      `,\n    };\n\n    await sendEmailWithNodemailer(emailData);\n\n    return JSON.stringify({\n      success: true,\n    });\n  }\n\n  async register(data: CreateUserDto) {\n    // check if email has been verified\n    let decodedToken;\n\n    try {\n      decodedToken = await this.jwtService.verify(data.token);\n    } catch (err) {\n      throw new BadRequestException('Invalid token');\n    }\n\n    // extra check just in case\n    if (!decodedToken && !decodedToken.email) {\n      throw new BadRequestException('Invalid token');\n    }\n\n    // check if user already exists\n    const users = await this.usersService.find(decodedToken.email);\n\n    if (users.length) {\n      throw new BadRequestException('Email in use');\n    }\n\n    // Hash the user's password\n\n    // 1- Generate a salt\n    const salt = randomBytes(8).toString('hex');\n    // 2- Generate a password hash\n    const hash = (await scrypt(data.password, salt, 32)) as Buffer;\n    // 3- Join the hash and the salt\n    const result = salt + '.' + hash.toString('hex');\n    // 4- Create a new user and save it to the database\n\n    const userData = {\n      ...data,\n      email: decodedToken.email,\n      is_email_verified: true,\n      password: result,\n    };\n\n    delete userData.token;\n\n    try {\n      const user = await this.usersService.create(userData);\n      return user;\n    } catch (err) {\n      throw new BadRequestException('Failed to create user');\n    }\n  }\n\n  async signin(email: string, password: string) {\n    const [user] = await this.usersService.find(email);\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    const [salt, storedHash] = user.password.split('.');\n    const hash = (await scrypt(password, salt, 32)) as Buffer;\n\n    if (storedHash !== hash.toString('hex')) {\n      throw new UnauthorizedException('Incorrect credentials');\n    }\n\n    return user;\n  }\n\n  async passwordReset(token: string, newPassword: string): Promise {\n    let decodedToken: any;\n\n    try {\n      decodedToken = await this.jwtService.verify(token);\n    } catch (err) {\n      throw new BadRequestException('Invalid token');\n    }\n\n    // extra check just in case\n    if (!decodedToken && !decodedToken.email) {\n      throw new BadRequestException('Invalid token');\n    }\n\n    const [user] = await this.usersService.find(decodedToken.email);\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    // 1- Generate a salt\n    const salt = randomBytes(8).toString('hex');\n    // 2- Generate a password hash\n    const hash = (await scrypt(newPassword, salt, 32)) as Buffer;\n    // 3- Join the hash and the salt\n    const result = salt + '.' + hash.toString('hex');\n\n    // modify user's password\n    try {\n      const updatedUser = await this.usersService.update(user.id, {\n        password: result,\n      });\n\n      return updatedUser;\n    } catch (err) {\n      throw new BadRequestException('Failed to update password of the user');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassConstructor.html":{"url":"interfaces/ClassConstructor.html","title":"interface - ClassConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/serialize.interceptor.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  UseInterceptors,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { plainToClass } from 'class-transformer';\n\ninterface ClassConstructor {\n  new (...args: any[]): {};\n}\n\nexport function Serialize(dto: ClassConstructor) {\n  return UseInterceptors(new SerializeInterceptor(dto));\n}\n\nexport class SerializeInterceptor implements NestInterceptor {\n  constructor(private dto: ClassConstructor) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    // Run something before a request is handled by the request handler\n    // console.log(\"I'm running before the handler: \", context);\n    return next.handle().pipe(\n      map((data: any) => {\n        // Run something before the response is sent out\n        // console.log(\"I'm running before response is sent out: \", data);\n        return plainToClass(this.dto, data, {\n          excludeExtraneousValues: true,\n        });\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFlightDto.html":{"url":"classes/CreateFlightDto.html","title":"class - CreateFlightDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFlightDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flights/dtos/create-flight.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                airline\n                            \n                            \n                                arrival_date\n                            \n                            \n                                arrival_time\n                            \n                            \n                                capacity\n                            \n                            \n                                company_logo\n                            \n                            \n                                departure_date\n                            \n                            \n                                departure_time\n                            \n                            \n                                description\n                            \n                            \n                                destination\n                            \n                            \n                                destination_airport_name\n                            \n                            \n                                flight_number\n                            \n                            \n                                origin\n                            \n                            \n                                origin_airport_name\n                            \n                            \n                                refundable\n                            \n                            \n                                seat_base_price\n                            \n                            \n                                seat_price_business_class\n                            \n                            \n                                seat_price_first_class\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        airline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the name of the airline', default: 'AB Aviation'})@IsString()@Length(0, 200)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrival_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the date of arrival', default: '2020-01-01T00:00:00.000Z'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrival_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the time of arrival', default: '10:00 PM'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the maximum number of seats available', default: 20})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        company_logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the url of the company logo', default: 'https://www.abaviation.com/wp-content/uploads/2019/12/AB-Aviation-Logo.png'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departure_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the date of departure', default: '2020-01-01T00:00:00.000Z'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departure_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the time of departure', default: '06:00 AM'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the description of the flight', default: 'A flight from Comoros to Tanzania'})@IsString()@Length(0, 1000)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the country of destination of the flight', default: 'Tanzania'})@IsString()@Length(0, 200)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination_airport_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the name of the airport of destination', default: 'Julius Nyerere International Airport'})@IsString()@Length(0, 200)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flight_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the flight identification number', default: 'AB123'})@IsString()@Length(0, 200)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the country of origin of the flight', default: 'Comoros'})@IsString()@Length(0, 200)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin_airport_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the name of the airport of origin', default: 'Prince Said Ibrahim International Airport'})@IsString()@Length(0, 200)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refundable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, description: 'whether the flight is refundable', default: false})@IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_base_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the base price of the flight', default: '1000.00'})@IsDecimal()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_price_business_class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the price of the flight for business class', default: '2000.00'})@IsDecimal()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:162\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_price_first_class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the price of the flight for first class', default: '3000.00'})@IsDecimal()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:171\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsDecimal,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class CreateFlightDto {\n  @ApiProperty({\n    type: String,\n    description: 'the name of the airline',\n    default: 'AB Aviation',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  airline: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the flight identification number',\n    default: 'AB123',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  flight_number: string;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the maximum number of seats available',\n    default: 20,\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  capacity: number;\n\n  @ApiProperty({\n    type: String,\n    description: 'the country of origin of the flight',\n    default: 'Comoros',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  origin: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the country of destination of the flight',\n    default: 'Tanzania',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  destination: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the name of the airport of origin',\n    default: 'Prince Said Ibrahim International Airport',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  origin_airport_name: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the name of the airport of destination',\n    default: 'Julius Nyerere International Airport',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  destination_airport_name: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the time of departure',\n    default: '06:00 AM',\n  })\n  @IsString()\n  @IsNotEmpty()\n  departure_time: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the time of arrival',\n    default: '10:00 PM',\n  })\n  @IsString()\n  @IsNotEmpty()\n  arrival_time: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the date of departure',\n    default: '2020-01-01T00:00:00.000Z',\n  })\n  @IsString()\n  @IsNotEmpty()\n  departure_date: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the date of arrival',\n    default: '2020-01-01T00:00:00.000Z',\n  })\n  @IsString()\n  @IsNotEmpty()\n  arrival_date: string;\n\n  @ApiProperty({\n    type: Boolean,\n    description: 'whether the flight is refundable',\n    default: false,\n  })\n  @IsBoolean()\n  @IsNotEmpty()\n  refundable: boolean;\n\n  @ApiProperty({\n    type: String,\n    description: 'the url of the company logo',\n    default:\n      'https://www.abaviation.com/wp-content/uploads/2019/12/AB-Aviation-Logo.png',\n  })\n  @IsString()\n  @IsNotEmpty()\n  company_logo: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the description of the flight',\n    default: 'A flight from Comoros to Tanzania',\n  })\n  @IsString()\n  @Length(0, 1000)\n  @IsNotEmpty()\n  description: string;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the base price of the flight',\n    default: '1000.00',\n  })\n  @IsDecimal()\n  @IsNotEmpty()\n  seat_base_price: number;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the price of the flight for business class',\n    default: '2000.00',\n  })\n  @IsDecimal()\n  @IsNotEmpty()\n  seat_price_business_class: number;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the price of the flight for first class',\n    default: '3000.00',\n  })\n  @IsDecimal()\n  @IsNotEmpty()\n  seat_price_first_class: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSeatDto.html":{"url":"classes/CreateSeatDto.html","title":"class - CreateSeatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSeatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seats/dtos/create-seat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class_type\n                            \n                            \n                                flightId\n                            \n                            \n                                is_available\n                            \n                            \n                                seat_number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        class_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the class type of the seat', default: 'economy'})@IsString()@IsNotEmpty()@IsEnum(['first', 'business', 'economy'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/dtos/create-seat.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flightId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the flight id'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/dtos/create-seat.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_available\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, description: 'the availability of the seat', default: true})@IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/dtos/create-seat.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the seat number', default: '1A'})@IsString()@Length(1, 20)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/dtos/create-seat.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport enum ClassTypes {\n  FIRST = 'first',\n  BUSINESS = 'business',\n  ECONOMY = 'economy',\n}\n\nexport class CreateSeatDto {\n  @ApiProperty({\n    type: String,\n    description: 'the seat number',\n    default: '1A',\n  })\n  @IsString()\n  @Length(1, 20)\n  @IsNotEmpty()\n  seat_number: string;\n\n  @ApiProperty({\n    type: Boolean,\n    description: 'the availability of the seat',\n    default: true,\n  })\n  @IsBoolean()\n  @IsNotEmpty()\n  is_available: boolean;\n\n  @ApiProperty({\n    type: String,\n    description: 'the class type of the seat',\n    default: 'economy',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsEnum(['first', 'business', 'economy'])\n  class_type: ClassTypes;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the flight id',\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  flightId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first_name\n                            \n                            \n                                last_name\n                            \n                            \n                                password\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the first name of the user', default: 'John'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the last name of the user', default: 'Doe'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the password of the user', default: '123456'})@IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the valid jwt token which includes the email of the user', default: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlpbWthYm9zc0BnbWFpbC5jb20iLCJpYXQiOjE2NDgzMTIwMTQsImV4cCI6MTY0ODMxNTYxNH0.slrCrnE_1WKyrM5-IBu3gxnbymX5X_CzQwviNolBWeI'})@IsNotEmpty()@IsJWT()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsJWT, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    type: String,\n    description: 'the first name of the user',\n    default: 'John',\n  })\n  @IsString()\n  @IsNotEmpty()\n  first_name: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the last name of the user',\n    default: 'Doe',\n  })\n  @IsString()\n  @IsNotEmpty()\n  last_name: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the password of the user',\n    default: '123456',\n  })\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  password: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the valid jwt token which includes the email of the user',\n    default:\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlpbWthYm9zc0BnbWFpbC5jb20iLCJpYXQiOjE2NDgzMTIwMTQsImV4cCI6MTY0ODMxNTYxNH0.slrCrnE_1WKyrM5-IBu3gxnbymX5X_CzQwviNolBWeI',\n  })\n  @IsNotEmpty()\n  @IsJWT()\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrentUserMiddleware.html":{"url":"injectables/CurrentUserMiddleware.html","title":"injectable - CurrentUserMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CurrentUserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/middlewares/current-user.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/middlewares/current-user.middleware.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/users/middlewares/current-user.middleware.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { User } from '../user.entity';\nimport { UsersService } from '../users.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      currentUser?: User;\n    }\n  }\n}\n\n@Injectable()\nexport class CurrentUserMiddleware implements NestMiddleware {\n  constructor(private usersService: UsersService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const { userId } = req.session || {};\n    if (userId) {\n      const user = await this.usersService.findOne(userId);\n\n      req.currentUser = user;\n    }\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailVerificationDto.html":{"url":"classes/EmailVerificationDto.html","title":"class - EmailVerificationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailVerificationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/email-verification.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the email of the user', default: 'johndoe@email.com'})@IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/email-verification.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class EmailVerificationDto {\n  @ApiProperty({\n    type: String,\n    description: 'the email of the user',\n    default: 'johndoe@email.com',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Flight.html":{"url":"entities/Flight.html","title":"entity - Flight","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Flight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flights/flight.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                airline\n                            \n                            \n                                arrival_date\n                            \n                            \n                                arrival_time\n                            \n                            \n                                capacity\n                            \n                            \n                                company_logo\n                            \n                            \n                                departure_date\n                            \n                            \n                                departure_time\n                            \n                            \n                                description\n                            \n                            \n                                destination\n                            \n                            \n                                destination_airport_name\n                            \n                            \n                                flight_number\n                            \n                            \n                                id\n                            \n                            \n                                origin\n                            \n                            \n                                origin_airport_name\n                            \n                            \n                                refundable\n                            \n                            \n                                seat_base_price\n                            \n                            \n                                seat_price_business_class\n                            \n                            \n                                seat_price_first_class\n                            \n                            \n                                seats\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        airline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrival_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrival_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'time', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        company_logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departure_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departure_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'time', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 1000, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination_airport_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flight_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin_airport_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refundable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', nullable: false, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_base_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'numeric', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_price_business_class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'numeric', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_price_first_class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'numeric', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Seat[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, seat => seat.flight)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:129\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Seat } from 'src/seats/seat.entity';\nimport {\n  AfterInsert,\n  AfterRemove,\n  AfterUpdate,\n  Column,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Flight {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    length: 200,\n    nullable: false,\n  })\n  airline: string;\n\n  @Column({\n    type: 'varchar',\n    length: 200,\n    nullable: false,\n  })\n  flight_number: string;\n\n  @Column({\n    type: 'int',\n    nullable: false,\n  })\n  capacity: number;\n\n  @Column({\n    type: 'varchar',\n    length: 200,\n    nullable: false,\n  })\n  origin: string;\n\n  @Column({\n    type: 'varchar',\n    length: 200,\n    nullable: false,\n  })\n  destination: string;\n\n  @Column({\n    type: 'varchar',\n    length: 200,\n    nullable: false,\n  })\n  origin_airport_name: string;\n\n  @Column({\n    type: 'varchar',\n    length: 200,\n    nullable: false,\n  })\n  destination_airport_name: string;\n\n  @Column({\n    type: 'time',\n    nullable: false,\n  })\n  departure_time: string;\n\n  @Column({\n    type: 'time',\n    nullable: false,\n  })\n  arrival_time: string;\n\n  @Column({\n    type: 'date',\n    nullable: false,\n  })\n  departure_date: string;\n\n  @Column({\n    type: 'date',\n    nullable: false,\n  })\n  arrival_date: string;\n\n  @Column({\n    type: 'boolean',\n    nullable: false,\n    default: false,\n  })\n  refundable: boolean;\n\n  @Column({\n    type: 'varchar',\n    nullable: false,\n  })\n  company_logo: string;\n\n  @Column({\n    type: 'varchar',\n    length: 1000,\n    nullable: false,\n  })\n  description: string;\n\n  @Column({\n    type: 'numeric',\n    nullable: false,\n  })\n  seat_base_price: number;\n\n  @Column({\n    type: 'numeric',\n    nullable: false,\n  })\n  seat_price_business_class: number;\n\n  @Column({\n    type: 'numeric',\n    nullable: false,\n  })\n  seat_price_first_class: number;\n\n  // The first argument is only for solving circular dependency issue\n  @OneToMany(() => Seat, (seat) => seat.flight)\n  seats: Seat[];\n\n  @AfterInsert()\n  logInsert() {\n    console.log('Flight inserted:', this);\n  }\n\n  @AfterUpdate()\n  logUpdate() {\n    console.log('Flight updated:', this);\n  }\n\n  @AfterRemove()\n  logRemove() {\n    console.log('Flight removed:', this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FlightsController.html":{"url":"controllers/FlightsController.html","title":"controller - FlightsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FlightsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flights/flights.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/flights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFlight\n                            \n                            \n                                    Async\n                                deleteFlight\n                            \n                            \n                                    Async\n                                getFlight\n                            \n                            \n                                    Async\n                                getFlights\n                            \n                            \n                                    Async\n                                updateFlight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createFlight\n                        \n                    \n                \n            \n            \n                \n                    \n                    createFlight(body: CreateFlightDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(AdminGuard)@ApiCreatedResponse({description: 'The flight was created successfully'})@ApiBadRequestResponse({description: 'Failed to create a new flight'})@ApiInternalServerErrorResponse({description: 'Something went wrong while creating a new flight'})\n                \n            \n\n            \n                \n                    Defined in src/flights/flights.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateFlightDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFlight\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFlight(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@UseGuards(AdminGuard)@HttpCode(200)@ApiOkResponse({description: 'The flight was deleted successfully'})@ApiNotFoundResponse({description: 'Flight not found'})@ApiBadRequestResponse({description: 'Failed to delete the flight'})@ApiInternalServerErrorResponse({description: 'Something went wrong while deleting the flight'})\n                \n            \n\n            \n                \n                    Defined in src/flights/flights.controller.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFlight\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFlight(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOkResponse({description: 'The flight was found successfully'})@ApiNotFoundResponse({description: 'Flight not found'})@ApiInternalServerErrorResponse({description: 'Something went wrong while finding the flight'})\n                \n            \n\n            \n                \n                    Defined in src/flights/flights.controller.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFlights\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFlights(query: GetFlightsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'The flights were found successfully'})@ApiBadRequestResponse({description: 'Failed to find the flights'})@ApiInternalServerErrorResponse({description: 'Something went wrong while finding the flights'})\n                \n            \n\n            \n                \n                    Defined in src/flights/flights.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetFlightsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateFlight\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFlight(id: number, body: UpdateFlightDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseGuards(AdminGuard)@ApiOkResponse({description: 'The flight was updated successfully'})@ApiNotFoundResponse({description: 'Flight not found'})@ApiBadRequestResponse({description: 'Failed to update the flight'})@ApiInternalServerErrorResponse({description: 'Something went wrong while updating the flight'})\n                \n            \n\n            \n                \n                    Defined in src/flights/flights.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateFlightDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  InternalServerErrorException,\n  NotFoundException,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiInternalServerErrorResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { AdminGuard } from '../guards/admin.guard';\nimport { CreateFlightDto } from './dtos/create-flight.dto';\nimport { GetFlightsDto } from './dtos/get-flights.dto';\nimport { UpdateFlightDto } from './dtos/update-flight.dto';\nimport { FlightsService } from './flights.service';\n\n@ApiTags('flights')\n@Controller('api/flights')\nexport class FlightsController {\n  constructor(private flightsService: FlightsService) {}\n\n  // LAST TIME REVIEWED: 2022-04-03\n  // Creates a new flight and returns the created flight only for admin user\n  @Post()\n  @UseGuards(AdminGuard)\n  @ApiCreatedResponse({\n    description: 'The flight was created successfully',\n  })\n  @ApiBadRequestResponse({\n    description: 'Failed to create a new flight',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while creating a new flight',\n  })\n  async createFlight(@Body() body: CreateFlightDto) {\n    return this.flightsService\n      .create(body)\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 400:\n            throw new BadRequestException('Failed to create a new flight');\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while creating a new flight',\n            );\n        }\n      });\n  }\n\n  // LAST TIME REVIEWED: 2022-04-03\n  // Update flight and returns the updated flight only for admin user\n  @Patch('/:id')\n  @UseGuards(AdminGuard)\n  @ApiOkResponse({\n    description: 'The flight was updated successfully',\n  })\n  @ApiNotFoundResponse({\n    description: 'Flight not found',\n  })\n  @ApiBadRequestResponse({\n    description: 'Failed to update the flight',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while updating the flight',\n  })\n  async updateFlight(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() body: UpdateFlightDto,\n  ) {\n    return this.flightsService\n      .update(body, id)\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 400:\n            throw new BadRequestException('Failed to update the flight');\n          case 404:\n            throw new NotFoundException('Flight not found');\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while updating the flight',\n            );\n        }\n      });\n  }\n\n  // LAST TIME REVIEWED: 2022-04-03\n  // Returns all flights\n  @Get()\n  @ApiOkResponse({\n    description: 'The flights were found successfully',\n  })\n  @ApiBadRequestResponse({\n    description: 'Failed to find the flights',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while finding the flights',\n  })\n  async getFlights(@Query() query: GetFlightsDto) {\n    return this.flightsService\n      .findAll(query)\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 400:\n            throw new BadRequestException('Failed to find the flights');\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while finding the flights',\n            );\n        }\n      });\n  }\n\n  // LAST TIME REVIEWED: 2022-04-03\n  // Returns a flight by id\n  @Get('/:id')\n  @ApiOkResponse({\n    description: 'The flight was found successfully',\n  })\n  @ApiNotFoundResponse({\n    description: 'Flight not found',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while finding the flight',\n  })\n  async getFlight(@Param('id', ParseIntPipe) id: number) {\n    return this.flightsService\n      .findOne(id)\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 404:\n            throw new NotFoundException('Flight not found');\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while finding the flight',\n            );\n        }\n      });\n  }\n\n  // LAST TIME REVIEWED: 2022-04-03\n  // Deletes a flight by id\n  @Delete('/:id')\n  @UseGuards(AdminGuard)\n  @HttpCode(200)\n  @ApiOkResponse({\n    description: 'The flight was deleted successfully',\n  })\n  @ApiNotFoundResponse({\n    description: 'Flight not found',\n  })\n  @ApiBadRequestResponse({\n    description: 'Failed to delete the flight',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while deleting the flight',\n  })\n  async deleteFlight(@Param('id', ParseIntPipe) id: number) {\n    return this.flightsService\n      .delete(id)\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 404:\n            throw new NotFoundException('Flight not found');\n          case 400:\n            throw new BadRequestException('Failed to delete the flight');\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while deleting the flight',\n            );\n        }\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FlightsModule.html":{"url":"modules/FlightsModule.html","title":"module - FlightsModule","body":"\n                   \n\n\n\n\n    Modules\n    FlightsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FlightsModule\n\n\n\ncluster_FlightsModule_exports\n\n\n\ncluster_FlightsModule_providers\n\n\n\n\nFlightsService \n\nFlightsService \n\n\n\nFlightsModule\n\nFlightsModule\n\nFlightsService  -->\n\nFlightsModule->FlightsService \n\n\n\n\n\nFlightsService\n\nFlightsService\n\nFlightsModule -->\n\nFlightsService->FlightsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/flights/flights.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FlightsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FlightsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FlightsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FlightsService } from './flights.service';\nimport { FlightsController } from './flights.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Flight } from './flight.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Flight])],\n  providers: [FlightsService],\n  controllers: [FlightsController],\n  exports: [FlightsService],\n})\nexport class FlightsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FlightsService.html":{"url":"injectables/FlightsService.html","title":"injectable - FlightsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FlightsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flights/flights.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/flights/flights.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(flight: CreateFlightDto)\n                \n            \n\n\n            \n                \n                    Defined in src/flights/flights.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flight\n                                    \n                                                CreateFlightDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/flights/flights.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(options: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/flights/flights.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/flights/flights.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(attrs: Partial, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/flights/flights.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateFlightDto } from './dtos/create-flight.dto';\nimport { GetFlightsDto } from './dtos/get-flights.dto';\nimport { Flight } from './flight.entity';\n\n@Injectable()\nexport class FlightsService {\n  constructor(@InjectRepository(Flight) private repo: Repository) {}\n\n  async create(flight: CreateFlightDto) {\n    try {\n      const newFlight = this.repo.create(flight);\n      return this.repo.save(newFlight);\n    } catch (err) {\n      console.log(err);\n      throw new BadRequestException('Failed to create a new flight');\n    }\n  }\n\n  async update(attrs: Partial, id: number) {\n    const foundFlight = await this.findOne(id);\n\n    if (!foundFlight) {\n      throw new NotFoundException('Flight not found');\n    }\n\n    Object.assign(foundFlight, attrs);\n\n    try {\n      return this.repo.save(foundFlight);\n    } catch (err) {\n      console.log(err);\n      throw new BadRequestException('Failed to update the flight');\n    }\n  }\n\n  async findOne(id: number) {\n    const flight = await this.repo.findOne(id);\n\n    if (!flight) {\n      throw new NotFoundException('Flight not found');\n    }\n\n    return flight;\n  }\n\n  async findAll(options: Partial) {\n    const page = parseInt(options.page) || 0;\n    const limit = parseInt(options.limit) || 10;\n    try {\n      const flights = await this.repo.find({ skip: page * limit, take: limit });\n      const totalCount = await (await this.repo.find()).length;\n\n      return {\n        flights,\n        total_count: totalCount,\n      };\n    } catch (err) {\n      throw new BadRequestException('Failed to get the flights');\n    }\n  }\n\n  async delete(id: number) {\n    const flight = await this.findOne(id);\n\n    if (!flight) {\n      throw new NotFoundException('flight not found');\n    }\n\n    try {\n      return this.repo.remove(flight);\n    } catch (err) {\n      console.log(err);\n      throw new BadRequestException('Failed to delete the flight');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetFlightsDto.html":{"url":"classes/GetFlightsDto.html","title":"class - GetFlightsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetFlightsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flights/dtos/get-flights.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({default: 10, required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/get-flights.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({default: 0, required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/get-flights.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class GetFlightsDto {\n  @ApiProperty({\n    default: 0,\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  page: string;\n\n  @ApiProperty({\n    default: 10,\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  limit: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordResetDto.html":{"url":"classes/PasswordResetDto.html","title":"class - PasswordResetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordResetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/password-reset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the new password of the user', default: '987654321'})@IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/password-reset.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the valid jwt token which includes the email of the user', default: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlpbWthYm9zc0BnbWFpbC5jb20iLCJpYXQiOjE2NDgzMTIwMTQsImV4cCI6MTY0ODMxNTYxNH0.slrCrnE_1WKyrM5-IBu3gxnbymX5X_CzQwviNolBWeI'})@IsNotEmpty()@IsJWT()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/password-reset.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsJWT, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class PasswordResetDto {\n  @ApiProperty({\n    type: String,\n    description: 'the new password of the user',\n    default: '987654321',\n  })\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  newPassword: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the valid jwt token which includes the email of the user',\n    default:\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlpbWthYm9zc0BnbWFpbC5jb20iLCJpYXQiOjE2NDgzMTIwMTQsImV4cCI6MTY0ODMxNTYxNH0.slrCrnE_1WKyrM5-IBu3gxnbymX5X_CzQwviNolBWeI',\n  })\n  @IsNotEmpty()\n  @IsJWT()\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/middlewares/current-user.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            currentUser\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentUser:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { User } from '../user.entity';\nimport { UsersService } from '../users.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      currentUser?: User;\n    }\n  }\n}\n\n@Injectable()\nexport class CurrentUserMiddleware implements NestMiddleware {\n  constructor(private usersService: UsersService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const { userId } = req.session || {};\n    if (userId) {\n      const user = await this.usersService.findOne(userId);\n\n      req.currentUser = user;\n    }\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Seat.html":{"url":"entities/Seat.html","title":"entity - Seat","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Seat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seats/seat.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class_type\n                            \n                            \n                                flight\n                            \n                            \n                                id\n                            \n                            \n                                is_available\n                            \n                            \n                                seat_number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        class_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: ClassTypes, default: undefined, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/seat.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Flight\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, flight => flight.seats, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/seat.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/seat.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_available\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', default: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/seat.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false, length: 20})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/seat.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Flight } from 'src/flights/flight.entity';\nimport {\n  AfterInsert,\n  AfterRemove,\n  AfterUpdate,\n  Column,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Unique,\n} from 'typeorm';\n\nexport enum ClassTypes {\n  FIRST = 'first',\n  BUSINESS = 'business',\n  ECONOMY = 'economy',\n}\n\n@Entity()\n@Unique(['seat_number', 'flight'])\nexport class Seat {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    nullable: false,\n    length: 20,\n  })\n  seat_number: string;\n\n  @Column({\n    type: 'boolean',\n    default: true,\n    nullable: false,\n  })\n  is_available: boolean;\n\n  @Column({\n    type: 'enum',\n    enum: ClassTypes,\n    default: ClassTypes.ECONOMY,\n    nullable: false,\n  })\n  class_type: ClassTypes;\n\n  @ManyToOne(() => Flight, (flight) => flight.seats, { onDelete: 'CASCADE' })\n  flight: Flight;\n\n  @AfterInsert()\n  logInsert() {\n    console.log('Seat inserted:', this);\n  }\n\n  @AfterUpdate()\n  logUpdate() {\n    console.log('Seat updated:', this);\n  }\n\n  @AfterRemove()\n  logRemove() {\n    console.log('Seat removed:', this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SeatDto.html":{"url":"classes/SeatDto.html","title":"class - SeatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SeatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seats/dtos/seat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class_type\n                            \n                            \n                                flightId\n                            \n                            \n                                id\n                            \n                            \n                                is_available\n                            \n                            \n                                seat_number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        class_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/dtos/seat.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flightId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => undefined.id)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/dtos/seat.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/dtos/seat.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_available\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/dtos/seat.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/dtos/seat.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose, Transform } from 'class-transformer';\nimport { ClassTypes } from '../seat.entity';\n\nexport class SeatDto {\n  @Expose()\n  id: number;\n\n  @Expose()\n  seat_number: string;\n\n  @Expose()\n  is_available: boolean;\n\n  @Expose()\n  class_type: ClassTypes;\n\n  @Transform(({ obj }) => obj.flight.id)\n  @Expose()\n  flightId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SeatsController.html":{"url":"controllers/SeatsController.html","title":"controller - SeatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SeatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seats/seats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/seats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSeat\n                            \n                            \n                                    Async\n                                deleteSeat\n                            \n                            \n                                    Async\n                                getSeat\n                            \n                            \n                                    Async\n                                getSeats\n                            \n                            \n                                    Async\n                                updateSeat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSeat\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSeat(body: CreateSeatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(AdminGuard)@ApiCreatedResponse({description: 'The seat was created successfully'})@ApiBadRequestResponse({description: 'Failed to create the seat'})@ApiNotFoundResponse({description: 'Flight not found'})@ApiInternalServerErrorResponse({description: 'Something went wrong while creating a new seat'})\n                \n            \n\n            \n                \n                    Defined in src/seats/seats.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateSeatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSeat\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSeat(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@UseGuards(AdminGuard)@ApiOkResponse({description: 'The seat was deleted successfully'})@ApiNotFoundResponse({description: 'Seat not found'})@ApiBadRequestResponse({description: 'Failed to delete the seat'})@ApiInternalServerErrorResponse({description: 'Something went wrong while deleting the seat'})\n                \n            \n\n            \n                \n                    Defined in src/seats/seats.controller.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSeat\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeat(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOkResponse({description: 'The seat was found successfully'})@ApiNotFoundResponse({description: 'Seat not found'})@ApiInternalServerErrorResponse({description: 'Something went wrong while getting the seat'})\n                \n            \n\n            \n                \n                    Defined in src/seats/seats.controller.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSeats\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeats()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'The seats were found successfully'})@ApiBadRequestResponse({description: 'Failed to get the seats'})@ApiInternalServerErrorResponse({description: 'Something went wrong while getting the seats'})\n                \n            \n\n            \n                \n                    Defined in src/seats/seats.controller.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateSeat\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSeat(id: number, body: UpdateSeatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseGuards(AdminGuard)@ApiOkResponse({description: 'The seat was updated successfully'})@ApiNotFoundResponse({description: 'Seat not found'})@ApiBadRequestResponse({description: 'Failed to update the seat'})@ApiInternalServerErrorResponse({description: 'Something went wrong while updating the seat'})\n                \n            \n\n            \n                \n                    Defined in src/seats/seats.controller.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateSeatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  InternalServerErrorException,\n  NotFoundException,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiInternalServerErrorResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { AdminGuard } from 'src/guards/admin.guard';\nimport { Serialize } from 'src/interceptors/serialize.interceptor';\nimport { CreateSeatDto } from './dtos/create-seat.dto';\nimport { SeatDto } from './dtos/seat.dto';\nimport { UpdateSeatDto } from './dtos/update-seat.dto';\nimport { SeatsService } from './seats.service';\n\n@ApiTags('seats')\n@Serialize(SeatDto)\n@Controller('api/seats')\nexport class SeatsController {\n  constructor(private seatsService: SeatsService) {}\n\n  // LAST TIME REVIEWED: 2022-04-03\n  // Creates a new seat and returns the created seat only for admin user\n  @Post()\n  @UseGuards(AdminGuard)\n  @ApiCreatedResponse({\n    description: 'The seat was created successfully',\n  })\n  @ApiBadRequestResponse({\n    description: 'Failed to create the seat',\n  })\n  @ApiNotFoundResponse({\n    description: 'Flight not found',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while creating a new seat',\n  })\n  async createSeat(@Body() body: CreateSeatDto) {\n    return this.seatsService\n      .create(body)\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 400:\n            throw new BadRequestException('Failed to create the seat');\n          case 404:\n            throw new NotFoundException('Flight not found');\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while creating a new seat',\n            );\n        }\n      });\n  }\n\n  // LAST TIME REVIEWED: 2022-04-03\n  // Returns all seats\n  @Get()\n  @ApiOkResponse({\n    description: 'The seats were found successfully',\n  })\n  @ApiBadRequestResponse({\n    description: 'Failed to get the seats',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while getting the seats',\n  })\n  async getSeats() {\n    return this.seatsService\n      .findAll()\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 400:\n            throw new BadRequestException('Failed to get the seats');\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while getting the seats',\n            );\n        }\n      });\n  }\n\n  // LAST TIME REVIEWED: 2022-04-03\n  // Returns a single seat\n  @Get('/:id')\n  @ApiOkResponse({\n    description: 'The seat was found successfully',\n  })\n  @ApiNotFoundResponse({\n    description: 'Seat not found',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while getting the seat',\n  })\n  async getSeat(@Param('id', ParseIntPipe) id: number) {\n    return this.seatsService\n      .findOne(id)\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 404:\n            throw new NotFoundException('Seat not found');\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while getting the seat',\n            );\n        }\n      });\n  }\n\n  // LAST TIME REVIEWED: 2022-04-03\n  // Updates a single seat and returns the updated seat only for admin user\n  @Patch('/:id')\n  @UseGuards(AdminGuard)\n  @ApiOkResponse({\n    description: 'The seat was updated successfully',\n  })\n  @ApiNotFoundResponse({\n    description: 'Seat not found',\n  })\n  @ApiBadRequestResponse({\n    description: 'Failed to update the seat',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while updating the seat',\n  })\n  async updateSeat(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() body: UpdateSeatDto,\n  ) {\n    return this.seatsService\n      .update(id, body)\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 404:\n            throw new NotFoundException('Seat not found');\n          case 400:\n            throw new BadRequestException('Failed to update the seat');\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while updating the seat',\n            );\n        }\n      });\n  }\n\n  // LAST TIME REVIEWED: 2022-04-03\n  // Deletes a single seat and returns the deleted seat only for admin user\n  @Delete('/:id')\n  @UseGuards(AdminGuard)\n  @ApiOkResponse({\n    description: 'The seat was deleted successfully',\n  })\n  @ApiNotFoundResponse({\n    description: 'Seat not found',\n  })\n  @ApiBadRequestResponse({\n    description: 'Failed to delete the seat',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while deleting the seat',\n  })\n  async deleteSeat(@Param('id', ParseIntPipe) id: number) {\n    return this.seatsService\n      .delete(id)\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 404:\n            throw new NotFoundException('Seat not found');\n          case 400:\n            throw new BadRequestException('Failed to delete the seat');\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while deleting the seat',\n            );\n        }\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeatsModule.html":{"url":"modules/SeatsModule.html","title":"module - SeatsModule","body":"\n                   \n\n\n\n\n    Modules\n    SeatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SeatsModule\n\n\n\ncluster_SeatsModule_imports\n\n\n\ncluster_SeatsModule_providers\n\n\n\n\nFlightsModule\n\nFlightsModule\n\n\n\nSeatsModule\n\nSeatsModule\n\nSeatsModule -->\n\nFlightsModule->SeatsModule\n\n\n\n\n\nSeatsService\n\nSeatsService\n\nSeatsModule -->\n\nSeatsService->SeatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/seats/seats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SeatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SeatsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FlightsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SeatsService } from './seats.service';\nimport { SeatsController } from './seats.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Seat } from './seat.entity';\nimport { FlightsModule } from 'src/flights/flights.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Seat]), FlightsModule],\n  providers: [SeatsService],\n  controllers: [SeatsController],\n})\nexport class SeatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeatsService.html":{"url":"injectables/SeatsService.html","title":"injectable - SeatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seats/seats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository, flightsService: FlightsService)\n                    \n                \n                        \n                            \n                                Defined in src/seats/seats.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flightsService\n                                                  \n                                                        \n                                                                        FlightsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(seat: CreateSeatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/seats/seats.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seat\n                                    \n                                                CreateSeatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/seats/seats.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/seats/seats.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/seats/seats.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, attrs: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/seats/seats.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attrs\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FlightsService } from 'src/flights/flights.service';\nimport { Repository } from 'typeorm';\nimport { CreateSeatDto } from './dtos/create-seat.dto';\nimport { Seat } from './seat.entity';\n\n@Injectable()\nexport class SeatsService {\n  constructor(\n    @InjectRepository(Seat) private repo: Repository,\n    private flightsService: FlightsService,\n  ) {}\n\n  async create(seat: CreateSeatDto) {\n    // Check if the flight exists\n    const flight = await this.flightsService.findOne(seat.flightId);\n\n    if (!flight) {\n      throw new NotFoundException('Flight not found');\n    }\n\n    try {\n      const newSeat = this.repo.create(seat);\n      newSeat.flight = flight;\n      return this.repo.save(newSeat);\n    } catch (err) {\n      console.log(err);\n      throw new BadRequestException('Failed to create the seat');\n    }\n  }\n\n  async findOne(id: number) {\n    const seat = await this.repo.findOne(id, {\n      relations: ['flight'],\n    });\n\n    if (!seat) {\n      throw new NotFoundException('Seat not found');\n    }\n\n    return seat;\n  }\n\n  async findAll() {\n    try {\n      const seats = await this.repo.find({\n        relations: ['flight'],\n      });\n      return seats;\n    } catch (err) {\n      throw new BadRequestException('Failed to get the seats');\n    }\n  }\n\n  async update(id: number, attrs: Partial) {\n    const foundSeat = await this.findOne(id);\n\n    if (!foundSeat) {\n      throw new NotFoundException('Seat not found');\n    }\n\n    Object.assign(foundSeat, attrs);\n\n    try {\n      return this.repo.save(foundSeat);\n    } catch (err) {\n      console.log(err);\n      throw new BadRequestException('Failed to update the seat');\n    }\n  }\n\n  async delete(id: number) {\n    const seat = await this.findOne(id);\n\n    if (!seat) {\n      throw new NotFoundException('Seat not found');\n    }\n\n    try {\n      return this.repo.remove(seat);\n    } catch (err) {\n      console.log(err);\n      throw new BadRequestException('Failed to delete the seat');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SerializeInterceptor.html":{"url":"classes/SerializeInterceptor.html","title":"class - SerializeInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SerializeInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/serialize.interceptor.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        NestInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dto: ClassConstructor)\n                    \n                \n                        \n                            \n                                Defined in src/interceptors/serialize.interceptor.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dto\n                                                  \n                                                        \n                                                                        ClassConstructor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/serialize.interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  UseInterceptors,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { plainToClass } from 'class-transformer';\n\ninterface ClassConstructor {\n  new (...args: any[]): {};\n}\n\nexport function Serialize(dto: ClassConstructor) {\n  return UseInterceptors(new SerializeInterceptor(dto));\n}\n\nexport class SerializeInterceptor implements NestInterceptor {\n  constructor(private dto: ClassConstructor) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    // Run something before a request is handled by the request handler\n    // console.log(\"I'm running before the handler: \", context);\n    return next.handle().pipe(\n      map((data: any) => {\n        // Run something before the response is sent out\n        // console.log(\"I'm running before response is sent out: \", data);\n        return plainToClass(this.dto, data, {\n          excludeExtraneousValues: true,\n        });\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFlightDto.html":{"url":"classes/UpdateFlightDto.html","title":"class - UpdateFlightDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFlightDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flights/dtos/update-flight.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                airline\n                            \n                            \n                                arrival_date\n                            \n                            \n                                arrival_time\n                            \n                            \n                                capacity\n                            \n                            \n                                company_logo\n                            \n                            \n                                departure_date\n                            \n                            \n                                departure_time\n                            \n                            \n                                description\n                            \n                            \n                                destination\n                            \n                            \n                                destination_airport_name\n                            \n                            \n                                flight_number\n                            \n                            \n                                origin\n                            \n                            \n                                origin_airport_name\n                            \n                            \n                                refundable\n                            \n                            \n                                seat_base_price\n                            \n                            \n                                seat_price_business_class\n                            \n                            \n                                seat_price_first_class\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        airline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the name of the airline', default: 'AB Aviation'})@IsString()@Length(0, 200)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrival_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the date of arrival', default: '2020-01-01T00:00:00.000Z'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrival_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the time of arrival', default: '10:00 PM'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the maximum number of seats available', default: 20})@IsNumber()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        company_logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the url of the company logo', default: 'https://www.abaviation.com/wp-content/uploads/2019/12/AB-Aviation-Logo.png'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departure_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the date of departure', default: '2020-01-01T00:00:00.000Z'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departure_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the time of departure', default: '06:00 AM'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the description of the flight', default: 'A flight from Comoros to Tanzania'})@IsString()@Length(0, 1000)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:159\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the country of destination of the flight', default: 'Tanzania'})@IsString()@Length(0, 200)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination_airport_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the name of the airport of destination', default: 'Julius Nyerere International Airport'})@IsString()@Length(0, 200)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flight_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the flight identification number', default: 'AB123'})@IsString()@Length(0, 200)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the country of origin of the flight', default: 'Comoros'})@IsString()@Length(0, 200)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin_airport_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the name of the airport of origin', default: 'Prince Said Ibrahim International Airport'})@IsString()@Length(0, 200)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refundable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, description: 'whether the flight is refundable', default: false})@IsBoolean()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_base_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the base price of the flight', default: '1000.00'})@IsDecimal()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_price_business_class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the price of the flight for business class', default: '2000.00'})@IsDecimal()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:179\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_price_first_class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the price of the flight for first class', default: '3000.00'})@IsDecimal()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:189\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsDecimal,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class UpdateFlightDto {\n  @ApiProperty({\n    type: String,\n    description: 'the name of the airline',\n    default: 'AB Aviation',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  @IsOptional()\n  airline: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the flight identification number',\n    default: 'AB123',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  @IsOptional()\n  flight_number: string;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the maximum number of seats available',\n    default: 20,\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  @IsOptional()\n  capacity: number;\n\n  @ApiProperty({\n    type: String,\n    description: 'the country of origin of the flight',\n    default: 'Comoros',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  @IsOptional()\n  origin: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the country of destination of the flight',\n    default: 'Tanzania',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  @IsOptional()\n  destination: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the name of the airport of origin',\n    default: 'Prince Said Ibrahim International Airport',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  @IsOptional()\n  origin_airport_name: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the name of the airport of destination',\n    default: 'Julius Nyerere International Airport',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  @IsOptional()\n  destination_airport_name: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the time of departure',\n    default: '06:00 AM',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  departure_time: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the time of arrival',\n    default: '10:00 PM',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  arrival_time: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the date of departure',\n    default: '2020-01-01T00:00:00.000Z',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  departure_date: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the date of arrival',\n    default: '2020-01-01T00:00:00.000Z',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  arrival_date: string;\n\n  @ApiProperty({\n    type: Boolean,\n    description: 'whether the flight is refundable',\n    default: false,\n  })\n  @IsBoolean()\n  @IsNotEmpty()\n  @IsOptional()\n  refundable: boolean;\n\n  @ApiProperty({\n    type: String,\n    description: 'the url of the company logo',\n    default:\n      'https://www.abaviation.com/wp-content/uploads/2019/12/AB-Aviation-Logo.png',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  company_logo: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the description of the flight',\n    default: 'A flight from Comoros to Tanzania',\n  })\n  @IsString()\n  @Length(0, 1000)\n  @IsNotEmpty()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the base price of the flight',\n    default: '1000.00',\n  })\n  @IsDecimal()\n  @IsNotEmpty()\n  @IsOptional()\n  seat_base_price: number;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the price of the flight for business class',\n    default: '2000.00',\n  })\n  @IsDecimal()\n  @IsNotEmpty()\n  @IsOptional()\n  seat_price_business_class: number;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the price of the flight for first class',\n    default: '3000.00',\n  })\n  @IsDecimal()\n  @IsNotEmpty()\n  @IsOptional()\n  seat_price_first_class: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSeatDto.html":{"url":"classes/UpdateSeatDto.html","title":"class - UpdateSeatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSeatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seats/dtos/update-seat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class_type\n                            \n                            \n                                is_available\n                            \n                            \n                                seat_number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        class_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClassTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the class type of the seat', enum: undefined, default: 'economy'})@IsString()@IsNotEmpty()@IsEnum(['first', 'business', 'economy'])@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/dtos/update-seat.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_available\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, description: 'the availability of the seat', default: true})@IsBoolean()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/dtos/update-seat.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the seat number', default: '1A'})@IsString()@Length(1, 20)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/seats/dtos/update-seat.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport enum ClassTypes {\n  FIRST = 'first',\n  BUSINESS = 'business',\n  ECONOMY = 'economy',\n}\n\nexport class UpdateSeatDto {\n  @ApiProperty({\n    type: String,\n    description: 'the seat number',\n    default: '1A',\n  })\n  @IsString()\n  @Length(1, 20)\n  @IsNotEmpty()\n  @IsOptional()\n  seat_number: string;\n\n  @ApiProperty({\n    type: Boolean,\n    description: 'the availability of the seat',\n    default: true,\n  })\n  @IsBoolean()\n  @IsNotEmpty()\n  @IsOptional()\n  is_available: boolean;\n\n  @ApiProperty({\n    type: String,\n    description: 'the class type of the seat',\n    enum: ['first', 'business', 'economy'],\n    default: 'economy',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsEnum(['first', 'business', 'economy'])\n  @IsOptional()\n  class_type: ClassTypes;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                first_name\n                            \n                            \n                                id\n                            \n                            \n                                is_email_verified\n                            \n                            \n                                last_name\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6), nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', unique: true, length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_email_verified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', default: false, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserRole, default: undefined, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6), onUpdate: 'CURRENT_TIMESTAMP(6)', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  AfterInsert,\n  AfterRemove,\n  AfterUpdate,\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  Unique,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport enum UserRole {\n  ADMIN = 'sysadmin',\n  CUSTOMER = 'customer',\n}\n@Entity()\n@Unique(['email'])\nexport class User {\n  // user's autogenerated id\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  // user's first name\n  @Column({ type: 'varchar', length: 200, nullable: false })\n  first_name: string;\n\n  // user's last name\n  @Column({ type: 'varchar', length: 200, nullable: false })\n  last_name: string;\n\n  @Column({\n    type: 'varchar',\n    unique: true,\n    length: 200,\n    nullable: false,\n  })\n  email: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: false })\n  password: string;\n\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.CUSTOMER,\n    nullable: false,\n  })\n  role: UserRole;\n\n  @CreateDateColumn({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP(6)',\n    nullable: false,\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP(6)',\n    onUpdate: 'CURRENT_TIMESTAMP(6)',\n    nullable: false,\n  })\n  updated_at: Date;\n\n  @Column({\n    type: 'boolean',\n    default: false,\n    nullable: false,\n  })\n  is_email_verified: boolean;\n\n  @AfterInsert()\n  logInsert() {\n    console.log('User inserted:', this);\n  }\n\n  @AfterUpdate()\n  logUpdate() {\n    console.log('User updated:', this);\n  }\n\n  @AfterRemove()\n  logRemove() {\n    console.log('User removed:', this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserCredentialsDto.html":{"url":"classes/UserCredentialsDto.html","title":"class - UserCredentialsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserCredentialsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/user-credentials.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the email of the user', default: 'johndoe@email.com'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user-credentials.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the password of the user', default: '123456'})@IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user-credentials.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class UserCredentialsDto {\n  @ApiProperty({\n    type: String,\n    description: 'the email of the user',\n    default: 'johndoe@email.com',\n  })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the password of the user',\n    default: '123456',\n  })\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                first_name\n                            \n                            \n                                id\n                            \n                            \n                                is_email_verified\n                            \n                            \n                                last_name\n                            \n                            \n                                role\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_email_verified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { UserRole } from '../user.entity';\n\nexport class UserDto {\n  @Expose()\n  id: number;\n\n  @Expose()\n  first_name: string;\n\n  @Expose()\n  last_name: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  role: UserRole;\n\n  @Expose()\n  created_at: Date;\n\n  @Expose()\n  updated_at: Date;\n\n  @Expose()\n  is_email_verified: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                passwordReset\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                sendEmailVerification\n                            \n                            \n                                    Async\n                                sendPasswordResetEmail\n                            \n                            \n                                    Async\n                                signin\n                            \n                            \n                                signOut\n                            \n                            \n                                whoAmI\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        passwordReset\n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordReset(body: PasswordResetDto, session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/password-reset')@HttpCode(200)@ApiOkResponse({description: 'The password reset was successful'})@ApiBadRequestResponse({description: 'Invalid token // Failed to update password of the user'})@ApiNotFoundResponse({description: 'User not found'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                PasswordResetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(body: CreateUserDto, session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')@ApiCreatedResponse({description: 'The user was created successfully'})@ApiBadRequestResponse({description: 'Invalid token // Email in use // Failed to create a user'})@ApiInternalServerErrorResponse({description: 'Something went wrong while creating the user'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailVerification\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerification(body: EmailVerificationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/send-email-verification')@HttpCode(200)@ApiOkResponse({description: 'The email verification email was sent successfully'})@ApiBadRequestResponse({description: 'Failed to send email verification email'})@ApiInternalServerErrorResponse({description: 'Something went wrong while sending email verification email'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                EmailVerificationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordResetEmail(body: EmailVerificationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/send-password-reset-email')@HttpCode(200)@ApiOkResponse({description: 'The password reset email was sent successfully'})@ApiBadRequestResponse({description: 'Failed to send password reset email'})@ApiInternalServerErrorResponse({description: 'Something went wrong while sending password reset email'})@ApiNotFoundResponse({description: 'User not found'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                EmailVerificationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(body: UserCredentialsDto, session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signin')@HttpCode(200)@ApiOkResponse({description: 'The user was successfully logged in'})@ApiNotFoundResponse({description: 'User not found'})@ApiUnauthorizedResponse({description: 'Incorrect credentials'})@ApiInternalServerErrorResponse({description: 'Something went wrong while logging in the user'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UserCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut(session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signout')@HttpCode(200)@ApiOkResponse({description: 'The user was successfully logged out'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoAmI\n                        \n                    \n                \n            \n            \n                \nwhoAmI(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('whoami')@UseGuards(AuthGuard)@ApiOkResponse({description: 'The user was successfully fetched'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  InternalServerErrorException,\n  NotFoundException,\n  Post,\n  Session,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiInternalServerErrorResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { AuthGuard } from 'src/guards/auth.guard';\nimport { Serialize } from 'src/interceptors/serialize.interceptor';\nimport { AuthService } from './auth.service';\nimport { CurrentUser } from './decorators/current-user.decorator';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { EmailVerificationDto } from './dtos/email-verification.dto';\nimport { PasswordResetDto } from './dtos/password-reset.dto';\nimport { UserCredentialsDto } from './dtos/user-credentials.dto';\nimport { UserDto } from './dtos/user.dto';\nimport { User } from './user.entity';\n\n@ApiTags('users')\n@Serialize(UserDto)\n@Controller('api/auth')\nexport class UsersController {\n  constructor(private authService: AuthService) {}\n\n  // LAST TIME REVIEWED: 2022-04-02\n  @Post('/send-email-verification')\n  @HttpCode(200)\n  @ApiOkResponse({\n    description: 'The email verification email was sent successfully',\n  })\n  @ApiBadRequestResponse({\n    description: 'Failed to send email verification email',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while sending email verification email',\n  })\n  async sendEmailVerification(@Body() body: EmailVerificationDto) {\n    return this.authService\n      .sendEmailVerification(body.email)\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 400:\n            throw new BadRequestException(\n              'Failed to send email verification email',\n            );\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while sending email verification email',\n            );\n        }\n      });\n  }\n\n  // LAST TIME REVIEWED: 2022-04-02\n  @Post('/send-password-reset-email')\n  @HttpCode(200)\n  @ApiOkResponse({\n    description: 'The password reset email was sent successfully',\n  })\n  @ApiBadRequestResponse({ description: 'Failed to send password reset email' })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while sending password reset email',\n  })\n  @ApiNotFoundResponse({ description: 'User not found' })\n  async sendPasswordResetEmail(@Body() body: EmailVerificationDto) {\n    return this.authService\n      .sendPasswordResetEmail(body.email)\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 400:\n            throw new BadRequestException(\n              'Failed to send password reset email',\n            );\n          case 404:\n            throw new NotFoundException('User not found');\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while sending password reset email',\n            );\n        }\n      });\n  }\n\n  // LAST TIME REVIEWED: 2022-04-02\n  @Post('/password-reset')\n  @HttpCode(200)\n  @ApiOkResponse({\n    description: 'The password reset was successful',\n  })\n  @ApiBadRequestResponse({\n    description: 'Invalid token // Failed to update password of the user',\n  })\n  @ApiNotFoundResponse({ description: 'User not found' })\n  async passwordReset(@Body() body: PasswordResetDto, @Session() session: any) {\n    session.userId = null;\n    return this.authService\n      .passwordReset(body.token, body.newPassword)\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 400:\n            if (err.response?.message === 'Invalid token') {\n              throw new BadRequestException('Invalid token');\n            } else {\n              throw new BadRequestException(\n                'Failed to update password of the user',\n              );\n            }\n          case 404:\n            throw new NotFoundException('User not found');\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while resetting password',\n            );\n        }\n      });\n  }\n\n  // LAST TIME REVIEWED: 2022-04-02\n  @Post('/register')\n  @ApiCreatedResponse({\n    description: 'The user was created successfully',\n  })\n  @ApiBadRequestResponse({\n    description: 'Invalid token // Email in use // Failed to create a user',\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while creating the user',\n  })\n  async register(@Body() body: CreateUserDto, @Session() session: any) {\n    return this.authService\n      .register(body)\n      .then((user) => {\n        session.userId = user.id;\n        return user;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 400:\n            if (err.response?.message === 'Invalid token') {\n              throw new BadRequestException('Invalid token');\n            } else if (err.response?.message === 'Email in use') {\n              throw new BadRequestException('Email in use');\n            } else {\n              throw new BadRequestException('Failed to create user');\n            }\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while creating the user',\n            );\n        }\n      });\n  }\n\n  // LAST TIME REVIEWED: 2022-04-02\n  @Post('/signin')\n  @HttpCode(200)\n  @ApiOkResponse({\n    description: 'The user was successfully logged in',\n  })\n  @ApiNotFoundResponse({ description: 'User not found' })\n  @ApiUnauthorizedResponse({ description: 'Incorrect credentials' })\n  @ApiInternalServerErrorResponse({\n    description: 'Something went wrong while logging in the user',\n  })\n  async signin(@Body() body: UserCredentialsDto, @Session() session: any) {\n    return this.authService\n      .signin(body.email, body.password)\n      .then((user) => {\n        session.userId = user.id;\n        return user;\n      })\n      .catch((err) => {\n        switch (err.response?.statusCode) {\n          case 404:\n            throw new NotFoundException('User not found');\n          case 401:\n            throw new UnauthorizedException('Incorrect credentials');\n          default:\n            throw new InternalServerErrorException(\n              'Something went wrong while logging in the user',\n            );\n        }\n      });\n  }\n\n  // LAST TIME REVIEWED: 2022-04-02\n  @Get('whoami')\n  @UseGuards(AuthGuard)\n  @ApiOkResponse({ description: 'The user was successfully fetched' })\n  whoAmI(@CurrentUser() user: User) {\n    return user;\n  }\n\n  // LAST TIME REVIEWED: 2022-04-02\n  @Post('/signout')\n  @HttpCode(200)\n  @ApiOkResponse({ description: 'The user was successfully logged out' })\n  signOut(@Session() session: any) {\n    session.userId = null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.module.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthService } from './auth.service';\nimport { jwtConstants } from './constants';\nimport { CurrentUserMiddleware } from './middlewares/current-user.middleware';\nimport { User } from './user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '1h' },\n    }),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService, AuthService],\n})\nexport class UsersModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(CurrentUserMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, attrs: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attrs\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { User } from './user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectRepository(User) private repo: Repository) {}\n\n  async create(user: CreateUserDto) {\n    try {\n      const newUser = this.repo.create(user);\n      return this.repo.save(newUser);\n    } catch (err) {\n      throw new BadRequestException('Failed to create a new user');\n    }\n  }\n\n  async findOne(id: number) {\n    const user = await this.repo.findOne(id);\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    return user;\n  }\n\n  async find(email: string) {\n    const users = await this.repo.find({ email });\n\n    if (!users) {\n      throw new NotFoundException('Users not found');\n    }\n\n    return users;\n  }\n\n  async update(id: number, attrs: Partial) {\n    const user = await this.findOne(id);\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    Object.assign(user, attrs);\n\n    return this.repo.save(user);\n  }\n\n  async remove(id: number) {\n    const user = await this.findOne(id);\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    return this.repo.remove(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            cookieSession\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/flights/dtos/create-flight.dto.ts\n            \n            class\n            CreateFlightDto\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/flights/dtos/get-flights.dto.ts\n            \n            class\n            GetFlightsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/flights/dtos/update-flight.dto.ts\n            \n            class\n            UpdateFlightDto\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/flights/flight.entity.ts\n            \n            entity\n            Flight\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/flights/flights.controller.ts\n            \n            controller\n            FlightsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/flights/flights.service.ts\n            \n            injectable\n            FlightsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/helpers/email.ts\n            \n            function\n            sendEmailWithNodemailer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interceptors/serialize.interceptor.ts\n            \n            class\n            SerializeInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interceptors/serialize.interceptor.ts\n            \n            interface\n            ClassConstructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interceptors/serialize.interceptor.ts\n            \n            function\n            Serialize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seats/dtos/create-seat.dto.ts\n            \n            class\n            CreateSeatDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/seats/dtos/seat.dto.ts\n            \n            class\n            SeatDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/seats/dtos/update-seat.dto.ts\n            \n            class\n            UpdateSeatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/seats/seat.entity.ts\n            \n            entity\n            Seat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seats/seat.entity.ts\n            \n            class\n            Seat\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/seats/seats.controller.ts\n            \n            controller\n            SeatsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/seats/seats.service.ts\n            \n            injectable\n            SeatsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/auth.service.ts\n            \n            variable\n            scrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/constants/index.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/email-verification.dto.ts\n            \n            class\n            EmailVerificationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/password-reset.dto.ts\n            \n            class\n            PasswordResetDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/user-credentials.dto.ts\n            \n            class\n            UserCredentialsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/middlewares/current-user.middleware.ts\n            \n            injectable\n            CurrentUserMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/middlewares/current-user.middleware.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            @types/cookie-session : ^2.0.44\n        \n            @types/nodemailer : ^6.4.4\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cookie-session : ^2.0.0\n        \n            cross-env : ^7.0.3\n        \n            dotenv : ^16.0.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            nodemailer : ^6.7.3\n        \n            pg : ^8.7.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.45\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ClassTypes   (src/.../seat.entity.ts)\n                        \n                        \n                            ClassTypes   (src/.../create-seat.dto.ts)\n                        \n                        \n                            ClassTypes   (src/.../update-seat.dto.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/seats/seat.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        ClassTypes\n                    \n                \n                        \n                            \n                                 FIRST\n                            \n                        \n                        \n                            \n                                Value : first\n                            \n                        \n                        \n                            \n                                 BUSINESS\n                            \n                        \n                        \n                            \n                                Value : business\n                            \n                        \n                        \n                            \n                                 ECONOMY\n                            \n                        \n                        \n                            \n                                Value : economy\n                            \n                        \n            \n        \n\n    src/seats/dtos/create-seat.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        ClassTypes\n                    \n                \n                        \n                            \n                                 FIRST\n                            \n                        \n                        \n                            \n                                Value : first\n                            \n                        \n                        \n                            \n                                 BUSINESS\n                            \n                        \n                        \n                            \n                                Value : business\n                            \n                        \n                        \n                            \n                                 ECONOMY\n                            \n                        \n                        \n                            \n                                Value : economy\n                            \n                        \n            \n        \n\n    src/seats/dtos/update-seat.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        ClassTypes\n                    \n                \n                        \n                            \n                                 FIRST\n                            \n                        \n                        \n                            \n                                Value : first\n                            \n                        \n                        \n                            \n                                 BUSINESS\n                            \n                        \n                        \n                            \n                                Value : business\n                            \n                        \n                        \n                            \n                                 ECONOMY\n                            \n                        \n                        \n                            \n                                Value : economy\n                            \n                        \n            \n        \n\n    src/users/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : sysadmin\n                            \n                        \n                        \n                            \n                                 CUSTOMER\n                            \n                        \n                        \n                            \n                                Value : customer\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            sendEmailWithNodemailer   (src/.../email.ts)\n                        \n                        \n                            Serialize   (src/.../serialize.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/helpers/email.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sendEmailWithNodemailer\n                        \n                    \n                \n            \n            \n                \nsendEmailWithNodemailer(emailData: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/interceptors/serialize.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Serialize\n                        \n                    \n                \n            \n            \n                \nSerialize(dto: ClassConstructor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                ClassConstructor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nYVANIG BACKEND 2.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FlightsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FlightsModule\n\n\n\ncluster_FlightsModule_exports\n\n\n\ncluster_FlightsModule_providers\n\n\n\ncluster_SeatsModule\n\n\n\ncluster_SeatsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nFlightsModule\n\nFlightsModule\n\n\n\nSeatsModule\n\nSeatsModule\n\nSeatsModule -->\n\nFlightsModule->SeatsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nFlightsModule->AppModule\n\n\n\n\n\nFlightsService \n\nFlightsService \n\nFlightsService  -->\n\nFlightsModule->FlightsService \n\n\n\nAppModule -->\n\nSeatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nFlightsService\n\nFlightsService\n\nFlightsModule -->\n\nFlightsService->FlightsModule\n\n\n\n\n\nSeatsService\n\nSeatsService\n\nSeatsModule -->\n\nSeatsService->SeatsModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : Kaym Kassai\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieSession   (src/.../app.module.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            jwtConstants   (src/.../index.ts)\n                        \n                        \n                            scrypt   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cookieSession\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('cookie-session')\n                    \n                \n\n\n        \n    \n\n    src/users/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: never, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n    return request.currentUser;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/users/constants/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: process.env.TOKEN_KEY,\n}\n                    \n                \n\n\n        \n    \n\n    src/users/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : promisify(_scrypt)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
