var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,2.382,1,2.122]],["body/guards/AdminGuard.html",[1,3.427,2,3.101,3,0.426,4,0.426,5,0.375,6,3.554,7,2.813,8,5.153,9,0.426,10,1.592,11,4.409,12,3.515,13,0.595,14,4.242,15,1.387,16,0.03,17,1.097,18,0.48,19,1.283,20,2.492,21,1.283,22,2.813,23,0.426,24,0.934,25,0.426,26,0.019,27,1.621,28,1.756,29,3.101,30,3.554,31,1.87,32,3.092,33,4.242,34,3.101,35,2.267,36,0.024,37,0.024]],["title/controllers/AppController.html",[38,1.593,39,2.122]],["body/controllers/AppController.html",[3,0.449,4,0.449,5,0.395,9,0.449,10,1.643,13,0.627,16,0.03,21,1.351,23,0.546,24,0.983,25,0.449,26,0.02,31,1.46,36,0.025,37,0.025,38,2.657,39,3.538,40,2.185,41,3.742,42,5.103,43,1.46,44,4.467,45,1.643,46,3.129,47,3.742,48,2.185,49,4.467,50,4.467]],["title/modules/AppModule.html",[51,1.741,52,2.122]],["body/modules/AppModule.html",[3,0.334,4,0.334,5,0.293,10,1.004,13,0.466,15,1.085,16,0.031,17,0.858,18,0.376,19,1.004,21,1.004,23,0.613,24,0.73,25,0.334,26,0.015,27,1.269,35,2.399,36,0.021,37,0.021,39,3.312,40,2.195,46,3.135,47,2.781,48,1.623,51,2.399,52,4.07,53,1.774,54,2.399,55,2.781,56,2.781,57,2.781,58,3.446,59,3.446,60,2.923,61,1.95,62,1.623,63,2.426,64,3.281,65,3.281,66,2.781,67,3.76,68,4.564,69,3.319,70,3.76,71,2.426,72,4.488,73,3.319,74,4.261,75,2.426,76,4.488,77,2.781,78,2.426,79,1.774,80,3.281,81,2.781,82,2.161,83,3.319,84,3.319,85,3.319,86,3.319,87,3.319,88,3.319,89,3.319,90,3.319,91,3.319,92,3.319,93,1.374,94,3.319,95,3.319,96,3.319,97,3.319,98,3.319]],["title/injectables/AppService.html",[46,1.741,99,1.065]],["body/injectables/AppService.html",[3,0.465,4,0.465,5,0.409,9,0.465,10,1.678,13,0.649,16,0.03,21,1.399,23,0.465,24,1.018,25,0.465,26,0.021,31,1.512,36,0.025,37,0.025,42,5.163,45,1.678,46,2.965,99,1.813,100,2.472,101,3.875,102,4.625,103,4.625,104,4.625]],["title/guards/AuthGuard.html",[0,2.382,105,2.122]],["body/guards/AuthGuard.html",[2,3.157,3,0.434,4,0.434,5,0.381,7,2.844,8,5.18,9,0.434,10,1.609,11,4.458,12,3.537,13,0.606,15,1.412,16,0.03,17,1.117,18,0.489,19,1.306,20,2.537,21,1.306,23,0.434,24,0.95,25,0.434,26,0.019,27,1.651,28,1.788,29,3.157,31,1.412,36,0.024,37,0.024,105,3.465,106,3.618,107,2.591,108,4.319,109,2.308,110,4.319,111,4.319,112,3.157,113,4.319]],["title/injectables/AuthService.html",[99,1.065,114,1.741]],["body/injectables/AuthService.html",[3,0.117,4,0.117,5,0.103,9,0.117,10,0.601,13,0.532,15,1.239,16,0.031,17,0.98,18,0.429,19,1.146,21,1.051,23,0.43,24,0.255,25,0.117,26,0.005,27,2.122,31,1.136,35,1.394,36,0.009,37,0.009,45,1.642,74,3.395,75,0.849,93,1.916,99,0.65,100,0.62,107,2.339,109,1.858,114,1.063,115,0.849,116,1.666,117,1.666,118,1.666,119,1.666,120,1.666,121,1.063,122,0.973,123,1.569,124,4.053,125,1.161,126,1.989,127,2.185,128,1.161,129,2.639,130,1.989,131,1.652,132,1.161,133,1.295,134,1.989,135,1.161,136,2.189,137,1.989,138,1.161,139,1.989,140,2.386,141,1.161,142,0.849,143,0.973,144,1.161,145,0.682,146,0.849,147,0.849,148,1.161,149,0.682,150,0.849,151,1.161,152,1.454,153,1.161,154,1.161,155,1.161,156,1.161,157,0.973,158,1.699,159,1.989,160,1.666,161,1.989,162,1.989,163,3.581,164,3.09,165,1.161,166,1.161,167,4.9,168,3.09,169,2.609,170,1.161,171,3.09,172,3.475,173,1.989,174,1.161,175,1.161,176,1.161,177,1.161,178,1.161,179,3.475,180,1.161,181,1.989,182,1.161,183,1.161,184,1.989,185,1.161,186,4.773,187,1.989,188,1.161,189,1.161,190,1.989,191,2.259,192,1.989,193,1.989,194,5.287,195,3.79,196,1.989,197,4.629,198,3.79,199,1.989,200,4.274,201,3.09,202,4.736,203,3.09,204,3.79,205,1.989,206,1.989,207,4.274,208,4.9,209,3.79,210,1.989,211,3.79,212,1.989,213,1.989,214,3.09,215,3.09,216,3.878,217,1.989,218,3.09,219,1.989,220,1.989,221,1.989,222,1.989,223,3.09,224,1.989,225,1.989,226,3.09,227,1.989,228,1.989,229,1.989,230,1.989,231,1.989,232,1.989,233,3.09,234,1.989,235,1.989,236,1.989,237,1.989,238,1.989,239,1.666,240,1.989,241,2.609,242,1.161,243,1.161,244,1.989,245,1.989,246,1.989,247,1.989,248,1.989,249,1.989,250,1.989,251,1.989,252,3.79,253,1.989,254,1.989,255,1.989,256,1.989,257,3.09,258,1.989,259,1.989,260,1.989,261,1.989,262,1.989,263,1.989,264,2.945,265,1.666,266,1.989,267,3.475,268,1.371,269,1.666,270,1.989,271,3.264,272,2.185,273,1.907,274,1.989,275,3.09,276,3.09,277,1.161,278,1.161,279,1.161,280,1.161,281,1.161,282,1.161,283,1.161,284,1.161,285,1.989,286,1.161,287,1.161,288,3.79,289,1.454,290,1.161,291,1.454,292,1.454,293,3.09,294,1.989,295,1.989,296,2.609,297,0.973,298,0.973,299,1.989,300,1.161,301,1.161,302,0.973,303,4.274,304,1.989,305,1.989,306,3.09,307,4.9,308,1.989,309,1.666,310,1.161,311,2.609,312,2.609,313,1.666,314,1.989,315,3.09,316,2.609,317,1.161,318,0.756,319,1.161,320,1.161,321,1.161,322,0.849,323,1.161,324,1.161,325,1.161,326,1.989,327,1.161,328,1.161,329,1.161,330,1.161,331,1.161,332,1.161,333,1.161,334,1.161,335,1.989,336,1.161]],["title/interfaces/ClassConstructor.html",[337,1.593,338,1.914]],["body/interfaces/ClassConstructor.html",[3,0.372,4,0.372,5,0.326,7,1.975,12,2.832,16,0.031,20,2.832,23,0.572,24,0.813,25,0.485,26,0.021,28,1.996,31,1.754,35,1.975,36,0.022,37,0.022,48,1.807,62,2.357,93,1.53,133,3.139,337,1.807,338,3.34,339,2.701,340,2.406,341,3.096,342,4.039,343,4.039,344,4.039,345,2.701,346,3.096,347,3.096,348,3.096,349,2.406,350,3.096,351,2.701,352,2.701,353,3.096,354,3.096,355,2.406,356,2.701,357,3.096,358,2.406,359,3.096,360,4.039,361,4.039,362,4.764,363,3.096,364,4.039,365,4.039,366,4.039,367,3.096,368,3.096,369,3.139,370,3.524,371,3.096,372,3.096]],["title/classes/CreateFlightDto.html",[26,0.014,373,1.914]],["body/classes/CreateFlightDto.html",[3,0.16,4,0.16,5,0.141,9,0.16,13,0.812,16,0.03,17,1.149,18,0.714,22,2.014,23,0.26,25,0.16,26,0.02,32,0.935,36,0.012,37,0.012,43,1.892,45,1.959,373,1.521,374,0.659,375,4.894,376,1.163,377,0.846,378,3.031,379,2.391,380,2.391,381,2.391,382,2.391,383,2.391,384,2.391,385,2.439,386,3.424,387,2.391,388,2.391,389,3.424,390,2.391,391,3.031,392,2.391,393,2.391,394,2.391,395,3.093,396,2.834,397,2.168,398,1.333,399,4.444,400,1.591,401,2.214,402,3.157,403,3.157,404,3.157,405,2.588,406,1.591,407,2.755,408,2.168,409,1.591,410,1.591,411,3.172,412,2.168,413,2.168,414,2.168,415,1.591,416,1.591,417,2.168,418,2.168,419,2.168,420,2.168,421,2.168,422,2.741,423,1.591,424,1.591,425,3.157,426,1.333,427,2.168,428,1.591,429,1.591,430,2.624,431,2.741,432,2.168,433,1.591,434,1.591,435,3.157,436,1.591,437,3.724,438,2.168,439,2.168,440,3.157,441,2.168,442,1.591,443,2.168,444,1.333,445,1.591,446,1.333,447,1.591,448,2.168,449,2.168,450,1.591,451,2.168,452,1.591,453,1.591,454,2.168,455,3.724,456,1.591,457,1.591,458,2.168,459,1.591,460,1.591,461,1.892,462,1.591,463,1.591,464,3.122,465,0.659,466,2.168,467,1.591,468,3.157,469,3.122,470,2.168,471,2.944,472,1.036,473,0.778,474,3.925,475,2.894,476,1.333,477,1.333,478,2.168,479,1.333,480,2.168,481,1.333,482,1.163,483,1.333,484,1.333,485,1.333]],["title/classes/CreateUserDto.html",[26,0.014,131,1.741]],["body/classes/CreateUserDto.html",[3,0.328,4,0.328,5,0.288,9,0.328,13,0.759,16,0.03,17,1.399,18,0.688,23,0.446,25,0.328,26,0.02,36,0.02,37,0.02,43,1.769,45,1.959,129,3.686,131,2.373,136,1.838,140,3.025,268,1.7,374,1.352,377,1.451,385,2.323,395,2.893,396,2.731,461,3.245,464,3.025,465,1.352,469,3.025,471,2.893,473,1.597,486,4.742,487,2.736,488,3.687,489,3.687,490,3.266,491,3.266,492,4.44,493,3.266,494,3.266,495,2.736,496,3.266,497,3.72,498,3.72,499,3.72,500,3.72,501,2.736,502,3.266,503,3.72,504,2.387,505,3.266,506,3.266,507,2.736,508,2.387,509,2.736]],["title/injectables/CurrentUserMiddleware.html",[99,1.065,510,1.914]],["body/injectables/CurrentUserMiddleware.html",[3,0.359,4,0.359,5,0.315,7,1.906,9,0.359,10,1.424,13,0.661,15,1.539,16,0.031,17,1.218,18,0.533,19,1.424,21,1.079,23,0.564,24,0.785,25,0.359,26,0.016,27,1.8,28,2.414,36,0.022,37,0.022,48,1.744,99,1.539,100,1.906,107,2.369,121,1.906,122,2.988,123,2.479,145,2.095,264,2.095,268,1.569,302,3.946,337,1.744,358,3.652,369,3.652,510,2.767,511,3.854,512,2.607,513,3.567,514,3.946,515,4.417,516,4.698,517,3.567,518,3.567,519,3.946,520,3.443,521,1.906,522,2.988,523,2.988,524,2.988,525,2.095,526,3.946,527,2.988,528,2.988,529,2.988]],["title/classes/EmailVerificationDto.html",[26,0.014,530,2.122]],["body/classes/EmailVerificationDto.html",[3,0.432,4,0.432,5,0.379,9,0.432,13,0.602,16,0.03,18,0.6,23,0.533,25,0.432,26,0.024,36,0.024,37,0.024,43,1.403,45,1.817,136,2.555,268,1.483,374,1.777,377,1.733,385,2.026,395,2.294,396,2.382,464,2.834,465,1.777,469,2.834,471,2.834,473,2.099,530,3.453,531,4.442,532,3.597,533,4.293,534,4.293,535,4.442,536,3.597]],["title/entities/Flight.html",[430,1.464,537,1.914]],["body/entities/Flight.html",[3,0.201,4,0.201,5,0.177,9,0.201,13,0.855,16,0.031,18,0.733,22,2.293,23,0.201,25,0.201,26,0.009,32,3.797,36,0.014,37,0.014,43,1.993,45,1.915,377,1.016,378,2.783,379,2.783,380,2.783,381,2.783,382,2.783,383,2.783,384,2.783,385,1.455,386,2.783,387,2.783,388,2.783,389,2.783,390,2.783,391,2.783,392,2.783,393,2.783,394,2.783,401,2.521,407,3.136,411,2.833,430,1.396,472,3.838,475,3.745,482,2.271,537,1.825,538,1.464,539,1.678,540,2.479,541,5.072,542,5.032,543,5.414,544,2.002,545,2.002,546,2.002,547,3.107,548,2.002,549,2.002,550,2.002,551,2.002,552,2.002,553,2.002,554,2.002,555,2.002,556,3.19,557,2.002,558,2.002,559,2.002,560,2.002,561,4.914,562,2.002,563,2.002,564,2.002,565,2.603,566,2.603,567,2.603,568,5.108,569,1.176,570,1.678,571,3.807,572,1.678,573,1.678,574,1.464,575,1.678,576,1.678]],["title/controllers/FlightsController.html",[38,1.593,577,2.122]],["body/controllers/FlightsController.html",[1,2.066,3,0.319,4,0.319,5,0.28,9,0.319,10,1.316,13,0.61,15,1.423,16,0.031,17,1.125,18,0.493,19,1.316,21,1.617,23,0.582,24,0.698,25,0.319,26,0.014,31,1.423,36,0.02,37,0.02,38,1.551,40,1.551,43,1.423,48,1.551,93,1.313,107,2.6,109,2.326,149,1.864,191,4.095,268,1.217,318,2.834,373,3.141,385,2.044,430,2.834,465,1.313,574,3.632,577,2.834,578,2.658,579,2.658,580,3.172,581,4.352,582,4.352,583,3.172,584,3.172,585,4.162,586,3.646,587,4.479,588,3.172,589,3.172,590,3.141,591,3.172,592,3.632,593,3.172,594,2.658,595,3.172,596,3.646,597,2.658,598,4.162,599,4.162,600,2.658,601,3.172,602,3.646,603,2.658,604,2.655,605,2.658,606,3.172,607,3.172,608,3.172,609,3.181,610,4.352,611,3.646,612,3.172,613,3.172,614,3.172,615,2.658,616,3.172,617,3.172]],["title/modules/FlightsModule.html",[51,1.741,58,1.914]],["body/modules/FlightsModule.html",[3,0.426,4,0.426,5,0.375,16,0.03,23,0.618,24,0.934,25,0.426,26,0.019,36,0.024,37,0.024,40,2.574,51,2.813,53,2.267,54,2.813,58,3.682,60,3.427,61,2.492,62,2.075,64,3.847,65,3.101,78,3.101,79,2.267,430,1.906,577,3.726,604,3.35,605,3.554,618,3.554,619,3.554,620,4.242,621,4.242,622,3.554,623,4.242]],["title/injectables/FlightsService.html",[99,1.065,604,1.741]],["body/injectables/FlightsService.html",[3,0.355,4,0.355,5,0.312,9,0.355,10,1.415,13,0.736,15,1.715,16,0.031,17,1.357,18,0.594,19,1.587,21,1.415,23,0.6,24,0.777,25,0.355,26,0.016,27,1.35,31,1.154,36,0.021,37,0.021,79,1.888,93,1.937,99,1.529,100,1.888,107,2.683,109,1.888,121,1.888,142,2.582,149,2.075,158,2.3,271,2.582,289,2.582,291,2.582,292,2.582,318,3.417,373,3.282,430,2.51,569,2.075,590,3.282,592,3.42,602,3.92,603,2.959,604,2.501,622,2.959,624,2.959,625,2.959,626,4.68,627,3.531,628,3.92,629,4.679,630,3.531,631,4.679,632,3.531,633,2.959,634,3.531,635,3.531,636,3.531,637,3.531,638,2.959,639,2.959,640,3.531]],["title/classes/PasswordResetDto.html",[26,0.014,641,2.122]],["body/classes/PasswordResetDto.html",[3,0.382,4,0.382,5,0.336,9,0.382,13,0.689,16,0.03,18,0.651,23,0.494,25,0.382,26,0.022,36,0.022,37,0.022,43,1.605,45,1.901,93,2.033,127,4.557,129,3.876,136,2.033,140,2.625,268,1.608,374,1.575,377,1.605,385,2.197,395,2.625,396,2.583,464,2.907,465,1.575,469,2.907,471,2.625,473,1.86,497,4.115,498,4.115,499,4.115,500,4.115,501,3.186,503,4.115,504,2.78,508,2.78,509,3.186,641,3.198,642,4.557,643,3.186,644,3.803,645,3.803,646,3.803,647,3.803]],["title/interfaces/Request.html",[28,1.349,337,1.593]],["body/interfaces/Request.html",[3,0.387,4,0.387,5,0.34,7,2.06,9,0.387,16,0.031,18,0.436,19,1.498,23,0.581,24,0.848,25,0.387,26,0.017,27,1.893,28,2.392,36,0.023,37,0.023,48,1.885,99,1.619,107,1.732,123,2.266,145,2.264,264,2.264,268,1.711,337,1.885,339,2.818,358,3.226,369,3.226,377,1.619,510,2.264,511,2.818,512,2.818,514,3.229,515,3.229,516,4.15,519,4.15,520,3.621,521,2.06,522,3.229,523,3.229,524,3.229,525,3.394,526,4.15,527,3.229,528,3.229,529,3.229]],["title/classes/SerializeInterceptor.html",[26,0.014,355,2.122]],["body/classes/SerializeInterceptor.html",[3,0.338,4,0.338,5,0.297,7,2.418,9,0.338,10,1.368,12,3.216,13,0.635,15,1.479,16,0.031,17,1.17,18,0.512,19,1.368,20,3.006,21,1.016,23,0.55,24,0.739,25,0.455,26,0.02,28,1.873,31,1.672,35,1.795,36,0.021,37,0.021,48,1.642,62,2.212,93,1.39,121,1.795,133,2.946,337,1.642,338,3.357,340,2.187,341,2.813,342,4.286,343,4.586,344,4.286,345,2.455,346,2.813,347,2.813,348,2.813,349,2.187,350,2.813,351,2.455,352,2.455,353,2.813,354,2.813,355,2.946,356,3.307,357,4.286,358,3.331,359,3.79,360,3.79,361,3.79,362,4.586,363,2.813,364,3.79,365,3.79,366,3.79,367,2.813,368,2.813,369,2.946,370,3.307,371,2.813,372,2.813,374,1.39,648,3.358,649,3.358,650,3.358,651,3.358]],["title/classes/UpdateFlightDto.html",[26,0.014,590,1.914]],["body/classes/UpdateFlightDto.html",[3,0.157,4,0.157,5,0.138,9,0.157,13,0.809,16,0.03,17,1.139,18,0.713,22,1.992,23,0.256,25,0.157,26,0.02,32,0.918,36,0.012,37,0.012,43,1.884,45,1.956,374,0.647,376,1.142,377,0.833,378,3.002,379,2.361,380,2.361,381,2.361,382,2.361,383,2.361,384,2.361,385,2.434,386,3.397,387,2.361,388,2.361,389,3.397,390,2.361,391,3.002,392,2.361,393,2.361,394,2.361,395,3.081,396,2.828,397,2.136,398,1.308,401,2.19,402,3.123,403,3.123,404,3.123,407,2.724,408,2.136,411,3.161,412,2.136,413,2.136,414,2.136,417,2.136,418,2.136,419,2.136,420,2.136,421,2.136,422,2.706,425,3.123,426,1.308,427,2.136,430,2.614,431,2.706,432,2.136,435,3.123,437,3.691,438,2.136,439,2.136,440,3.123,441,2.136,443,2.136,444,1.308,446,1.308,448,2.136,449,2.136,451,2.136,454,2.136,455,3.691,458,2.136,461,1.863,464,3.11,465,0.647,466,2.136,468,3.123,469,3.11,470,2.136,471,2.929,472,1.017,473,0.764,474,3.894,475,2.869,476,1.308,477,1.308,478,2.136,479,1.308,480,2.136,481,1.308,482,1.142,483,1.308,484,1.308,485,1.308,590,1.498,652,4.875,653,4.406,654,1.562,655,2.549,656,1.562,657,1.562,658,1.562,659,1.562,660,1.562,661,1.562,662,1.562,663,1.562,664,1.562,665,1.562,666,1.562,667,1.562,668,1.562,669,1.562,670,1.562,671,1.562,672,1.562,673,1.562,674,1.562,675,1.562,676,1.562,677,1.562,678,1.562,679,1.562,680,5.819]],["title/entities/User.html",[268,0.911,537,1.914]],["body/entities/User.html",[3,0.243,4,0.243,5,0.214,9,0.243,13,0.805,16,0.031,18,0.707,22,2.525,23,0.243,25,0.36,26,0.011,32,3.689,34,1.767,35,1.916,36,0.016,37,0.016,43,1.876,45,1.699,136,1.769,140,2.283,268,1.003,322,3.123,377,1.172,396,2.525,401,2.776,411,1.916,472,3.659,475,3.659,488,3.123,489,3.123,537,2.106,538,1.767,540,2.782,541,4.428,542,4.708,543,5.199,556,3.579,565,3.003,566,3.003,567,3.003,568,4.584,569,1.42,570,2.026,572,2.026,573,2.026,574,1.767,575,2.026,576,2.026,609,1.767,681,1.767,682,6.482,683,3.579,684,3.579,685,3.579,686,2.418,687,4.725,688,5.286,689,2.418,690,4.272,691,2.418,692,2.418,693,2.418,694,2.418,695,2.418,696,2.418,697,3.689,698,5.046,699,2.418,700,2.418,701,2.418,702,3.585,703,2.418,704,3.585,705,3.585,706,3.003,707,2.418,708,2.418,709,4.272]],["title/classes/UserCredentialsDto.html",[26,0.014,710,2.122]],["body/classes/UserCredentialsDto.html",[3,0.395,4,0.395,5,0.347,9,0.395,13,0.703,16,0.03,18,0.659,23,0.504,25,0.395,26,0.022,36,0.023,37,0.023,43,1.639,45,1.913,136,2.489,140,3.213,268,1.628,374,1.626,377,1.639,385,2.224,395,2.68,396,2.614,464,2.952,465,1.626,469,2.952,471,2.68,473,1.921,495,3.291,504,2.872,507,3.291,508,2.872,535,4.201,536,3.291,710,3.265,711,4.627,712,3.291,713,3.928,714,3.928,715,3.928]],["title/classes/UserDto.html",[26,0.014,716,2.122]],["body/classes/UserDto.html",[3,0.357,4,0.357,5,0.313,9,0.357,13,0.869,16,0.03,18,0.701,22,2.509,23,0.472,25,0.357,26,0.021,36,0.021,37,0.021,43,2.024,45,1.809,136,2.177,322,3.845,349,2.311,374,1.469,377,1.534,401,3.288,411,2.509,488,3.845,489,3.845,521,1.897,540,3.425,683,4.407,684,4.407,685,4.407,697,3.845,716,3.057,717,2.973,718,6.562,719,3.549,720,3.549,721,3.549,722,3.549,723,3.549,724,3.549,725,3.549,726,3.549]],["title/controllers/UsersController.html",[38,1.593,727,2.122]],["body/controllers/UsersController.html",[3,0.183,4,0.183,5,0.161,9,0.183,10,0.873,13,0.694,15,1.617,16,0.031,17,1.279,18,0.56,19,1.496,21,1.496,23,0.573,24,0.401,25,0.183,26,0.008,27,1.103,31,1.544,36,0.013,37,0.013,38,0.891,40,0.891,43,1.617,61,3.104,62,1.411,71,1.332,82,3.802,105,1.186,107,2.623,109,2.373,114,1.914,116,2.417,117,2.417,118,2.417,119,2.417,120,2.417,121,0.974,123,1.483,129,1.879,131,2.177,136,2.417,140,2.743,145,1.07,149,1.07,150,1.332,158,1.879,191,4.037,264,1.695,268,1.762,269,1.526,273,3.246,297,2.417,370,2.978,385,2.254,465,0.754,521,0.974,525,1.07,530,3.222,579,1.526,585,2.417,586,3.001,587,3.413,594,1.526,596,1.526,597,1.526,598,3.957,599,2.417,600,1.526,611,4.427,615,3.72,641,2.653,710,2.653,716,1.186,727,1.879,728,1.526,729,1.822,730,2.885,731,2.885,732,1.822,733,2.885,734,1.822,735,1.822,736,4.074,737,1.822,738,1.822,739,1.822,740,1.822,741,1.822,742,1.822,743,1.822,744,1.822,745,4.074,746,1.822,747,4.44,748,4.074,749,1.822,750,1.822,751,1.822,752,1.822,753,1.822,754,1.822,755,4.074,756,1.822,757,1.822,758,2.885,759,2.885,760,1.822,761,1.822,762,1.822,763,1.822,764,1.822,765,1.822,766,2.885,767,1.822,768,4.074,769,4.948,770,2.885,771,1.822,772,1.332,773,1.822,774,1.526,775,1.822,776,1.822,777,1.822,778,1.822,779,1.822,780,1.822,781,1.822,782,1.822,783,1.822,784,1.822,785,1.822,786,1.822,787,1.822,788,1.822,789,1.822,790,1.822,791,1.822,792,1.822,793,4.074,794,2.885,795,1.822,796,1.822,797,1.822,798,1.822,799,1.822,800,2.885,801,1.822,802,1.822,803,1.822,804,1.822,805,1.822,806,1.822,807,1.822,808,1.822,809,1.822]],["title/modules/UsersModule.html",[51,1.741,59,1.914]],["body/modules/UsersModule.html",[3,0.359,4,0.359,5,0.316,10,1.081,13,0.502,15,1.169,16,0.031,17,0.925,18,0.405,19,1.081,21,1.081,23,0.631,24,0.787,25,0.359,26,0.016,36,0.022,37,0.022,40,2.307,51,2.521,53,1.911,54,2.521,59,3.644,60,3.072,61,2.101,62,1.749,64,3.448,65,2.614,66,2.996,67,3.952,68,4.703,70,2.996,71,2.614,78,2.614,79,1.911,114,3.203,123,2.481,145,2.101,146,2.614,268,1,510,2.101,521,1.911,727,3.438,774,2.996,810,2.996,811,2.996,812,3.576,813,3.576,814,3.576,815,2.614,816,3.576,817,3.576,818,3.576,819,3.576,820,3.576,821,3.576,822,2.996,823,3.576,824,3.576,825,3.576,826,3.576,827,3.576]],["title/injectables/UsersService.html",[99,1.065,123,1.349]],["body/injectables/UsersService.html",[3,0.269,4,0.269,5,0.236,9,0.269,10,1.167,13,0.768,15,1.79,16,0.031,17,1.416,18,0.62,19,1.657,21,1.59,23,0.529,24,0.589,25,0.269,26,0.012,27,2.009,31,1.718,36,0.018,37,0.018,45,1.37,79,1.43,93,2.268,99,1.262,100,1.43,107,2.815,109,2.81,121,1.43,123,1.598,131,2.65,136,1.598,142,1.955,143,2.241,149,1.572,150,1.955,158,1.742,264,2.913,268,1.673,271,3.843,272,3.794,273,3.624,289,1.955,291,1.955,292,1.955,298,3.794,318,2.949,411,3.147,521,1.43,540,2.949,569,1.572,592,2.822,625,2.241,626,4.154,628,3.234,633,2.241,638,2.241,639,2.241,828,2.241,829,3.86,830,3.86,831,3.86,832,2.675,833,3.86,834,2.675,835,3.86,836,2.675,837,3.86,838,2.675,839,3.86,840,2.675,841,3.86,842,4.958,843,4.529,844,2.675,845,2.675,846,2.675,847,2.675,848,2.675,849,2.675,850,2.675,851,2.675,852,3.86,853,2.675,854,2.675,855,2.675]],["title/coverage.html",[856,3.713]],["body/coverage.html",[0,3.083,1,1.974,5,0.268,6,2.54,16,0.03,18,0.343,26,0.027,28,1.255,36,0.019,37,0.019,38,2.372,39,1.974,41,2.54,46,1.62,63,2.216,80,2.216,93,1.255,99,1.802,101,2.54,105,1.974,106,2.54,114,1.62,115,3.083,123,1.255,131,1.62,147,2.216,152,2.216,202,5.567,216,2.54,268,1.18,337,2.063,338,1.781,340,3.159,351,3.546,355,1.974,373,1.781,375,2.54,376,3.083,430,1.362,486,2.54,487,2.54,510,1.781,511,3.083,512,3.083,525,1.781,530,1.974,531,2.54,532,2.54,537,2.478,539,2.54,577,1.974,578,2.54,590,1.781,604,1.62,624,2.54,641,1.974,642,2.54,643,2.54,652,2.54,681,3.083,710,1.974,711,2.54,712,2.54,716,1.974,717,2.54,727,1.974,728,2.54,772,2.216,815,2.216,828,2.54,856,2.54,857,3.031,858,3.031,859,3.031,860,5.706,861,5.244,862,6.14,863,4.218,864,5.512,865,3.031,866,2.54,867,2.54,868,2.54,869,4.218,870,2.54,871,2.54,872,2.54,873,3.031,874,3.031,875,3.031,876,3.031,877,3.031]],["title/dependencies.html",[54,2.092,878,2.285]],["body/dependencies.html",[16,0.031,24,0.899,26,0.023,36,0.023,37,0.023,54,2.183,75,2.986,77,3.423,79,2.183,82,3.347,146,2.986,345,2.986,349,2.66,465,1.691,473,1.998,520,3.757,569,2.4,879,5.902,880,5.14,881,4.085,882,4.085,883,4.085,884,4.085,885,4.085,886,4.085,887,4.085,888,4.085,889,4.085,890,4.085,891,4.085,892,4.085,893,4.085,894,4.085,895,4.085,896,4.085,897,4.085,898,4.085,899,4.085,900,4.085,901,4.085,902,4.085,903,4.085,904,4.085,905,4.085,906,4.085,907,4.085,908,4.085,909,4.085,910,4.085,911,4.085]],["title/miscellaneous/enumerations.html",[912,1.458,913,3.28]],["body/miscellaneous/enumerations.html",[9,0.497,16,0.029,34,3.614,36,0.026,37,0.026,112,4.219,609,3.614,681,3.614,697,4.219,706,4.835,912,2.643,913,4.143,914,4.944]],["title/miscellaneous/functions.html",[912,1.458,915,3.28]],["body/miscellaneous/functions.html",[9,0.47,15,1.824,16,0.028,17,1.443,18,0.632,19,1.688,36,0.025,37,0.025,147,4.079,160,3.913,265,3.913,338,3.278,340,3.042,352,3.414,356,3.414,772,4.079,866,3.913,867,3.913,868,5,912,2.496,915,3.913,916,4.671,917,4.671,918,4.671]],["title/index.html",[9,0.274,919,2.728,920,2.728]],["body/index.html",[16,0.027,36,0.027,37,0.027,163,4.321,921,5.158,922,5.158]],["title/modules.html",[53,2.369]],["body/modules.html",[16,0.026,36,0.026,37,0.026,52,3.209,53,2.634,58,2.895,59,2.895,239,5.113,923,6.103,924,6.103,925,6.103]],["title/overview.html",[926,3.713]],["body/overview.html",[2,3.074,16,0.029,36,0.024,37,0.024,40,2.056,46,3.046,52,4.175,53,2.247,54,2.797,55,3.523,56,3.523,57,3.523,58,3.604,59,3.726,60,3.408,61,2.47,62,2.056,100,2.247,114,3.046,123,2.359,309,4.775,313,4.385,339,3.074,374,1.741,538,3.074,604,3.046,618,3.523,619,3.523,810,3.523,811,3.523,926,3.523,927,4.205,928,4.205]],["title/properties.html",[377,1.28,878,2.285]],["body/properties.html",[16,0.03,36,0.026,37,0.026,377,1.627,385,1.903,929,4.979,930,4.979,931,4.979,932,4.979,933,4.979,934,4.979,935,4.979]],["title/miscellaneous/variables.html",[912,1.458,936,3.28]],["body/miscellaneous/variables.html",[9,0.433,12,2.53,16,0.03,18,0.488,20,2.53,27,1.646,28,1.783,29,3.148,30,3.608,31,1.407,36,0.024,37,0.024,63,3.148,80,3.883,81,3.608,82,2.804,112,4.396,115,3.148,133,2.804,152,3.883,157,3.608,396,2.702,525,3.121,815,3.883,822,3.608,870,3.608,871,3.608,872,4.45,912,2.301,936,3.608,937,4.306,938,4.306,939,4.306,940,4.306,941,4.306,942,4.306,943,4.306,944,4.306]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":930,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["0.2.45",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["0000ee",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["01",{"_index":404,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["01t00:00:00.000z",{"_index":480,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["01t00:00:00.000z'})@isstring()@isnotempty",{"_index":405,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["01t00:00:00.000z'})@isstring()@isnotempty()@isoptional",{"_index":655,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["06:00",{"_index":427,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["1",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["100",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["1000",{"_index":482,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["1000)@isnotempty",{"_index":433,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["1000)@isnotempty()@isoptional",{"_index":665,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["1000.00",{"_index":483,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["1000.00'})@isdecimal()@isnotempty",{"_index":456,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["1000.00'})@isdecimal()@isnotempty()@isoptional",{"_index":674,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["10:00",{"_index":408,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["123456",{"_index":507,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserCredentialsDto.html":{}}}],["123456'})@isnotempty()@isstring()@minlength(6",{"_index":495,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserCredentialsDto.html":{}}}],["16.0.0",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["1h",{"_index":826,"title":{},"body":{"modules/UsersModule.html":{}}}],["2",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"overview.html":{}}}],["2.0",{"_index":922,"title":{},"body":{"index.html":{}}}],["2.0.0",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["2.0.44",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":477,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["200",{"_index":475,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{}}}],["200)@isnotempty",{"_index":399,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["200)@isnotempty()@isoptional",{"_index":653,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["2000.00",{"_index":484,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["2000.00'})@isdecimal()@isnotempty",{"_index":459,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["2000.00'})@isdecimal()@isnotempty()@isoptional",{"_index":676,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["2020",{"_index":403,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["20})@isnumber()@isnotempty",{"_index":415,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["20})@isnumber()@isnotempty()@isoptional",{"_index":658,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["3",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"overview.html":{}}}],["3.0.2",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["3000.00",{"_index":485,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["3000.00'})@isdecimal()@isnotempty",{"_index":462,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["3000.00'})@isdecimal()@isnotempty()@isoptional",{"_index":678,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["32",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["4",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["4.3.0",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":927,"title":{},"body":{"overview.html":{}}}],["5.2.1",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["6.4.4",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["6.7.3",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["7.0.3",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["767px",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["8.0.0",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":928,"title":{},"body":{"overview.html":{}}}],["987654321",{"_index":647,"title":{},"body":{"classes/PasswordResetDto.html":{}}}],["987654321'})@isnotempty()@isstring()@minlength(6",{"_index":644,"title":{},"body":{"classes/PasswordResetDto.html":{}}}],["_scrypt",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["ab",{"_index":397,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["ab123",{"_index":476,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["ab123'})@isstring()@length(0",{"_index":444,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["admin",{"_index":609,"title":{},"body":{"controllers/FlightsController.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/FlightsController.html":{},"coverage.html":{}}}],["adresse",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["afterinsert",{"_index":565,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{}}}],["afterremove",{"_index":566,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{}}}],["afterupdate",{"_index":567,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{}}}],["agrave",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["airline",{"_index":378,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["airport",{"_index":437,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["airport'})@isstring()@length(0",{"_index":441,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["align",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["already",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["am'})@isstring()@isnotempty",{"_index":428,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["am'})@isstring()@isnotempty()@isoptional",{"_index":663,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["api/auth",{"_index":729,"title":{},"body":{"controllers/UsersController.html":{}}}],["api/flights",{"_index":580,"title":{},"body":{"controllers/FlightsController.html":{}}}],["apibadrequestresponse",{"_index":598,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["apicreatedresponse",{"_index":599,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["apinotfoundresponse",{"_index":768,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiokresponse",{"_index":769,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":464,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UserCredentialsDto.html":{}}}],["apiproperty({type",{"_index":395,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UserCredentialsDto.html":{}}}],["apitags",{"_index":600,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["apitags('flights",{"_index":606,"title":{},"body":{"controllers/FlightsController.html":{}}}],["apitags('users",{"_index":784,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiunauthorizedresponse",{"_index":770,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_pipe",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":39,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["apply",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":52,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":46,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":350,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["arrival",{"_index":402,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["arrival_date",{"_index":379,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["arrival_time",{"_index":380,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["async",{"_index":107,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["attrs",{"_index":842,"title":{},"body":{"injectables/UsersService.html":{}}}],["auth.service",{"_index":774,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["authguard",{"_index":105,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["author",{"_index":933,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":114,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":414,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["avez",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["aviation",{"_index":422,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["aviation'})@isstring()@length(0",{"_index":398,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["avoir",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["avons",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["await",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":921,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlightsService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('email",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('failed",{"_index":639,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('invalid",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["base",{"_index":454,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["before",{"_index":362,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["besoin",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["body.newpassword",{"_index":796,"title":{},"body":{"controllers/UsersController.html":{}}}],["body.password",{"_index":804,"title":{},"body":{"controllers/UsersController.html":{}}}],["bonjour,merci",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["bonjour,nous",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{},"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["bootstrap",{"_index":868,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["browse",{"_index":925,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"modules.html":{}}}],["buffer",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["business",{"_index":458,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["callhandler",{"_index":343,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["canactivate",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["capacity",{"_index":381,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["car",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["case",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlightsService.html":{},"injectables/UsersService.html":{}}}],["cet",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["check",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["ci",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":26,"title":{"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/PasswordResetDto.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classconstructor",{"_index":338,"title":{"interfaces/ClassConstructor.html":{}},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":374,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/PasswordResetDto.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["cliquez",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_flightsmodule",{"_index":618,"title":{},"body":{"modules/FlightsModule.html":{},"overview.html":{}}}],["cluster_flightsmodule_providers",{"_index":619,"title":{},"body":{"modules/FlightsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":810,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":811,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["col",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["col.u",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["collapse",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["color",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["column",{"_index":568,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{}}}],["column({type",{"_index":541,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{}}}],["combination",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["comoros",{"_index":431,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["comoros'})@isstring()@length(0",{"_index":446,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["company",{"_index":418,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["company_logo",{"_index":382,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["compléter",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["compris",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["compte",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["configmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["configure",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["configure(consumer",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["confirmation",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmer",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["connecter",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"i'm",{"_index":365,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["console.log('flight",{"_index":571,"title":{},"body":{"entities/Flight.html":{}}}],["console.log('hello",{"_index":640,"title":{},"body":{"injectables/FlightsService.html":{}}}],["console.log('user",{"_index":709,"title":{},"body":{"entities/User.html":{}}}],["console.log(err",{"_index":638,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/UsersService.html":{}}}],["const",{"_index":27,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/FlightsService.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":816,"title":{},"body":{"modules/UsersModule.html":{}}}],["constructor",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/FlightsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectrepository(flight",{"_index":634,"title":{},"body":{"injectables/FlightsService.html":{}}}],["constructor(@injectrepository(user",{"_index":845,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(dto",{"_index":648,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["constructor(private",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{}}}],["constructor(repo",{"_index":625,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{}}}],["consumer",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["consumer.apply(currentusermiddleware).forroutes",{"_index":827,"title":{},"body":{"modules/UsersModule.html":{}}}],["contactez",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["container",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["content/uploads/2019/12/ab",{"_index":421,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["context",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":38,"title":{"controllers/AppController.html":{},"controllers/FlightsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/FlightsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('api/auth",{"_index":786,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('api/flights",{"_index":607,"title":{},"body":{"controllers/FlightsController.html":{}}}],["controllers",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["cookiesession",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cordialement",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["country",{"_index":435,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["coverage",{"_index":856,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"injectables/UsersService.html":{}}}],["create(flight",{"_index":629,"title":{},"body":{"injectables/FlightsService.html":{}}}],["create(user",{"_index":833,"title":{},"body":{"injectables/UsersService.html":{}}}],["created",{"_index":585,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["created_at",{"_index":683,"title":{},"body":{"entities/User.html":{},"classes/UserDto.html":{}}}],["createdatecolumn",{"_index":704,"title":{},"body":{"entities/User.html":{}}}],["createdatecolumn({type",{"_index":686,"title":{},"body":{"entities/User.html":{}}}],["createflight",{"_index":581,"title":{},"body":{"controllers/FlightsController.html":{}}}],["createflight(@body",{"_index":612,"title":{},"body":{"controllers/FlightsController.html":{}}}],["createflight(body",{"_index":583,"title":{},"body":{"controllers/FlightsController.html":{}}}],["createflightdto",{"_index":373,"title":{"classes/CreateFlightDto.html":{}},"body":{"classes/CreateFlightDto.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":608,"title":{},"body":{"controllers/FlightsController.html":{}}}],["createuserdto",{"_index":131,"title":{"classes/CreateUserDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["credentials",{"_index":759,"title":{},"body":{"controllers/UsersController.html":{}}}],["credentials.dto",{"_index":782,"title":{},"body":{"controllers/UsersController.html":{}}}],["credentials.dto.ts",{"_index":712,"title":{},"body":{"classes/UserCredentialsDto.html":{},"coverage.html":{}}}],["credentials.dto.ts:12",{"_index":714,"title":{},"body":{"classes/UserCredentialsDto.html":{}}}],["credentials.dto.ts:22",{"_index":715,"title":{},"body":{"classes/UserCredentialsDto.html":{}}}],["cross",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["crypto",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["current_timestamp(6",{"_index":688,"title":{},"body":{"entities/User.html":{}}}],["currentuser",{"_index":525,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentusermiddleware",{"_index":510,"title":{"injectables/CurrentUserMiddleware.html":{}},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["customer",{"_index":706,"title":{},"body":{"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["d&rsquo;avoir",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["d'avoir",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["d'informations",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["d'un",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":401,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["de",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["declare",{"_index":522,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["decodedtoken",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodedtoken.email",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoration",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["decorators/current",{"_index":775,"title":{},"body":{"controllers/UsersController.html":{}}}],["default",{"_index":396,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["demand",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["demande",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["departure",{"_index":425,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["departure_date",{"_index":383,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["departure_time",{"_index":384,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["dependencies",{"_index":54,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["description",{"_index":385,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UserCredentialsDto.html":{},"controllers/UsersController.html":{},"properties.html":{}}}],["dessous",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["destination",{"_index":386,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["destination_airport_name",{"_index":387,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["difficult&eacute;s",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["display",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["documentation",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":506,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["doe'})@isstring()@isnotempty",{"_index":493,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["dotenv",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":356,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/functions.html":{}}}],["dtos/create",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/email",{"_index":777,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/password",{"_index":779,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/update",{"_index":603,"title":{},"body":{"controllers/FlightsController.html":{},"injectables/FlightsService.html":{}}}],["dtos/user",{"_index":781,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/user.dto",{"_index":783,"title":{},"body":{"controllers/UsersController.html":{}}}],["e",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["email",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/PasswordResetDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["email')@httpcode(200)@apiokresponse({description",{"_index":751,"title":{},"body":{"controllers/UsersController.html":{}}}],["email/password",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["emaildata",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["emailverificationdto",{"_index":530,"title":{"classes/EmailVerificationDto.html":{}},"body":{"classes/EmailVerificationDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["entities",{"_index":538,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":537,"title":{"entities/Flight.html":{},"entities/User.html":{}},"body":{"entities/Flight.html":{},"entities/User.html":{},"coverage.html":{}}}],["enum",{"_index":698,"title":{},"body":{"entities/User.html":{}}}],["enumerations",{"_index":913,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["env.${process.env.node_env",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlightsService.html":{},"injectables/UsersService.html":{}}}],["excludeextraneousvalues",{"_index":372,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["executioncontext",{"_index":12,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":113,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exists",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["exists'})@apinotfoundresponse({description",{"_index":742,"title":{},"body":{"controllers/UsersController.html":{}}}],["expiresin",{"_index":825,"title":{},"body":{"modules/UsersModule.html":{}}}],["export",{"_index":25,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["expose",{"_index":718,"title":{},"body":{"classes/UserDto.html":{}}}],["express",{"_index":520,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"dependencies.html":{}}}],["extra",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjlbwfpbci6inlpbwthym9zc0bnbwfpbc5jb20ilcjpyxqioje2ndgzmtiwmtqsimv4cci6mty0odmxntyxnh0.slrcrne_1wkyrm5",{"_index":500,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["failed",{"_index":587,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["false",{"_index":32,"title":{},"body":{"guards/AdminGuard.html":{},"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{}}}],["false})@isboolean()@isnotempty",{"_index":452,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["false})@isboolean()@isnotempty()@isoptional",{"_index":672,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["fetched",{"_index":766,"title":{},"body":{"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["finaliser",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["find",{"_index":829,"title":{},"body":{"injectables/UsersService.html":{}}}],["find(email",{"_index":835,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":830,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(id",{"_index":837,"title":{},"body":{"injectables/UsersService.html":{}}}],["first",{"_index":461,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateFlightDto.html":{}}}],["first_name",{"_index":488,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["fixed",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["flex",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["flight",{"_index":430,"title":{"entities/Flight.html":{}},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/UpdateFlightDto.html":{},"coverage.html":{}}}],["flight.dto",{"_index":602,"title":{},"body":{"controllers/FlightsController.html":{},"injectables/FlightsService.html":{}}}],["flight.dto.ts",{"_index":376,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{},"coverage.html":{}}}],["flight.dto.ts:107",{"_index":426,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:116",{"_index":406,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:117",{"_index":662,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:125",{"_index":453,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:127",{"_index":656,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:135",{"_index":424,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:137",{"_index":673,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:145",{"_index":434,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:148",{"_index":661,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:154",{"_index":457,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:159",{"_index":666,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:163",{"_index":460,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:169",{"_index":675,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:172",{"_index":463,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:179",{"_index":677,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:189",{"_index":679,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:21",{"_index":400,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:22",{"_index":654,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:31",{"_index":445,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:33",{"_index":669,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:40",{"_index":416,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:43",{"_index":659,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:50",{"_index":447,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:54",{"_index":670,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:60",{"_index":436,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:65",{"_index":667,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:70",{"_index":450,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:76",{"_index":671,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:80",{"_index":442,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:87",{"_index":668,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:89",{"_index":429,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.dto.ts:97",{"_index":664,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["flight.dto.ts:98",{"_index":410,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["flight.entity",{"_index":622,"title":{},"body":{"modules/FlightsModule.html":{},"injectables/FlightsService.html":{}}}],["flight_number",{"_index":388,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["flights.controller",{"_index":621,"title":{},"body":{"modules/FlightsModule.html":{}}}],["flights.service",{"_index":605,"title":{},"body":{"controllers/FlightsController.html":{},"modules/FlightsModule.html":{}}}],["flights/flights.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["flightscontroller",{"_index":577,"title":{"controllers/FlightsController.html":{}},"body":{"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"coverage.html":{}}}],["flightsmodule",{"_index":58,"title":{"modules/FlightsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules.html":{},"overview.html":{}}}],["flightsservice",{"_index":604,"title":{"injectables/FlightsService.html":{}},"body":{"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"coverage.html":{},"overview.html":{}}}],["forroutes",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["found'})@apiunauthorizedresponse({description",{"_index":757,"title":{},"body":{"controllers/UsersController.html":{}}}],["function",{"_index":351,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{}}}],["functions",{"_index":915,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('whoami",{"_index":805,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('whoami')@useguards(authguard)@apiokresponse({description",{"_index":765,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":919,"title":{"index.html":{}},"body":{}}],["global",{"_index":523,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["guards/admin.guard",{"_index":601,"title":{},"body":{"controllers/FlightsController.html":{}}}],["handled",{"_index":363,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["handler",{"_index":364,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["hash",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash.tostring('hex",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["height",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":103,"title":{},"body":{"injectables/AppService.html":{}}}],["helpers/email",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["hidden",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["html",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpcode",{"_index":594,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["httpcode(200",{"_index":615,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["https://www.abaviation.com/wp",{"_index":420,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["ibrahim",{"_index":449,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["ibu3gxnbymx5x_czqwvinolbwei",{"_index":509,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["ibu3gxnbymx5x_czqwvinolbwei'})@isnotempty()@isjwt",{"_index":501,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["id",{"_index":540,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["identification",{"_index":443,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["identifier",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["implements",{"_index":7,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{}}}],["import",{"_index":23,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/UsersModule.html":{}}}],["in'})@apinotfoundresponse({description",{"_index":756,"title":{},"body":{"controllers/UsersController.html":{}}}],["includes",{"_index":499,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["incorrect",{"_index":758,"title":{},"body":{"controllers/UsersController.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inherit",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":99,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/FlightsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/FlightsService.html":{},"interfaces/Request.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":100,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/FlightsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":633,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/UsersService.html":{}}}],["inscription",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["inserted",{"_index":572,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{}}}],["int",{"_index":547,"title":{},"body":{"entities/Flight.html":{}}}],["intercept",{"_index":357,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["intercept(context",{"_index":650,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["interface",{"_index":337,"title":{"interfaces/ClassConstructor.html":{},"interfaces/Request.html":{}},"body":{"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":339,"title":{},"body":{"interfaces/ClassConstructor.html":{},"interfaces/Request.html":{},"overview.html":{}}}],["international",{"_index":440,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["invalid",{"_index":736,"title":{},"body":{"controllers/UsersController.html":{}}}],["is_email_verified",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["isboolean",{"_index":466,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["isdate",{"_index":467,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["isdecimal",{"_index":468,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["isemail",{"_index":535,"title":{},"body":{"classes/EmailVerificationDto.html":{},"classes/UserCredentialsDto.html":{}}}],["isglobal",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["isjwt",{"_index":503,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["isnotempty",{"_index":469,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UserCredentialsDto.html":{}}}],["isnumber",{"_index":470,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["isoptional",{"_index":680,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["isstring",{"_index":471,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UserCredentialsDto.html":{}}}],["john",{"_index":505,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["john'})@isstring()@isnotempty",{"_index":490,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["johndoe@email.com",{"_index":536,"title":{},"body":{"classes/EmailVerificationDto.html":{},"classes/UserCredentialsDto.html":{}}}],["johndoe@email.com'})@isnotempty()@isemail",{"_index":713,"title":{},"body":{"classes/UserCredentialsDto.html":{}}}],["johndoe@email.com'})@isstring()@isnotempty()@isemail",{"_index":533,"title":{},"body":{"classes/EmailVerificationDto.html":{}}}],["join",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["jsonwebtoken",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["julius",{"_index":438,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["jwt",{"_index":498,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["jwtconstants",{"_index":815,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":823,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtmodule",{"_index":814,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtmodule.register",{"_index":821,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtservice",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["kassai",{"_index":935,"title":{},"body":{"properties.html":{}}}],["kaym",{"_index":934,"title":{},"body":{"properties.html":{}}}],["keys",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["l'&eacute;quipe",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["last",{"_index":492,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["last_name",{"_index":489,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["layout",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["le",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["left",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["length",{"_index":472,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{}}}],["length(0",{"_index":474,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["license",{"_index":931,"title":{},"body":{"properties.html":{}}}],["lien",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["line",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["logged",{"_index":755,"title":{},"body":{"controllers/UsersController.html":{}}}],["loginsert",{"_index":570,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{}}}],["logo",{"_index":419,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["logo.png",{"_index":481,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["logo.png'})@isstring()@isnotempty",{"_index":423,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["logo.png'})@isstring()@isnotempty()@isoptional",{"_index":660,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["logremove",{"_index":575,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{}}}],["logupdate",{"_index":573,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{}}}],["mail",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["map",{"_index":346,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["map((data",{"_index":368,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["margin",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":37,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["maximum",{"_index":412,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["media",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["merci",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["middlewares/current",{"_index":817,"title":{},"body":{"modules/UsersModule.html":{}}}],["minlength",{"_index":504,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{},"classes/UserCredentialsDto.html":{}}}],["minlength(6",{"_index":508,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{},"classes/UserCredentialsDto.html":{}}}],["miscellaneous",{"_index":912,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["module",{"_index":51,"title":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":53,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mon",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["mot",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["mso",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["name",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":524,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["nestinterceptor",{"_index":342,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":465,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"controllers/FlightsController.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UserCredentialsDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":519,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["never",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"classes/SerializeInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newflight",{"_index":635,"title":{},"body":{"injectables/FlightsService.html":{}}}],["newpassword",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"classes/PasswordResetDto.html":{}}}],["newuser",{"_index":846,"title":{},"body":{"injectables/UsersService.html":{}}}],["next",{"_index":358,"title":{},"body":{"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{}}}],["next.handle().pipe",{"_index":367,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["nextfunction",{"_index":516,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["nodemailer",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["notfoundexception",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('user",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('users",{"_index":851,"title":{},"body":{"injectables/UsersService.html":{}}}],["nous",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["nowrap",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":794,"title":{},"body":{"controllers/UsersController.html":{}}}],["nullable",{"_index":543,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{}}}],["number",{"_index":411,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["numeric",{"_index":561,"title":{},"body":{"entities/Flight.html":{}}}],["nyerere",{"_index":439,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["object",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign(user",{"_index":853,"title":{},"body":{"injectables/UsersService.html":{}}}],["observable",{"_index":344,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["onupdate",{"_index":702,"title":{},"body":{"entities/User.html":{}}}],["optional",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":389,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["origin_airport_name",{"_index":390,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["out",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ClassConstructor.html":{},"modules/FlightsModule.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":926,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":878,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["parameters",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":843,"title":{},"body":{"injectables/UsersService.html":{}}}],["passe",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["password",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"controllers/UsersController.html":{}}}],["passwordreset",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["passwordreset(@body",{"_index":792,"title":{},"body":{"controllers/UsersController.html":{}}}],["passwordreset(body",{"_index":732,"title":{},"body":{"controllers/UsersController.html":{}}}],["passwordreset(token",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordresetdto",{"_index":641,"title":{"classes/PasswordResetDto.html":{}},"body":{"classes/PasswordResetDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["patch",{"_index":595,"title":{},"body":{"controllers/FlightsController.html":{}}}],["patch('/:id",{"_index":614,"title":{},"body":{"controllers/FlightsController.html":{}}}],["patch('/:id')@useguards(adminguard)@httpcode(200)@apicreatedresponse({description",{"_index":591,"title":{},"body":{"controllers/FlightsController.html":{}}}],["peu",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["pg",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["plaintoclass",{"_index":348,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["plaintoclass(this.dto",{"_index":371,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["plus",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["pm",{"_index":479,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["pm'})@isstring()@isnotempty",{"_index":409,"title":{},"body":{"classes/CreateFlightDto.html":{}}}],["pm'})@isstring()@isnotempty()@isoptional",{"_index":657,"title":{},"body":{"classes/UpdateFlightDto.html":{}}}],["position",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["post",{"_index":596,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["post('/password",{"_index":733,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/register",{"_index":797,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/register')@apicreatedresponse({description",{"_index":740,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/send",{"_index":745,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/signin",{"_index":801,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/signin')@httpcode(200)@apiokresponse({description",{"_index":754,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/signout",{"_index":808,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/signout')@httpcode(200)@apiokresponse({description",{"_index":762,"title":{},"body":{"controllers/UsersController.html":{}}}],["post()@useguards(adminguard)@apicreatedresponse({description",{"_index":584,"title":{},"body":{"controllers/FlightsController.html":{}}}],["pour",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["prefix",{"_index":579,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":455,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["primarygeneratedcolumn",{"_index":556,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{}}}],["prince",{"_index":448,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["private",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlightsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process.env.email",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.token_key",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":359,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["promisify",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["promisify(_scrypt",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":377,"title":{"properties.html":{}},"body":{"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"properties.html":{}}}],["provide",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":682,"title":{},"body":{"entities/User.html":{}}}],["randombytes",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["randombytes(8).tostring('hex",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["readonly",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["recevez",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["reflect",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["refundable",{"_index":391,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["register",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["register(@body",{"_index":798,"title":{},"body":{"controllers/UsersController.html":{}}}],["register(body",{"_index":739,"title":{},"body":{"controllers/UsersController.html":{}}}],["register(data",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["reinitialisation",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["rejoint",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["relative",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":831,"title":{},"body":{"injectables/UsersService.html":{}}}],["remove(id",{"_index":839,"title":{},"body":{"injectables/UsersService.html":{}}}],["removed",{"_index":576,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{}}}],["rencontrez",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["repo",{"_index":628,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":626,"title":{},"body":{"injectables/FlightsService.html":{},"injectables/UsersService.html":{}}}],["req",{"_index":518,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{}}}],["req.currentuser",{"_index":529,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["req.session",{"_index":527,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["request",{"_index":28,"title":{"interfaces/Request.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request.currentuser",{"_index":30,"title":{},"body":{"guards/AdminGuard.html":{},"miscellaneous/variables.html":{}}}],["request.currentuser.role",{"_index":33,"title":{},"body":{"guards/AdminGuard.html":{}}}],["request.session.userid",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{}}}],["require('cookie",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":515,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["reset",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["reset')@httpcode(200)@apiokresponse({description",{"_index":734,"title":{},"body":{"controllers/UsersController.html":{}}}],["reset.dto",{"_index":780,"title":{},"body":{"controllers/UsersController.html":{}}}],["reset.dto.ts",{"_index":643,"title":{},"body":{"classes/PasswordResetDto.html":{},"coverage.html":{}}}],["reset.dto.ts:13",{"_index":645,"title":{},"body":{"classes/PasswordResetDto.html":{}}}],["reset.dto.ts:23",{"_index":646,"title":{},"body":{"classes/PasswordResetDto.html":{}}}],["response",{"_index":369,"title":{},"body":{"interfaces/ClassConstructor.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{}}}],["result",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":36,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["reçu",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["right",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["rimraf",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":684,"title":{},"body":{"entities/User.html":{},"classes/UserDto.html":{}}}],["row",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["row:not(.no",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["run",{"_index":360,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["running",{"_index":366,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["rxjs",{"_index":345,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":347,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["réinitialisation",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["réinitialiser",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["salt",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["save",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["scrypt",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrypt(data.password",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["scrypt(newpassword",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["scrypt(password",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["seat_base_price",{"_index":392,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["seat_price_business_class",{"_index":393,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["seat_price_first_class",{"_index":394,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["seats",{"_index":413,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["secret",{"_index":822,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":748,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendemailverification",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["sendemailverification(@body",{"_index":787,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendemailverification(body",{"_index":744,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendemailverification(email",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendemailwithnodemailer",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sendemailwithnodemailer(emaildata",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["sendpasswordresetemail",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["sendpasswordresetemail(@body",{"_index":789,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendpasswordresetemail(body",{"_index":750,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendpasswordresetemail(email",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["sent",{"_index":370,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"controllers/UsersController.html":{}}}],["serialize",{"_index":772,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["serialize(dto",{"_index":352,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/functions.html":{}}}],["serialize(userdto",{"_index":785,"title":{},"body":{"controllers/UsersController.html":{}}}],["serializeinterceptor",{"_index":355,"title":{"classes/SerializeInterceptor.html":{}},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{}}}],["serializeinterceptor(dto",{"_index":354,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["session",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.userid",{"_index":793,"title":{},"body":{"controllers/UsersController.html":{}}}],["si",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["signin(@body",{"_index":802,"title":{},"body":{"controllers/UsersController.html":{}}}],["signin(body",{"_index":753,"title":{},"body":{"controllers/UsersController.html":{}}}],["signin(email",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":824,"title":{},"body":{"modules/UsersModule.html":{}}}],["signout",{"_index":730,"title":{},"body":{"controllers/UsersController.html":{}}}],["signout(@session",{"_index":809,"title":{},"body":{"controllers/UsersController.html":{}}}],["signout(session",{"_index":761,"title":{},"body":{"controllers/UsersController.html":{}}}],["something",{"_index":361,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"modules/FlightsModule.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../app.module.ts",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email.ts",{"_index":917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../serialize.interceptor.ts",{"_index":918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.entity.ts",{"_index":914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:35",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":101,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":102,"title":{},"body":{"injectables/AppService.html":{}}}],["src/flights/dtos/create",{"_index":375,"title":{},"body":{"classes/CreateFlightDto.html":{},"coverage.html":{}}}],["src/flights/dtos/update",{"_index":652,"title":{},"body":{"classes/UpdateFlightDto.html":{},"coverage.html":{}}}],["src/flights/flight.entity.ts",{"_index":539,"title":{},"body":{"entities/Flight.html":{},"coverage.html":{}}}],["src/flights/flight.entity.ts:104",{"_index":552,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:110",{"_index":562,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:116",{"_index":563,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:122",{"_index":564,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:13",{"_index":557,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:20",{"_index":544,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:27",{"_index":555,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:33",{"_index":548,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:40",{"_index":558,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:47",{"_index":553,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:54",{"_index":559,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:61",{"_index":554,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:67",{"_index":551,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:73",{"_index":546,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:79",{"_index":550,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:85",{"_index":545,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:91",{"_index":560,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flight.entity.ts:97",{"_index":549,"title":{},"body":{"entities/Flight.html":{}}}],["src/flights/flights.controller.ts",{"_index":578,"title":{},"body":{"controllers/FlightsController.html":{},"coverage.html":{}}}],["src/flights/flights.controller.ts:33",{"_index":588,"title":{},"body":{"controllers/FlightsController.html":{}}}],["src/flights/flights.controller.ts:47",{"_index":593,"title":{},"body":{"controllers/FlightsController.html":{}}}],["src/flights/flights.module.ts",{"_index":620,"title":{},"body":{"modules/FlightsModule.html":{}}}],["src/flights/flights.service.ts",{"_index":624,"title":{},"body":{"injectables/FlightsService.html":{},"coverage.html":{}}}],["src/flights/flights.service.ts:12",{"_index":630,"title":{},"body":{"injectables/FlightsService.html":{}}}],["src/flights/flights.service.ts:22",{"_index":632,"title":{},"body":{"injectables/FlightsService.html":{}}}],["src/flights/flights.service.ts:9",{"_index":627,"title":{},"body":{"injectables/FlightsService.html":{}}}],["src/guards/admin.guard.ts",{"_index":6,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/guards/admin.guard.ts:4",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/guards/auth.guard",{"_index":771,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/guards/auth.guard.ts",{"_index":106,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/guards/auth.guard.ts:4",{"_index":108,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/helpers/email.ts",{"_index":866,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/interceptors/serialize.interceptor",{"_index":773,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/interceptors/serialize.interceptor.ts",{"_index":340,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/interceptors/serialize.interceptor.ts:19",{"_index":649,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["src/interceptors/serialize.interceptor.ts:22",{"_index":651,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["src/main.ts",{"_index":867,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/auth.service.ts",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/auth.service.ts:18",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth.service.ts:25",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth.service.ts:367",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth.service.ts:718",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth.service.ts:764",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth.service.ts:781",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/constants/index.ts",{"_index":870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/decorators/current",{"_index":871,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dtos/create",{"_index":486,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/email",{"_index":531,"title":{},"body":{"classes/EmailVerificationDto.html":{},"coverage.html":{}}}],["src/users/dtos/password",{"_index":642,"title":{},"body":{"classes/PasswordResetDto.html":{},"coverage.html":{}}}],["src/users/dtos/user",{"_index":711,"title":{},"body":{"classes/UserCredentialsDto.html":{},"coverage.html":{}}}],["src/users/dtos/user.dto.ts",{"_index":717,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/dtos/user.dto.ts:12",{"_index":724,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:15",{"_index":720,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:18",{"_index":725,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:21",{"_index":719,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:24",{"_index":726,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:27",{"_index":723,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:6",{"_index":722,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:9",{"_index":721,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/middlewares/current",{"_index":511,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["src/users/user.entity.ts",{"_index":681,"title":{},"body":{"entities/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/user.entity.ts:21",{"_index":693,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:24",{"_index":692,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:27",{"_index":695,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:35",{"_index":691,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:38",{"_index":696,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:46",{"_index":700,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:53",{"_index":689,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:61",{"_index":703,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:68",{"_index":694,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":728,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:102",{"_index":767,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:109",{"_index":763,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":749,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:57",{"_index":752,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:68",{"_index":738,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:80",{"_index":743,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:93",{"_index":760,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":812,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.module.ts:23",{"_index":813,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":828,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:12",{"_index":832,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":834,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":838,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:35",{"_index":836,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:45",{"_index":844,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:57",{"_index":840,"title":{},"body":{"injectables/UsersService.html":{}}}],["stack",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["started",{"_index":920,"title":{"index.html":{}},"body":{}}],["statements",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["storedhash",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["subject",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["successful",{"_index":791,"title":{},"body":{"controllers/UsersController.html":{}}}],["successful'})@apibadrequestresponse({description",{"_index":735,"title":{},"body":{"controllers/UsersController.html":{}}}],["successfully",{"_index":611,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["successfully'})@apibadrequestresponse({description",{"_index":586,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":923,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["svg",{"_index":924,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["sysadmin",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["table",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["tanzania",{"_index":478,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["tanzania'})@isstring()@length(0",{"_index":432,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["td",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["text",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.appservice.gethello",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.passwordreset(body.token",{"_index":795,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.register(body",{"_index":799,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.sendemailverification(body.email",{"_index":788,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.sendpasswordresetemail(body.email",{"_index":790,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.signin(body.email",{"_index":803,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.configservice.get('cookie_key",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["this.findone(id",{"_index":852,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.flightsservice.create(body",{"_index":613,"title":{},"body":{"controllers/FlightsController.html":{}}}],["this.flightsservice.update(body",{"_index":617,"title":{},"body":{"controllers/FlightsController.html":{}}}],["this.jwtservice.sign",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(data.token",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.repo.create(flight",{"_index":636,"title":{},"body":{"injectables/FlightsService.html":{}}}],["this.repo.create(user",{"_index":847,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repo.find",{"_index":850,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repo.findone(id",{"_index":849,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repo.remove(user",{"_index":855,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repo.save(newflight",{"_index":637,"title":{},"body":{"injectables/FlightsService.html":{}}}],["this.repo.save(newuser",{"_index":848,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repo.save(user",{"_index":854,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(userdata",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.find(decodedtoken.email",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.find(email",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(userid",{"_index":528,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["this.usersservice.update(user.id",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlightsService.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":407,"title":{},"body":{"classes/CreateFlightDto.html":{},"entities/Flight.html":{},"classes/UpdateFlightDto.html":{}}}],["timestamp",{"_index":687,"title":{},"body":{"entities/User.html":{}}}],["token",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{},"controllers/UsersController.html":{}}}],["token'})@apibadrequestresponse({description",{"_index":741,"title":{},"body":{"controllers/UsersController.html":{}}}],["token'})@apinotfoundresponse({description",{"_index":737,"title":{},"body":{"controllers/UsersController.html":{}}}],["top",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["tour",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["tour@gmail.com",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["tr",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformer",{"_index":349,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["true",{"_index":35,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"entities/User.html":{}}}],["truthy",{"_index":111,"title":{},"body":{"guards/AuthGuard.html":{}}}],["try",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlightsService.html":{},"injectables/UsersService.html":{}}}],["type",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"entities/Flight.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"classes/SerializeInterceptor.html":{},"classes/UpdateFlightDto.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":569,"title":{},"body":{"entities/Flight.html":{},"injectables/FlightsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([flight",{"_index":623,"title":{},"body":{"modules/FlightsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":820,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["types/cookie",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["types/nodemailer",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["u",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["ui",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('bad",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":699,"title":{},"body":{"entities/User.html":{}}}],["underline",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["une",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["unique",{"_index":690,"title":{},"body":{"entities/User.html":{}}}],["unique(['email",{"_index":707,"title":{},"body":{"entities/User.html":{}}}],["unknown",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":932,"title":{},"body":{"properties.html":{}}}],["update",{"_index":592,"title":{},"body":{"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"injectables/UsersService.html":{}}}],["update(flight",{"_index":631,"title":{},"body":{"injectables/FlightsService.html":{}}}],["update(id",{"_index":841,"title":{},"body":{"injectables/UsersService.html":{}}}],["updated",{"_index":574,"title":{},"body":{"entities/Flight.html":{},"controllers/FlightsController.html":{},"entities/User.html":{}}}],["updated_at",{"_index":685,"title":{},"body":{"entities/User.html":{},"classes/UserDto.html":{}}}],["updatedatecolumn",{"_index":705,"title":{},"body":{"entities/User.html":{}}}],["updatedatecolumn({type",{"_index":701,"title":{},"body":{"entities/User.html":{}}}],["updateduser",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateflight",{"_index":582,"title":{},"body":{"controllers/FlightsController.html":{}}}],["updateflight(@body",{"_index":616,"title":{},"body":{"controllers/FlightsController.html":{}}}],["updateflight(body",{"_index":589,"title":{},"body":{"controllers/FlightsController.html":{}}}],["updateflightdto",{"_index":590,"title":{"classes/UpdateFlightDto.html":{}},"body":{"controllers/FlightsController.html":{},"injectables/FlightsService.html":{},"classes/UpdateFlightDto.html":{},"coverage.html":{}}}],["url",{"_index":417,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["use",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{}}}],["use(req",{"_index":514,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["useguards",{"_index":597,"title":{},"body":{"controllers/FlightsController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":610,"title":{},"body":{"controllers/FlightsController.html":{}}}],["useguards(authguard",{"_index":806,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors",{"_index":341,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["useinterceptors(new",{"_index":353,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["user",{"_index":268,"title":{"entities/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/EmailVerificationDto.html":{},"controllers/FlightsController.html":{},"classes/PasswordResetDto.html":{},"interfaces/Request.html":{},"entities/User.html":{},"classes/UserCredentialsDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.decorator",{"_index":776,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":487,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":491,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":494,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":496,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":502,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.entity",{"_index":521,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.id",{"_index":800,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.middleware",{"_index":818,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.middleware.ts",{"_index":512,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["user.middleware.ts:15",{"_index":513,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{}}}],["user.middleware.ts:18",{"_index":517,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{}}}],["user.password.split",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercredentialsdto",{"_index":710,"title":{"classes/UserCredentialsDto.html":{}},"body":{"classes/UserCredentialsDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userdata",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.token",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto",{"_index":716,"title":{"classes/UserDto.html":{}},"body":{"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userid",{"_index":526,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{}}}],["userrole",{"_index":697,"title":{},"body":{"entities/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.customer",{"_index":708,"title":{},"body":{"entities/User.html":{}}}],["users",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":819,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.length",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["users.service",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":727,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":59,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":123,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalue",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["v&eacute;rifier",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["valid",{"_index":497,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PasswordResetDto.html":{}}}],["validationpipe",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":473,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailVerificationDto.html":{},"classes/PasswordResetDto.html":{},"classes/UpdateFlightDto.html":{},"classes/UserCredentialsDto.html":{},"dependencies.html":{}}}],["value",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":542,"title":{},"body":{"entities/Flight.html":{},"entities/User.html":{}}}],["variable",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":936,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":747,"title":{},"body":{"controllers/UsersController.html":{}}}],["verification')@httpcode(200)@apiokresponse({description",{"_index":746,"title":{},"body":{"controllers/UsersController.html":{}}}],["verification.dto",{"_index":778,"title":{},"body":{"controllers/UsersController.html":{}}}],["verification.dto.ts",{"_index":532,"title":{},"body":{"classes/EmailVerificationDto.html":{},"coverage.html":{}}}],["verification.dto.ts:13",{"_index":534,"title":{},"body":{"classes/EmailVerificationDto.html":{}}}],["verified",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":929,"title":{},"body":{"properties.html":{}}}],["vertical",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["veuillez",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["view",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["visibility",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["void",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["votre",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["vous",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["whether",{"_index":451,"title":{},"body":{"classes/CreateFlightDto.html":{},"classes/UpdateFlightDto.html":{}}}],["whitelist",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["whoami",{"_index":731,"title":{},"body":{"controllers/UsersController.html":{}}}],["whoami(@currentuser",{"_index":807,"title":{},"body":{"controllers/UsersController.html":{}}}],["whoami(user",{"_index":764,"title":{},"body":{"controllers/UsersController.html":{}}}],["width",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["world",{"_index":104,"title":{},"body":{"injectables/AppService.html":{}}}],["wrap",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["y",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["yvanig",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["zoom",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/FlightsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/admin.guard.ts\n            \n\n\n\n\n                \n                Implements\n                \n                \n                                CanActivate\n                \n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/admin.guard.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext } from '@nestjs/common';\n\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n\n    if (!request.currentUser) {\n      return false;\n    }\n    if (request.currentUser.role !== 'sysadmin') {\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller('')\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nFlightsModule\n\nFlightsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nFlightsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FlightsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, ValidationPipe, MiddlewareConsumer } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_PIPE } from '@nestjs/core';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nconst cookieSession = require('cookie-session');\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { FlightsModule } from './flights/flights.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: `.env.${process.env.NODE_ENV}`,\n    }),\n    TypeOrmModule.forRoot(),\n    UsersModule,\n    FlightsModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_PIPE,\n      useValue: new ValidationPipe({\n        whitelist: true,\n      }),\n    },\n  ],\n})\nexport class AppModule {\n  constructor(private configService: ConfigService) {}\n\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(\n        cookieSession({\n          keys: [this.configService.get('COOKIE_KEY')],\n        }),\n      )\n      .forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth.guard.ts\n            \n\n\n\n\n                \n                Implements\n                \n                \n                                CanActivate\n                \n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/auth.guard.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext } from '@nestjs/common';\n\nexport class AuthGuard implements CanActivate {\n  async canActivate(context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest();\n    return request.session.userId; // truthy value if exist\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                passwordReset\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                sendEmailVerification\n                            \n                            \n                                    Async\n                                sendPasswordResetEmail\n                            \n                            \n                                    Async\n                                signin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, configService: ConfigService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/users/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        passwordReset\n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordReset(token: string, newPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth.service.ts:781\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth.service.ts:718\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailVerification\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerification(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordResetEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth.service.ts:367\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth.service.ts:764\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { sendEmailWithNodemailer } from '../helpers/email';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { randomBytes, scrypt as _scrypt } from 'crypto';\nimport { promisify } from 'util';\n\nconst scrypt = promisify(_scrypt);\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private configService: ConfigService,\n    private jwtService: JwtService,\n  ) {}\n\n  async sendEmailVerification(email: string) {\n    const token = this.jwtService.sign({ email });\n\n    const emailData = {\n      from: process.env.EMAIL,\n      to: email,\n      subject: `YVANIG TOUR | Veuillez confirmer votre email`,\n      text: `Merci d'avoir rejoint YVANIG TOUR. Nous avons besoin d'un peu plus d'informations pour compléter votre inscription, y compris une confirmation de votre adresse e-mail.`,\n      html: `\n      \n\n      \n        \n        \n        \n          body {\n            visibility: hidden\n          }\n        \n      \n        \n      \n      \n        \n          .u-row {\n            display: flex;\n            flex-wrap: nowrap;\n            margin-left: 0;\n            margin-right: 0;\n          }\n          \n          .u-row .u-col {\n            position: relative;\n            width: 100%;\n            padding-right: 0;\n            padding-left: 0;\n          }\n          \n          .u-row .u-col.u-col-100 {\n            flex: 0 0 100%;\n            max-width: 100%;\n          }\n          \n          @media (max-width: 767px) {\n            .u-row:not(.no-stack) {\n              flex-wrap: wrap;\n            }\n            .u-row:not(.no-stack) .u-col {\n              flex: 0 0 100%;\n              max-width: 100%;\n            }\n          }\n          \n          body {\n            margin: 0;\n            padding: 0;\n          }\n          \n          table,\n          tr,\n          td {\n            vertical-align: top;\n            border-collapse: collapse;\n          }\n          \n          p {\n            margin: 0;\n          }\n          \n          .ie-container table,\n          .mso-container table {\n            table-layout: fixed;\n          }\n          \n          * {\n            line-height: inherit;\n          }\n          \n          table,\n          td {\n            color: #000000;\n          }\n          \n          a {\n            color: #0000ee;\n            text-decoration: underline;\n          }\n        \n      \n      \n      \n      \n      \n        \n        \n        \n          \n            \n              \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    View Email in Browser\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    \n                                      \n      \n                                        \n                                      \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    \n                                      \n      \n                                        \n      \n                                        \n                                      \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Merci de nous avoir rejoint !\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    V&eacute;rifier votre adresse email\n                                      \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Bonjour,Merci d&rsquo;avoir rejoint YVANIG TOUR.\n                                    Pour finaliser votre inscription, cliquez sur le lien ci-dessous.\n                                    Si vous rencontrez des difficult&eacute;s pour vous connecter &agrave; votre compte, contactez-nous &agrave; yvanig-tour@gmail.com\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    \n                                    \n                                      V&eacute;rifier mon email\n                                      \n                                      \n                                    \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Cordialement,\n                                    L'&eacute;quipe YVANIG\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n              \n            \n          \n        \n        \n        \n      \n      \n      \n      `,\n    };\n\n    await sendEmailWithNodemailer(emailData);\n\n    return {\n      success: true,\n    };\n  }\n\n  async sendPasswordResetEmail(email: string) {\n    // check if user exists\n    const [user] = await this.usersService.find(email);\n\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n\n    const token = this.jwtService.sign({ email });\n\n    const emailData = {\n      from: process.env.EMAIL,\n      to: email,\n      subject: `YVANIG TOUR | Réinitialisation de votre mot de passe`,\n      text: `Vous recevez cet email car vous avez demandé une réinitialisation de votre mot de passe.`,\n      html: `\n      \n\n      \n        \n        \n        \n          body {\n            visibility: hidden\n          }\n        \n      \n        \n      \n      \n        \n          .u-row {\n            display: flex;\n            flex-wrap: nowrap;\n            margin-left: 0;\n            margin-right: 0;\n          }\n          \n          .u-row .u-col {\n            position: relative;\n            width: 100%;\n            padding-right: 0;\n            padding-left: 0;\n          }\n          \n          .u-row .u-col.u-col-100 {\n            flex: 0 0 100%;\n            max-width: 100%;\n          }\n          \n          @media (max-width: 767px) {\n            .u-row:not(.no-stack) {\n              flex-wrap: wrap;\n            }\n            .u-row:not(.no-stack) .u-col {\n              flex: 0 0 100%;\n              max-width: 100%;\n            }\n          }\n          \n          body {\n            margin: 0;\n            padding: 0;\n          }\n          \n          table,\n          tr,\n          td {\n            vertical-align: top;\n            border-collapse: collapse;\n          }\n          \n          p {\n            margin: 0;\n          }\n          \n          .ie-container table,\n          .mso-container table {\n            table-layout: fixed;\n          }\n          \n          * {\n            line-height: inherit;\n          }\n          \n          table,\n          td {\n            color: #000000;\n          }\n          \n          a {\n            color: #0000ee;\n            text-decoration: underline;\n          }\n        \n      \n      \n      \n      \n      \n        \n        \n        \n          \n            \n              \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    View Email in Browser\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    \n                                      \n      \n                                        \n      \n                                        \n                                      \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    \n                                      \n      \n                                        \n      \n                                        \n                                      \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Merci de nous avoir rejoint !\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Réinitialiser votre mot de passe\n                                      \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Bonjour,Nous avons reçu votre demande de reinitialisation de mot de passe.\n                                    Pour finaliser votre demande, cliquez sur le lien ci-dessous.\n                                    Si vous rencontrez des difficult&eacute;s pour vous connecter &agrave; votre compte, contactez-nous &agrave; yvanig-tour@gmail.com\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    \n                                    \n                                      V&eacute;rifier mon email\n                                      \n                                      \n                                    \n                                    \n                                  \n      \n                                \n                              \n                            \n                          \n      \n                          \n                            \n                              \n                                \n      \n                                  \n                                    Cordialement,\n                                    L'&eacute;quipe YVANIG\n                                  \n      \n                                \n                              \n                            \n                          \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n                  \n                    \n      \n                      \n                        \n      \n                        \n                      \n      \n                    \n                  \n                \n      \n                \n              \n            \n          \n        \n        \n        \n      \n      \n      \n      `,\n    };\n\n    await sendEmailWithNodemailer(emailData);\n\n    return {\n      success: true,\n    };\n  }\n\n  async register(data: CreateUserDto) {\n    // check if email has been verified\n    let decodedToken;\n\n    try {\n      decodedToken = await this.jwtService.verify(data.token);\n    } catch (err) {\n      throw new BadRequestException('Invalid token');\n    }\n\n    // extra check just in case\n    if (!decodedToken && !decodedToken.email) {\n      throw new BadRequestException('Invalid token');\n    }\n\n    // check if user already exists\n    const users = await this.usersService.find(decodedToken.email);\n\n    if (users.length) {\n      throw new BadRequestException('email in use');\n    }\n\n    // Hash the user's password\n\n    // 1- Generate a salt\n    const salt = randomBytes(8).toString('hex');\n    // 2- Generate a password hash\n    const hash = (await scrypt(data.password, salt, 32)) as Buffer;\n    // 3- Join the hash and the salt\n    const result = salt + '.' + hash.toString('hex');\n    // 4- Create a new user and save it to the database\n\n    const userData = {\n      ...data,\n      email: decodedToken.email,\n      is_email_verified: true,\n      password: result,\n    };\n\n    delete userData.token;\n\n    const user = await this.usersService.create(userData);\n\n    return user;\n  }\n\n  async signin(email: string, password: string) {\n    const [user] = await this.usersService.find(email);\n\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n\n    const [salt, storedHash] = user.password.split('.');\n    const hash = (await scrypt(password, salt, 32)) as Buffer;\n\n    if (storedHash !== hash.toString('hex')) {\n      throw new UnauthorizedException('bad email/password combination');\n    }\n\n    return user;\n  }\n\n  async passwordReset(token: string, newPassword: string) {\n    let decodedToken;\n\n    try {\n      decodedToken = await this.jwtService.verify(token);\n    } catch (err) {\n      throw new BadRequestException('Invalid token');\n    }\n\n    // extra check just in case\n    if (!decodedToken && !decodedToken.email) {\n      throw new BadRequestException('Invalid token');\n    }\n\n    const [user] = await this.usersService.find(decodedToken.email);\n\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n\n    // 1- Generate a salt\n    const salt = randomBytes(8).toString('hex');\n    // 2- Generate a password hash\n    const hash = (await scrypt(newPassword, salt, 32)) as Buffer;\n    // 3- Join the hash and the salt\n    const result = salt + '.' + hash.toString('hex');\n\n    // modify user's password\n    const updatedUser = await this.usersService.update(user.id, {\n      password: result,\n    });\n\n    return updatedUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassConstructor.html":{"url":"interfaces/ClassConstructor.html","title":"interface - ClassConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/serialize.interceptor.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  UseInterceptors,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { plainToClass } from 'class-transformer';\n\ninterface ClassConstructor {\n  new (...args: any[]): {};\n}\n\nexport function Serialize(dto: ClassConstructor) {\n  return UseInterceptors(new SerializeInterceptor(dto));\n}\n\nexport class SerializeInterceptor implements NestInterceptor {\n  constructor(private dto: ClassConstructor) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    // Run something before a request is handled by the request handler\n    // console.log(\"I'm running before the handler: \", context);\n    return next.handle().pipe(\n      map((data: any) => {\n        // Run something before the response is sent out\n        // console.log(\"I'm running before response is sent out: \", data);\n        return plainToClass(this.dto, data, {\n          excludeExtraneousValues: true,\n        });\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFlightDto.html":{"url":"classes/CreateFlightDto.html","title":"class - CreateFlightDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFlightDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flights/dtos/create-flight.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                airline\n                            \n                            \n                                arrival_date\n                            \n                            \n                                arrival_time\n                            \n                            \n                                capacity\n                            \n                            \n                                company_logo\n                            \n                            \n                                departure_date\n                            \n                            \n                                departure_time\n                            \n                            \n                                description\n                            \n                            \n                                destination\n                            \n                            \n                                destination_airport_name\n                            \n                            \n                                flight_number\n                            \n                            \n                                origin\n                            \n                            \n                                origin_airport_name\n                            \n                            \n                                refundable\n                            \n                            \n                                seat_base_price\n                            \n                            \n                                seat_price_business_class\n                            \n                            \n                                seat_price_first_class\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        airline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the name of the airline', default: 'AB Aviation'})@IsString()@Length(0, 200)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrival_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the date of arrival', default: '2020-01-01T00:00:00.000Z'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrival_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the time of arrival', default: '10:00 PM'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the maximum number of seats available', default: 20})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        company_logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the url of the company logo', default: 'https://www.abaviation.com/wp-content/uploads/2019/12/AB-Aviation-Logo.png'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departure_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the date of departure', default: '2020-01-01T00:00:00.000Z'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departure_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the time of departure', default: '06:00 AM'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the description of the flight', default: 'A flight from Comoros to Tanzania'})@IsString()@Length(0, 1000)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the country of destination of the flight', default: 'Tanzania'})@IsString()@Length(0, 200)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination_airport_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the name of the airport of destination', default: 'Julius Nyerere International Airport'})@IsString()@Length(0, 200)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flight_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the flight identification number', default: 'AB123'})@IsString()@Length(0, 200)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the country of origin of the flight', default: 'Comoros'})@IsString()@Length(0, 200)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin_airport_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the name of the airport of origin', default: 'Prince Said Ibrahim International Airport'})@IsString()@Length(0, 200)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refundable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, description: 'whether the flight is refundable', default: false})@IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_base_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the base price of the flight', default: '1000.00'})@IsDecimal()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:154\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_price_business_class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the price of the flight for business class', default: '2000.00'})@IsDecimal()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_price_first_class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the price of the flight for first class', default: '3000.00'})@IsDecimal()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/create-flight.dto.ts:172\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsDate,\n  IsDecimal,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class CreateFlightDto {\n  @ApiProperty({\n    type: String,\n    description: 'the name of the airline',\n    default: 'AB Aviation',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  airline: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the flight identification number',\n    default: 'AB123',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  flight_number: string;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the maximum number of seats available',\n    default: 20,\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  capacity: number;\n\n  @ApiProperty({\n    type: String,\n    description: 'the country of origin of the flight',\n    default: 'Comoros',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  origin: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the country of destination of the flight',\n    default: 'Tanzania',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  destination: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the name of the airport of origin',\n    default: 'Prince Said Ibrahim International Airport',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  origin_airport_name: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the name of the airport of destination',\n    default: 'Julius Nyerere International Airport',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  destination_airport_name: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the time of departure',\n    default: '06:00 AM',\n  })\n  @IsString()\n  @IsNotEmpty()\n  departure_time: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the time of arrival',\n    default: '10:00 PM',\n  })\n  @IsString()\n  @IsNotEmpty()\n  arrival_time: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the date of departure',\n    default: '2020-01-01T00:00:00.000Z',\n  })\n  @IsString()\n  @IsNotEmpty()\n  departure_date: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the date of arrival',\n    default: '2020-01-01T00:00:00.000Z',\n  })\n  @IsString()\n  @IsNotEmpty()\n  arrival_date: string;\n\n  @ApiProperty({\n    type: Boolean,\n    description: 'whether the flight is refundable',\n    default: false,\n  })\n  @IsBoolean()\n  @IsNotEmpty()\n  refundable: boolean;\n\n  @ApiProperty({\n    type: String,\n    description: 'the url of the company logo',\n    default:\n      'https://www.abaviation.com/wp-content/uploads/2019/12/AB-Aviation-Logo.png',\n  })\n  @IsString()\n  @IsNotEmpty()\n  company_logo: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the description of the flight',\n    default: 'A flight from Comoros to Tanzania',\n  })\n  @IsString()\n  @Length(0, 1000)\n  @IsNotEmpty()\n  description: string;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the base price of the flight',\n    default: '1000.00',\n  })\n  @IsDecimal()\n  @IsNotEmpty()\n  seat_base_price: number;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the price of the flight for business class',\n    default: '2000.00',\n  })\n  @IsDecimal()\n  @IsNotEmpty()\n  seat_price_business_class: number;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the price of the flight for first class',\n    default: '3000.00',\n  })\n  @IsDecimal()\n  @IsNotEmpty()\n  seat_price_first_class: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                first_name\n                            \n                            \n                                last_name\n                            \n                            \n                                password\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the first name of the user', default: 'John'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the last name of the user', default: 'Doe'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the password of the user', default: '123456'})@IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the valid jwt token which includes the email of the user', default: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlpbWthYm9zc0BnbWFpbC5jb20iLCJpYXQiOjE2NDgzMTIwMTQsImV4cCI6MTY0ODMxNTYxNH0.slrCrnE_1WKyrM5-IBu3gxnbymX5X_CzQwviNolBWeI'})@IsNotEmpty()@IsJWT()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsJWT, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    type: String,\n    description: 'the first name of the user',\n    default: 'John',\n  })\n  @IsString()\n  @IsNotEmpty()\n  first_name: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the last name of the user',\n    default: 'Doe',\n  })\n  @IsString()\n  @IsNotEmpty()\n  last_name: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the password of the user',\n    default: '123456',\n  })\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  password: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the valid jwt token which includes the email of the user',\n    default:\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlpbWthYm9zc0BnbWFpbC5jb20iLCJpYXQiOjE2NDgzMTIwMTQsImV4cCI6MTY0ODMxNTYxNH0.slrCrnE_1WKyrM5-IBu3gxnbymX5X_CzQwviNolBWeI',\n  })\n  @IsNotEmpty()\n  @IsJWT()\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrentUserMiddleware.html":{"url":"injectables/CurrentUserMiddleware.html","title":"injectable - CurrentUserMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CurrentUserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/middlewares/current-user.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/middlewares/current-user.middleware.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/users/middlewares/current-user.middleware.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { User } from '../user.entity';\nimport { UsersService } from '../users.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      currentUser?: User;\n    }\n  }\n}\n\n@Injectable()\nexport class CurrentUserMiddleware implements NestMiddleware {\n  constructor(private usersService: UsersService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const { userId } = req.session || {};\n    if (userId) {\n      const user = await this.usersService.findOne(userId);\n\n      req.currentUser = user;\n    }\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailVerificationDto.html":{"url":"classes/EmailVerificationDto.html","title":"class - EmailVerificationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailVerificationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/email-verification.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the email of the user', default: 'johndoe@email.com'})@IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/email-verification.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class EmailVerificationDto {\n  @ApiProperty({\n    type: String,\n    description: 'the email of the user',\n    default: 'johndoe@email.com',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Flight.html":{"url":"entities/Flight.html","title":"entity - Flight","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Flight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flights/flight.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                airline\n                            \n                            \n                                arrival_date\n                            \n                            \n                                arrival_time\n                            \n                            \n                                capacity\n                            \n                            \n                                company_logo\n                            \n                            \n                                departure_date\n                            \n                            \n                                departure_time\n                            \n                            \n                                description\n                            \n                            \n                                destination\n                            \n                            \n                                destination_airport_name\n                            \n                            \n                                flight_number\n                            \n                            \n                                id\n                            \n                            \n                                origin\n                            \n                            \n                                origin_airport_name\n                            \n                            \n                                refundable\n                            \n                            \n                                seat_base_price\n                            \n                            \n                                seat_price_business_class\n                            \n                            \n                                seat_price_first_class\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        airline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrival_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrival_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'time', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        company_logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departure_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departure_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'time', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 1000, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination_airport_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flight_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin_airport_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refundable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_base_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'numeric', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_price_business_class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'numeric', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_price_first_class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'numeric', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/flight.entity.ts:122\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  AfterInsert,\n  AfterRemove,\n  AfterUpdate,\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Flight {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  @Column({\n    type: 'varchar',\n    length: 200,\n    nullable: false,\n  })\n  airline: string;\n\n  @Column({\n    type: 'varchar',\n    length: 200,\n    nullable: false,\n  })\n  flight_number: string;\n\n  @Column({\n    type: 'int',\n    nullable: false,\n  })\n  capacity: number;\n\n  @Column({\n    type: 'varchar',\n    length: 200,\n    nullable: false,\n  })\n  origin: string;\n\n  @Column({\n    type: 'varchar',\n    length: 200,\n    nullable: false,\n  })\n  destination: string;\n\n  @Column({\n    type: 'varchar',\n    length: 200,\n    nullable: false,\n  })\n  origin_airport_name: string;\n\n  @Column({\n    type: 'varchar',\n    length: 200,\n    nullable: false,\n  })\n  destination_airport_name: string;\n\n  @Column({\n    type: 'time',\n    nullable: false,\n  })\n  departure_time: string;\n\n  @Column({\n    type: 'time',\n    nullable: false,\n  })\n  arrival_time: string;\n\n  @Column({\n    type: 'date',\n    nullable: false,\n  })\n  departure_date: string;\n\n  @Column({\n    type: 'date',\n    nullable: false,\n  })\n  arrival_date: string;\n\n  @Column({\n    type: 'boolean',\n    nullable: false,\n  })\n  refundable: boolean;\n\n  @Column({\n    type: 'varchar',\n    nullable: false,\n  })\n  company_logo: string;\n\n  @Column({\n    type: 'varchar',\n    length: 1000,\n    nullable: false,\n  })\n  description: string;\n\n  @Column({\n    type: 'numeric',\n    nullable: false,\n  })\n  seat_base_price: number;\n\n  @Column({\n    type: 'numeric',\n    nullable: false,\n  })\n  seat_price_business_class: number;\n\n  @Column({\n    type: 'numeric',\n    nullable: false,\n  })\n  seat_price_first_class: number;\n\n  @AfterInsert()\n  logInsert() {\n    console.log('Flight inserted:', this);\n  }\n\n  @AfterUpdate()\n  logUpdate() {\n    console.log('Flight updated:', this);\n  }\n\n  @AfterRemove()\n  logRemove() {\n    console.log('Flight removed:', this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FlightsController.html":{"url":"controllers/FlightsController.html","title":"controller - FlightsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FlightsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flights/flights.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/flights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFlight\n                            \n                            \n                                    Async\n                                updateFlight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createFlight\n                        \n                    \n                \n            \n            \n                \n                    \n                    createFlight(body: CreateFlightDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(AdminGuard)@ApiCreatedResponse({description: 'The flight was created successfully'})@ApiBadRequestResponse({description: 'Failed to create the flight'})\n                \n            \n\n            \n                \n                    Defined in src/flights/flights.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateFlightDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateFlight\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFlight(body: UpdateFlightDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseGuards(AdminGuard)@HttpCode(200)@ApiCreatedResponse({description: 'The flight was updated successfully'})@ApiBadRequestResponse({description: 'Failed to update the flight'})\n                \n            \n\n            \n                \n                    Defined in src/flights/flights.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UpdateFlightDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  HttpCode,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { AdminGuard } from '../guards/admin.guard';\nimport { CreateFlightDto } from './dtos/create-flight.dto';\nimport { UpdateFlightDto } from './dtos/update-flight.dto';\nimport { FlightsService } from './flights.service';\n\n@ApiTags('flights')\n@Controller('api/flights')\nexport class FlightsController {\n  constructor(private flightsService: FlightsService) {}\n\n  // Creates a new flight and returns the created flight only for admin user\n  @Post()\n  @UseGuards(AdminGuard)\n  @ApiCreatedResponse({\n    description: 'The flight was created successfully',\n  })\n  @ApiBadRequestResponse({\n    description: 'Failed to create the flight',\n  })\n  async createFlight(@Body() body: CreateFlightDto) {\n    return this.flightsService.create(body);\n  }\n\n  // Update flight and returns the updated flight only for admin user\n  @Patch('/:id')\n  @UseGuards(AdminGuard)\n  @HttpCode(200)\n  @ApiCreatedResponse({\n    description: 'The flight was updated successfully',\n  })\n  @ApiBadRequestResponse({\n    description: 'Failed to update the flight',\n  })\n  async updateFlight(@Body() body: UpdateFlightDto) {\n    return this.flightsService.update(body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FlightsModule.html":{"url":"modules/FlightsModule.html","title":"module - FlightsModule","body":"\n                   \n\n\n\n\n    Modules\n    FlightsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FlightsModule\n\n\n\ncluster_FlightsModule_providers\n\n\n\n\nFlightsService\n\nFlightsService\n\n\n\nFlightsModule\n\nFlightsModule\n\nFlightsModule -->\n\nFlightsService->FlightsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/flights/flights.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FlightsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FlightsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FlightsService } from './flights.service';\nimport { FlightsController } from './flights.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Flight } from './flight.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Flight])],\n  providers: [FlightsService],\n  controllers: [FlightsController],\n})\nexport class FlightsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FlightsService.html":{"url":"injectables/FlightsService.html","title":"injectable - FlightsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FlightsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flights/flights.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/flights/flights.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(flight: CreateFlightDto)\n                \n            \n\n\n            \n                \n                    Defined in src/flights/flights.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flight\n                                    \n                                                CreateFlightDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(flight: UpdateFlightDto)\n                \n            \n\n\n            \n                \n                    Defined in src/flights/flights.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flight\n                                    \n                                                UpdateFlightDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateFlightDto } from './dtos/create-flight.dto';\nimport { UpdateFlightDto } from './dtos/update-flight.dto';\nimport { Flight } from './flight.entity';\n\n@Injectable()\nexport class FlightsService {\n  constructor(@InjectRepository(Flight) private repo: Repository) {}\n\n  async create(flight: CreateFlightDto) {\n    try {\n      const newFlight = this.repo.create(flight);\n      return this.repo.save(newFlight);\n    } catch (err) {\n      console.log(err);\n      throw new BadRequestException('Failed to create a new flight');\n    }\n  }\n\n  async update(flight: UpdateFlightDto) {\n    console.log('Hello');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordResetDto.html":{"url":"classes/PasswordResetDto.html","title":"class - PasswordResetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordResetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/password-reset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the new password of the user', default: '987654321'})@IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/password-reset.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the valid jwt token which includes the email of the user', default: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlpbWthYm9zc0BnbWFpbC5jb20iLCJpYXQiOjE2NDgzMTIwMTQsImV4cCI6MTY0ODMxNTYxNH0.slrCrnE_1WKyrM5-IBu3gxnbymX5X_CzQwviNolBWeI'})@IsNotEmpty()@IsJWT()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/password-reset.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsJWT, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class PasswordResetDto {\n  @ApiProperty({\n    type: String,\n    description: 'the new password of the user',\n    default: '987654321',\n  })\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  newPassword: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the valid jwt token which includes the email of the user',\n    default:\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InlpbWthYm9zc0BnbWFpbC5jb20iLCJpYXQiOjE2NDgzMTIwMTQsImV4cCI6MTY0ODMxNTYxNH0.slrCrnE_1WKyrM5-IBu3gxnbymX5X_CzQwviNolBWeI',\n  })\n  @IsNotEmpty()\n  @IsJWT()\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/middlewares/current-user.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            currentUser\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentUser:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { User } from '../user.entity';\nimport { UsersService } from '../users.service';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      currentUser?: User;\n    }\n  }\n}\n\n@Injectable()\nexport class CurrentUserMiddleware implements NestMiddleware {\n  constructor(private usersService: UsersService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const { userId } = req.session || {};\n    if (userId) {\n      const user = await this.usersService.findOne(userId);\n\n      req.currentUser = user;\n    }\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SerializeInterceptor.html":{"url":"classes/SerializeInterceptor.html","title":"class - SerializeInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SerializeInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/serialize.interceptor.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        NestInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dto: ClassConstructor)\n                    \n                \n                        \n                            \n                                Defined in src/interceptors/serialize.interceptor.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dto\n                                                  \n                                                        \n                                                                        ClassConstructor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/serialize.interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  UseInterceptors,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { plainToClass } from 'class-transformer';\n\ninterface ClassConstructor {\n  new (...args: any[]): {};\n}\n\nexport function Serialize(dto: ClassConstructor) {\n  return UseInterceptors(new SerializeInterceptor(dto));\n}\n\nexport class SerializeInterceptor implements NestInterceptor {\n  constructor(private dto: ClassConstructor) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    // Run something before a request is handled by the request handler\n    // console.log(\"I'm running before the handler: \", context);\n    return next.handle().pipe(\n      map((data: any) => {\n        // Run something before the response is sent out\n        // console.log(\"I'm running before response is sent out: \", data);\n        return plainToClass(this.dto, data, {\n          excludeExtraneousValues: true,\n        });\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFlightDto.html":{"url":"classes/UpdateFlightDto.html","title":"class - UpdateFlightDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFlightDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/flights/dtos/update-flight.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                airline\n                            \n                            \n                                arrival_date\n                            \n                            \n                                arrival_time\n                            \n                            \n                                capacity\n                            \n                            \n                                company_logo\n                            \n                            \n                                departure_date\n                            \n                            \n                                departure_time\n                            \n                            \n                                description\n                            \n                            \n                                destination\n                            \n                            \n                                destination_airport_name\n                            \n                            \n                                flight_number\n                            \n                            \n                                origin\n                            \n                            \n                                origin_airport_name\n                            \n                            \n                                refundable\n                            \n                            \n                                seat_base_price\n                            \n                            \n                                seat_price_business_class\n                            \n                            \n                                seat_price_first_class\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        airline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the name of the airline', default: 'AB Aviation'})@IsString()@Length(0, 200)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrival_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the date of arrival', default: '2020-01-01T00:00:00.000Z'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrival_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the time of arrival', default: '10:00 PM'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the maximum number of seats available', default: 20})@IsNumber()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        company_logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the url of the company logo', default: 'https://www.abaviation.com/wp-content/uploads/2019/12/AB-Aviation-Logo.png'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departure_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the date of departure', default: '2020-01-01T00:00:00.000Z'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departure_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the time of departure', default: '06:00 AM'})@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the description of the flight', default: 'A flight from Comoros to Tanzania'})@IsString()@Length(0, 1000)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:159\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the country of destination of the flight', default: 'Tanzania'})@IsString()@Length(0, 200)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination_airport_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the name of the airport of destination', default: 'Julius Nyerere International Airport'})@IsString()@Length(0, 200)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flight_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the flight identification number', default: 'AB123'})@IsString()@Length(0, 200)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the country of origin of the flight', default: 'Comoros'})@IsString()@Length(0, 200)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin_airport_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the name of the airport of origin', default: 'Prince Said Ibrahim International Airport'})@IsString()@Length(0, 200)@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refundable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, description: 'whether the flight is refundable', default: false})@IsBoolean()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_base_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the base price of the flight', default: '1000.00'})@IsDecimal()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_price_business_class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the price of the flight for business class', default: '2000.00'})@IsDecimal()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:179\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_price_first_class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'the price of the flight for first class', default: '3000.00'})@IsDecimal()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/flights/dtos/update-flight.dto.ts:189\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsDecimal,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class UpdateFlightDto {\n  @ApiProperty({\n    type: String,\n    description: 'the name of the airline',\n    default: 'AB Aviation',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  @IsOptional()\n  airline: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the flight identification number',\n    default: 'AB123',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  @IsOptional()\n  flight_number: string;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the maximum number of seats available',\n    default: 20,\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  @IsOptional()\n  capacity: number;\n\n  @ApiProperty({\n    type: String,\n    description: 'the country of origin of the flight',\n    default: 'Comoros',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  @IsOptional()\n  origin: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the country of destination of the flight',\n    default: 'Tanzania',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  @IsOptional()\n  destination: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the name of the airport of origin',\n    default: 'Prince Said Ibrahim International Airport',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  @IsOptional()\n  origin_airport_name: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the name of the airport of destination',\n    default: 'Julius Nyerere International Airport',\n  })\n  @IsString()\n  @Length(0, 200)\n  @IsNotEmpty()\n  @IsOptional()\n  destination_airport_name: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the time of departure',\n    default: '06:00 AM',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  departure_time: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the time of arrival',\n    default: '10:00 PM',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  arrival_time: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the date of departure',\n    default: '2020-01-01T00:00:00.000Z',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  departure_date: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the date of arrival',\n    default: '2020-01-01T00:00:00.000Z',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  arrival_date: string;\n\n  @ApiProperty({\n    type: Boolean,\n    description: 'whether the flight is refundable',\n    default: false,\n  })\n  @IsBoolean()\n  @IsNotEmpty()\n  @IsOptional()\n  refundable: boolean;\n\n  @ApiProperty({\n    type: String,\n    description: 'the url of the company logo',\n    default:\n      'https://www.abaviation.com/wp-content/uploads/2019/12/AB-Aviation-Logo.png',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  company_logo: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the description of the flight',\n    default: 'A flight from Comoros to Tanzania',\n  })\n  @IsString()\n  @Length(0, 1000)\n  @IsNotEmpty()\n  @IsOptional()\n  description: string;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the base price of the flight',\n    default: '1000.00',\n  })\n  @IsDecimal()\n  @IsNotEmpty()\n  @IsOptional()\n  seat_base_price: number;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the price of the flight for business class',\n    default: '2000.00',\n  })\n  @IsDecimal()\n  @IsNotEmpty()\n  @IsOptional()\n  seat_price_business_class: number;\n\n  @ApiProperty({\n    type: Number,\n    description: 'the price of the flight for first class',\n    default: '3000.00',\n  })\n  @IsDecimal()\n  @IsNotEmpty()\n  @IsOptional()\n  seat_price_first_class: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created_at\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                first_name\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                is_email_verified\n                            \n                            \n                                    Public\n                                last_name\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                role\n                            \n                            \n                                    Public\n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6), nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', unique: true, length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        is_email_verified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', default: false, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 200, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserRole, default: undefined, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6), onUpdate: 'CURRENT_TIMESTAMP(6)', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:61\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  AfterInsert,\n  AfterRemove,\n  AfterUpdate,\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  Unique,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport enum UserRole {\n  ADMIN = 'sysadmin',\n  CUSTOMER = 'customer',\n}\n@Entity()\n@Unique(['email'])\nexport class User {\n  @PrimaryGeneratedColumn()\n  public id: number;\n\n  @Column({ type: 'varchar', length: 200, nullable: false })\n  public first_name: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: false })\n  public last_name: string;\n\n  @Column({\n    type: 'varchar',\n    unique: true,\n    length: 200,\n    nullable: false,\n  })\n  public email: string;\n\n  @Column({ type: 'varchar', length: 200, nullable: false })\n  public password: string;\n\n  @Column({\n    type: 'enum',\n    enum: UserRole,\n    default: UserRole.CUSTOMER,\n    nullable: false,\n  })\n  public role: UserRole;\n\n  @CreateDateColumn({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP(6)',\n    nullable: false,\n  })\n  public created_at: Date;\n\n  @UpdateDateColumn({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP(6)',\n    onUpdate: 'CURRENT_TIMESTAMP(6)',\n    nullable: false,\n  })\n  public updated_at: Date;\n\n  @Column({\n    type: 'boolean',\n    default: false,\n    nullable: false,\n  })\n  public is_email_verified: boolean;\n\n  @AfterInsert()\n  logInsert() {\n    console.log('User inserted:', this);\n  }\n\n  @AfterUpdate()\n  logUpdate() {\n    console.log('User updated:', this);\n  }\n\n  @AfterRemove()\n  logRemove() {\n    console.log('User removed:', this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserCredentialsDto.html":{"url":"classes/UserCredentialsDto.html","title":"class - UserCredentialsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserCredentialsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/user-credentials.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the email of the user', default: 'johndoe@email.com'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user-credentials.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'the password of the user', default: '123456'})@IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user-credentials.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class UserCredentialsDto {\n  @ApiProperty({\n    type: String,\n    description: 'the email of the user',\n    default: 'johndoe@email.com',\n  })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'the password of the user',\n    default: '123456',\n  })\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                first_name\n                            \n                            \n                                id\n                            \n                            \n                                is_email_verified\n                            \n                            \n                                last_name\n                            \n                            \n                                role\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_email_verified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { UserRole } from '../user.entity';\n\nexport class UserDto {\n  @Expose()\n  id: number;\n\n  @Expose()\n  first_name: string;\n\n  @Expose()\n  last_name: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  role: UserRole;\n\n  @Expose()\n  created_at: Date;\n\n  @Expose()\n  updated_at: Date;\n\n  @Expose()\n  is_email_verified: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                passwordReset\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                sendEmailVerification\n                            \n                            \n                                    Async\n                                sendPasswordResetEmail\n                            \n                            \n                                    Async\n                                signin\n                            \n                            \n                                signOut\n                            \n                            \n                                whoAmI\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        passwordReset\n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordReset(body: PasswordResetDto, session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/password-reset')@HttpCode(200)@ApiOkResponse({description: 'The password reset was successful'})@ApiBadRequestResponse({description: 'Invalid token'})@ApiNotFoundResponse({description: 'User not found'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                PasswordResetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(body: CreateUserDto, session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')@ApiCreatedResponse({description: 'The user was created successfully'})@ApiBadRequestResponse({description: 'Invalid token'})@ApiBadRequestResponse({description: 'User already exists'})@ApiNotFoundResponse({description: 'User not found'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailVerification\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerification(body: EmailVerificationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/send-email-verification')@HttpCode(200)@ApiOkResponse({description: 'The email verification email was sent successfully'})@ApiBadRequestResponse({description: 'Failed to send email verification email'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                EmailVerificationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordResetEmail(body: EmailVerificationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/send-password-reset-email')@HttpCode(200)@ApiOkResponse({description: 'The password reset email was sent successfully'})@ApiBadRequestResponse({description: 'Failed to send password reset email'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                EmailVerificationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(body: UserCredentialsDto, session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signin')@HttpCode(200)@ApiOkResponse({description: 'The user was successfully logged in'})@ApiNotFoundResponse({description: 'User not found'})@ApiUnauthorizedResponse({description: 'Incorrect credentials'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UserCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut(session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signout')@HttpCode(200)@ApiOkResponse({description: 'The user was successfully logged out'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoAmI\n                        \n                    \n                \n            \n            \n                \nwhoAmI(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('whoami')@UseGuards(AuthGuard)@ApiOkResponse({description: 'The user was successfully fetched'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  Post,\n  Session,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { AuthGuard } from 'src/guards/auth.guard';\nimport { Serialize } from 'src/interceptors/serialize.interceptor';\nimport { AuthService } from './auth.service';\nimport { CurrentUser } from './decorators/current-user.decorator';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { EmailVerificationDto } from './dtos/email-verification.dto';\nimport { PasswordResetDto } from './dtos/password-reset.dto';\nimport { UserCredentialsDto } from './dtos/user-credentials.dto';\nimport { UserDto } from './dtos/user.dto';\nimport { User } from './user.entity';\nimport { UsersService } from './users.service';\n\n@ApiTags('users')\n@Serialize(UserDto)\n@Controller('api/auth')\nexport class UsersController {\n  constructor(\n    private usersService: UsersService,\n    private authService: AuthService,\n  ) {}\n\n  @Post('/send-email-verification')\n  @HttpCode(200)\n  @ApiOkResponse({\n    description: 'The email verification email was sent successfully',\n  })\n  @ApiBadRequestResponse({\n    description: 'Failed to send email verification email',\n  })\n  async sendEmailVerification(@Body() body: EmailVerificationDto) {\n    return this.authService.sendEmailVerification(body.email);\n  }\n\n  @Post('/send-password-reset-email')\n  @HttpCode(200)\n  @ApiOkResponse({\n    description: 'The password reset email was sent successfully',\n  })\n  @ApiBadRequestResponse({ description: 'Failed to send password reset email' })\n  async sendPasswordResetEmail(@Body() body: EmailVerificationDto) {\n    return this.authService.sendPasswordResetEmail(body.email);\n  }\n\n  @Post('/password-reset')\n  @HttpCode(200)\n  @ApiOkResponse({\n    description: 'The password reset was successful',\n  })\n  @ApiBadRequestResponse({ description: 'Invalid token' })\n  @ApiNotFoundResponse({ description: 'User not found' })\n  async passwordReset(@Body() body: PasswordResetDto, @Session() session: any) {\n    session.userId = null;\n    return this.authService.passwordReset(body.token, body.newPassword);\n  }\n\n  @Post('/register')\n  @ApiCreatedResponse({\n    description: 'The user was created successfully',\n  })\n  @ApiBadRequestResponse({ description: 'Invalid token' })\n  @ApiBadRequestResponse({ description: 'User already exists' })\n  @ApiNotFoundResponse({ description: 'User not found' })\n  async register(@Body() body: CreateUserDto, @Session() session: any) {\n    const user = await this.authService.register(body);\n    session.userId = user.id;\n    return user;\n  }\n\n  @Post('/signin')\n  @HttpCode(200)\n  @ApiOkResponse({\n    description: 'The user was successfully logged in',\n  })\n  @ApiNotFoundResponse({ description: 'User not found' })\n  @ApiUnauthorizedResponse({ description: 'Incorrect credentials' })\n  async signin(@Body() body: UserCredentialsDto, @Session() session: any) {\n    const user = await this.authService.signin(body.email, body.password);\n    session.userId = user.id;\n    return user;\n  }\n\n  @Get('whoami')\n  @UseGuards(AuthGuard)\n  @ApiOkResponse({ description: 'The user was successfully fetched' })\n  whoAmI(@CurrentUser() user: User) {\n    return user;\n  }\n\n  @Post('/signout')\n  @HttpCode(200)\n  @ApiOkResponse({ description: 'The user was successfully logged out' })\n  signOut(@Session() session: any) {\n    session.userId = null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.module.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthService } from './auth.service';\nimport { jwtConstants } from './constants';\nimport { CurrentUserMiddleware } from './middlewares/current-user.middleware';\nimport { User } from './user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '1h' },\n    }),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService, AuthService],\n})\nexport class UsersModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(CurrentUserMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, attrs: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attrs\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { User } from './user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectRepository(User) private repo: Repository) {}\n\n  async create(user: CreateUserDto) {\n    try {\n      const newUser = this.repo.create(user);\n      return this.repo.save(newUser);\n    } catch (err) {\n      console.log(err);\n      throw new BadRequestException('Failed to create a new user');\n    }\n  }\n\n  async findOne(id: number) {\n    const user = await this.repo.findOne(id);\n\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n\n    return user;\n  }\n\n  async find(email: string) {\n    const users = await this.repo.find({ email });\n\n    if (!users) {\n      throw new NotFoundException('users not found');\n    }\n\n    return users;\n  }\n\n  async update(id: number, attrs: Partial) {\n    const user = await this.findOne(id);\n\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n\n    Object.assign(user, attrs);\n\n    return this.repo.save(user);\n  }\n\n  async remove(id: number) {\n    const user = await this.findOne(id);\n\n    if (!user) {\n      throw new NotFoundException('user not found');\n    }\n\n    return this.repo.remove(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            cookieSession\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/flights/dtos/create-flight.dto.ts\n            \n            class\n            CreateFlightDto\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/flights/dtos/update-flight.dto.ts\n            \n            class\n            UpdateFlightDto\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/flights/flight.entity.ts\n            \n            entity\n            Flight\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/flights/flights.controller.ts\n            \n            controller\n            FlightsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/flights/flights.service.ts\n            \n            injectable\n            FlightsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/helpers/email.ts\n            \n            function\n            sendEmailWithNodemailer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interceptors/serialize.interceptor.ts\n            \n            class\n            SerializeInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interceptors/serialize.interceptor.ts\n            \n            interface\n            ClassConstructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interceptors/serialize.interceptor.ts\n            \n            function\n            Serialize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/auth.service.ts\n            \n            variable\n            scrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/constants/index.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/email-verification.dto.ts\n            \n            class\n            EmailVerificationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/password-reset.dto.ts\n            \n            class\n            PasswordResetDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/user-credentials.dto.ts\n            \n            class\n            UserCredentialsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/middlewares/current-user.middleware.ts\n            \n            injectable\n            CurrentUserMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/middlewares/current-user.middleware.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            @types/cookie-session : ^2.0.44\n        \n            @types/nodemailer : ^6.4.4\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cookie-session : ^2.0.0\n        \n            cross-env : ^7.0.3\n        \n            dotenv : ^16.0.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            nodemailer : ^6.7.3\n        \n            pg : ^8.7.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.45\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : sysadmin\n                            \n                        \n                        \n                            \n                                 CUSTOMER\n                            \n                        \n                        \n                            \n                                Value : customer\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            sendEmailWithNodemailer   (src/.../email.ts)\n                        \n                        \n                            Serialize   (src/.../serialize.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/helpers/email.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sendEmailWithNodemailer\n                        \n                    \n                \n            \n            \n                \nsendEmailWithNodemailer(emailData: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/interceptors/serialize.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Serialize\n                        \n                    \n                \n            \n            \n                \nSerialize(dto: ClassConstructor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                ClassConstructor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nYVANIG BACKEND 2.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FlightsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FlightsModule\n\n\n\ncluster_FlightsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nFlightsModule\n\nFlightsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nFlightsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nFlightsService\n\nFlightsService\n\nFlightsModule -->\n\nFlightsService->FlightsModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : Kaym Kassai\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieSession   (src/.../app.module.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            jwtConstants   (src/.../index.ts)\n                        \n                        \n                            scrypt   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cookieSession\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('cookie-session')\n                    \n                \n\n\n        \n    \n\n    src/users/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: never, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n    return request.currentUser;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/users/constants/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: process.env.TOKEN_KEY,\n}\n                    \n                \n\n\n        \n    \n\n    src/users/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : promisify(_scrypt)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
